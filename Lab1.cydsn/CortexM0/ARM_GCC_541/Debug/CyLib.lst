ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.80
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  75:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  76:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  77:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  78:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  79:Generated_Source\PSoC4/CyLib.c **** 
  80:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  81:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  85:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  86:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  87:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  89:Generated_Source\PSoC4/CyLib.c **** *
  90:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
  91:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
  92:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
  95:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  98:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  99:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 99 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 100 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 101:Generated_Source\PSoC4/CyLib.c **** 
 102:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 103:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 104:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 105:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 106:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 115 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 08010B40 		.word	1074462984
  47              		.cfi_endproc
  48              	.LFE1:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoDisableWcoLock
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoDisableWcoLock, %function
  56              	CySysClkImoDisableWcoLock:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 4


  57              	.LFB4:
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 121:Generated_Source\PSoC4/CyLib.c **** *
 122:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 123:Generated_Source\PSoC4/CyLib.c **** *
 124:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 125:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 126:Generated_Source\PSoC4/CyLib.c **** *
 127:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 130:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 131:Generated_Source\PSoC4/CyLib.c **** {
 132:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 133:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 134:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 135:Generated_Source\PSoC4/CyLib.c **** 
 136:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 137:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 138:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 139:Generated_Source\PSoC4/CyLib.c **** 
 140:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 141:Generated_Source\PSoC4/CyLib.c **** }
 142:Generated_Source\PSoC4/CyLib.c **** 
 143:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 146:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 147:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 148:Generated_Source\PSoC4/CyLib.c ****     *
 149:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 150:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 151:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 152:Generated_Source\PSoC4/CyLib.c ****     *
 153:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 154:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 155:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 156:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 157:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 160:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 163:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 164:Generated_Source\PSoC4/CyLib.c ****     *
 165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 166:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 167:Generated_Source\PSoC4/CyLib.c ****     {
 168:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 169:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 170:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 171:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 5


 172:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 173:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 174:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 175:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 176:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 177:Generated_Source\PSoC4/CyLib.c **** 
 178:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 179:Generated_Source\PSoC4/CyLib.c ****         {
 180:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 183:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 185:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 186:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 187:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 188:Generated_Source\PSoC4/CyLib.c **** 
 189:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 190:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 191:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 192:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 193:Generated_Source\PSoC4/CyLib.c ****                 {
 194:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 195:Generated_Source\PSoC4/CyLib.c ****                     {
 196:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 197:Generated_Source\PSoC4/CyLib.c ****                         break;
 198:Generated_Source\PSoC4/CyLib.c ****                     }
 199:Generated_Source\PSoC4/CyLib.c ****                 }
 200:Generated_Source\PSoC4/CyLib.c ****             #else
 201:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 202:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 203:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 204:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 205:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 206:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 207:Generated_Source\PSoC4/CyLib.c ****                 #else
 208:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 209:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 210:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 211:Generated_Source\PSoC4/CyLib.c **** 
 212:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 213:Generated_Source\PSoC4/CyLib.c ****             
 214:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 215:Generated_Source\PSoC4/CyLib.c ****             
 216:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 217:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 218:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 219:Generated_Source\PSoC4/CyLib.c ****                 {
 220:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 221:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 222:Generated_Source\PSoC4/CyLib.c ****                 }
 223:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 224:Generated_Source\PSoC4/CyLib.c **** 
 225:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 226:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 227:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 228:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 6


 229:Generated_Source\PSoC4/CyLib.c **** 
 230:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 231:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 234:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 235:Generated_Source\PSoC4/CyLib.c **** 
 236:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 237:Generated_Source\PSoC4/CyLib.c ****             
 238:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 239:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 240:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 241:Generated_Source\PSoC4/CyLib.c **** 
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 243:Generated_Source\PSoC4/CyLib.c ****             
 244:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 248:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 249:Generated_Source\PSoC4/CyLib.c ****             }
 250:Generated_Source\PSoC4/CyLib.c **** 
 251:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 252:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 253:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 254:Generated_Source\PSoC4/CyLib.c **** 
 255:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 256:Generated_Source\PSoC4/CyLib.c **** 
 257:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 258:Generated_Source\PSoC4/CyLib.c ****         }
 259:Generated_Source\PSoC4/CyLib.c ****     }
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 263:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 264:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 265:Generated_Source\PSoC4/CyLib.c ****     *
 266:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 267:Generated_Source\PSoC4/CyLib.c ****     *
 268:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 269:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 270:Generated_Source\PSoC4/CyLib.c ****     *
 271:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 272:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 275:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 276:Generated_Source\PSoC4/CyLib.c ****     {
  58              		.loc 1 276 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63              	.LVL0:
 277:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 278:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 279:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 7


 280:Generated_Source\PSoC4/CyLib.c **** 
 281:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 282:Generated_Source\PSoC4/CyLib.c ****         
 283:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 284:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 285:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 286:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
  64              		.loc 1 286 0
  65 0000 0023     		movs	r3, #0
  66 0002 0AE0     		b	.L5
  67              	.LVL1:
  68              	.L8:
 287:Generated_Source\PSoC4/CyLib.c ****             {
 288:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
  69              		.loc 1 288 0
  70 0004 0D4A     		ldr	r2, .L9
  71 0006 1268     		ldr	r2, [r2]
  72 0008 3F21     		movs	r1, #63
  73 000a 0A40     		ands	r2, r1
  74 000c 0C49     		ldr	r1, .L9+4
  75 000e C95C     		ldrb	r1, [r1, r3]
  76 0010 8A42     		cmp	r2, r1
  77 0012 01D1     		bne	.L6
 289:Generated_Source\PSoC4/CyLib.c ****                 {
 290:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
  78              		.loc 1 290 0
  79 0014 0333     		adds	r3, r3, #3
  80              	.LVL2:
 291:Generated_Source\PSoC4/CyLib.c ****                     break;
  81              		.loc 1 291 0
  82 0016 03E0     		b	.L7
  83              	.LVL3:
  84              	.L6:
 286:Generated_Source\PSoC4/CyLib.c ****             {
  85              		.loc 1 286 0 discriminator 2
  86 0018 0133     		adds	r3, r3, #1
  87              	.LVL4:
  88              	.L5:
 286:Generated_Source\PSoC4/CyLib.c ****             {
  89              		.loc 1 286 0 is_stmt 0 discriminator 1
  90 001a 2D2B     		cmp	r3, #45
  91 001c F2D9     		bls	.L8
 285:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
  92              		.loc 1 285 0 is_stmt 1
  93 001e 0323     		movs	r3, #3
  94              	.LVL5:
  95              	.L7:
 292:Generated_Source\PSoC4/CyLib.c ****                 }
 293:Generated_Source\PSoC4/CyLib.c ****             }
 294:Generated_Source\PSoC4/CyLib.c ****         #else
 295:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 296:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 297:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 298:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 299:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) & 
 300:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 301:Generated_Source\PSoC4/CyLib.c ****             #else
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 8


 302:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 303:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 304:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 305:Generated_Source\PSoC4/CyLib.c **** 
 306:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 307:Generated_Source\PSoC4/CyLib.c **** 
 308:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  96              		.loc 1 308 0
  97 0020 0849     		ldr	r1, .L9+8
  98 0022 0868     		ldr	r0, [r1]
  99 0024 084A     		ldr	r2, .L9+12
 100 0026 0240     		ands	r2, r0
 101 0028 0A60     		str	r2, [r1]
 309:Generated_Source\PSoC4/CyLib.c ****         
 310:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 312:Generated_Source\PSoC4/CyLib.c ****         #else
 313:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 102              		.loc 1 313 0
 103 002a 084A     		ldr	r2, .L9+16
 104 002c 9446     		mov	ip, r2
 105 002e 6344     		add	r3, r3, ip
 106              	.LVL6:
 107 0030 1B78     		ldrb	r3, [r3]
 108              	.LVL7:
 109 0032 DBB2     		uxtb	r3, r3
 110 0034 064A     		ldr	r2, .L9+20
 111 0036 1360     		str	r3, [r2]
 314:Generated_Source\PSoC4/CyLib.c ****         #endif
 315:Generated_Source\PSoC4/CyLib.c ****     }
 112              		.loc 1 315 0
 113              		@ sp needed
 114 0038 7047     		bx	lr
 115              	.L10:
 116 003a C046     		.align	2
 117              	.L9:
 118 003c 2CFF0B40 		.word	1074528044
 119 0040 00000000 		.word	.LANCHOR0
 120 0044 00002240 		.word	1075970048
 121 0048 FFFFFFBF 		.word	-1073741825
 122 004c CDF1FF0F 		.word	268431821
 123 0050 28FF0B40 		.word	1074528040
 124              		.cfi_endproc
 125              	.LFE4:
 126              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 127              		.section	.text.CySysClkImoStop,"ax",%progbits
 128              		.align	2
 129              		.global	CySysClkImoStop
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysClkImoStop, %function
 133              	CySysClkImoStop:
 134              	.LFB2:
 131:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 135              		.loc 1 131 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 9


 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139 0000 10B5     		push	{r4, lr}
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 4, -8
 142              		.cfi_offset 14, -4
 133:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 143              		.loc 1 133 0
 144 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 145              	.LVL8:
 140:Generated_Source\PSoC4/CyLib.c **** }
 146              		.loc 1 140 0
 147 0006 034A     		ldr	r2, .L12
 148 0008 1368     		ldr	r3, [r2]
 149 000a 5B00     		lsls	r3, r3, #1
 150 000c 5B08     		lsrs	r3, r3, #1
 151 000e 1360     		str	r3, [r2]
 141:Generated_Source\PSoC4/CyLib.c **** 
 152              		.loc 1 141 0
 153              		@ sp needed
 154 0010 10BD     		pop	{r4, pc}
 155              	.L13:
 156 0012 C046     		.align	2
 157              	.L12:
 158 0014 08010B40 		.word	1074462984
 159              		.cfi_endproc
 160              	.LFE2:
 161              		.size	CySysClkImoStop, .-CySysClkImoStop
 162              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 163              		.align	2
 164              		.global	CySysClkImoGetWcoLock
 165              		.code	16
 166              		.thumb_func
 167              		.type	CySysClkImoGetWcoLock, %function
 168              	CySysClkImoGetWcoLock:
 169              	.LFB5:
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 320:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 325:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 328:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 170              		.loc 1 332 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 10


 333:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 175              		.loc 1 333 0
 176 0000 034B     		ldr	r3, .L16
 177 0002 1868     		ldr	r0, [r3]
 178 0004 8023     		movs	r3, #128
 179 0006 DB05     		lsls	r3, r3, #23
 180 0008 1840     		ands	r0, r3
 334:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 181              		.loc 1 334 0
 182 000a 00D0     		beq	.L15
 183 000c 0120     		movs	r0, #1
 184              	.L15:
 335:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 336:Generated_Source\PSoC4/CyLib.c ****     }
 185              		.loc 1 336 0
 186              		@ sp needed
 187 000e 7047     		bx	lr
 188              	.L17:
 189              		.align	2
 190              	.L16:
 191 0010 00002240 		.word	1075970048
 192              		.cfi_endproc
 193              	.LFE5:
 194              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 195              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 196              		.align	2
 197              		.global	CySysClkWriteHfclkDirect
 198              		.code	16
 199              		.thumb_func
 200              		.type	CySysClkWriteHfclkDirect, %function
 201              	CySysClkWriteHfclkDirect:
 202              	.LFB6:
 337:Generated_Source\PSoC4/CyLib.c **** 
 338:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 339:Generated_Source\PSoC4/CyLib.c **** 
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 342:Generated_Source\PSoC4/CyLib.c **** 
 343:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 344:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 345:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 346:Generated_Source\PSoC4/CyLib.c ****     *
 347:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 348:Generated_Source\PSoC4/CyLib.c ****     *
 349:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 350:Generated_Source\PSoC4/CyLib.c ****     *
 351:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 352:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 355:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 358:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 359:Generated_Source\PSoC4/CyLib.c ****     {
 360:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 361:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 11


 362:Generated_Source\PSoC4/CyLib.c ****             
 363:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 364:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 365:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 368:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 369:Generated_Source\PSoC4/CyLib.c **** 
 370:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 371:Generated_Source\PSoC4/CyLib.c ****             {
 372:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 373:Generated_Source\PSoC4/CyLib.c ****                 {
 374:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 375:Generated_Source\PSoC4/CyLib.c ****                     break;
 376:Generated_Source\PSoC4/CyLib.c ****                 }
 377:Generated_Source\PSoC4/CyLib.c ****             }
 378:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 379:Generated_Source\PSoC4/CyLib.c ****         
 380:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 381:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 382:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 383:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 384:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 385:Generated_Source\PSoC4/CyLib.c **** 
 386:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 387:Generated_Source\PSoC4/CyLib.c ****            
 388:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 389:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 390:Generated_Source\PSoC4/CyLib.c ****             
 391:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 392:Generated_Source\PSoC4/CyLib.c ****             {
 393:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 394:Generated_Source\PSoC4/CyLib.c ****                 
 395:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 396:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 397:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 398:Generated_Source\PSoC4/CyLib.c ****                 
 399:Generated_Source\PSoC4/CyLib.c ****             }
 400:Generated_Source\PSoC4/CyLib.c ****             else
 401:Generated_Source\PSoC4/CyLib.c ****             {
 402:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 403:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 404:Generated_Source\PSoC4/CyLib.c **** 
 405:Generated_Source\PSoC4/CyLib.c ****             }
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 408:Generated_Source\PSoC4/CyLib.c ****             {
 409:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 410:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 411:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 412:Generated_Source\PSoC4/CyLib.c ****             }
 413:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 414:Generated_Source\PSoC4/CyLib.c ****             {
 415:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 416:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 417:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 418:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 12


 419:Generated_Source\PSoC4/CyLib.c ****             else
 420:Generated_Source\PSoC4/CyLib.c ****             {
 421:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 422:Generated_Source\PSoC4/CyLib.c ****             }
 423:Generated_Source\PSoC4/CyLib.c ****             
 424:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 425:Generated_Source\PSoC4/CyLib.c **** 
 426:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 427:Generated_Source\PSoC4/CyLib.c ****     }
 428:Generated_Source\PSoC4/CyLib.c **** 
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 431:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 432:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 433:Generated_Source\PSoC4/CyLib.c ****     *
 434:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 435:Generated_Source\PSoC4/CyLib.c ****     *
 436:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 437:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 438:Generated_Source\PSoC4/CyLib.c ****     *
 439:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 440:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 441:Generated_Source\PSoC4/CyLib.c ****     *
 442:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 443:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 444:Generated_Source\PSoC4/CyLib.c ****     {
 445:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 446:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 447:Generated_Source\PSoC4/CyLib.c ****             
 448:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 449:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 450:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 451:Generated_Source\PSoC4/CyLib.c **** 
 452:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 453:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 454:Generated_Source\PSoC4/CyLib.c **** 
 455:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 456:Generated_Source\PSoC4/CyLib.c ****             {
 457:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 458:Generated_Source\PSoC4/CyLib.c ****                 {
 459:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 460:Generated_Source\PSoC4/CyLib.c ****                     break;
 461:Generated_Source\PSoC4/CyLib.c ****                 }
 462:Generated_Source\PSoC4/CyLib.c ****             }           
 463:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 464:Generated_Source\PSoC4/CyLib.c ****         
 465:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 466:Generated_Source\PSoC4/CyLib.c **** 
 467:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 468:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 469:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 470:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 471:Generated_Source\PSoC4/CyLib.c **** 
 472:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 473:Generated_Source\PSoC4/CyLib.c ****             {
 474:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 475:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 13


 476:Generated_Source\PSoC4/CyLib.c ****             
 477:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 478:Generated_Source\PSoC4/CyLib.c ****             
 479:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 480:Generated_Source\PSoC4/CyLib.c ****     }
 481:Generated_Source\PSoC4/CyLib.c **** 
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 484:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 485:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 486:Generated_Source\PSoC4/CyLib.c ****     *
 487:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 488:Generated_Source\PSoC4/CyLib.c ****     *
 489:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 490:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 491:Generated_Source\PSoC4/CyLib.c ****     *
 492:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 493:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 494:Generated_Source\PSoC4/CyLib.c ****     *
 495:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 496:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 497:Generated_Source\PSoC4/CyLib.c ****     {
 498:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 499:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 500:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 501:Generated_Source\PSoC4/CyLib.c ****     }
 502:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 503:Generated_Source\PSoC4/CyLib.c **** 
 504:Generated_Source\PSoC4/CyLib.c **** 
 505:Generated_Source\PSoC4/CyLib.c **** 
 506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 509:Generated_Source\PSoC4/CyLib.c **** *
 510:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 511:Generated_Source\PSoC4/CyLib.c **** *
 512:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 513:Generated_Source\PSoC4/CyLib.c **** *
 514:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 515:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 516:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 517:Generated_Source\PSoC4/CyLib.c **** *
 518:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 519:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 520:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 521:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 522:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 523:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 524:Generated_Source\PSoC4/CyLib.c **** *
 525:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 526:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 527:Generated_Source\PSoC4/CyLib.c **** *
 528:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 529:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 530:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 531:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 532:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 14


 533:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
 534:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 535:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
 536:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 539:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 540:Generated_Source\PSoC4/CyLib.c **** {
 203              		.loc 1 540 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              	.LVL9:
 208 0000 10B5     		push	{r4, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 4, -8
 211              		.cfi_offset 14, -4
 212 0002 0400     		movs	r4, r0
 541:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 542:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 543:Generated_Source\PSoC4/CyLib.c ****     
 544:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 545:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 213              		.loc 1 548 0
 214 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 215              	.LVL10:
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 551:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 552:Generated_Source\PSoC4/CyLib.c ****     {
 553:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 554:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 555:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;        
 556:Generated_Source\PSoC4/CyLib.c ****         
 557:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 558:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 559:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 560:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 561:Generated_Source\PSoC4/CyLib.c ****         
 562:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 563:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 564:Generated_Source\PSoC4/CyLib.c ****         
 565:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 566:Generated_Source\PSoC4/CyLib.c ****         {
 567:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 568:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 569:Generated_Source\PSoC4/CyLib.c ****         }
 570:Generated_Source\PSoC4/CyLib.c ****         
 571:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 572:Generated_Source\PSoC4/CyLib.c ****     }
 573:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 574:Generated_Source\PSoC4/CyLib.c **** 
 575:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 216              		.loc 1 575 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 15


 217 0008 044A     		ldr	r2, .L19
 218 000a 1368     		ldr	r3, [r2]
 219 000c 0721     		movs	r1, #7
 220 000e 8B43     		bics	r3, r1
 221              	.LVL11:
 576:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 577:Generated_Source\PSoC4/CyLib.c **** 
 578:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 579:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 580:Generated_Source\PSoC4/CyLib.c ****     {
 581:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 582:Generated_Source\PSoC4/CyLib.c ****     }
 583:Generated_Source\PSoC4/CyLib.c ****     else
 584:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 585:Generated_Source\PSoC4/CyLib.c ****     {
 586:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 222              		.loc 1 586 0
 223 0010 0C40     		ands	r4, r1
 224              	.LVL12:
 225 0012 1C43     		orrs	r4, r3
 226              	.LVL13:
 587:Generated_Source\PSoC4/CyLib.c ****     }   
 588:Generated_Source\PSoC4/CyLib.c ****     
 589:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 227              		.loc 1 589 0
 228 0014 1460     		str	r4, [r2]
 590:Generated_Source\PSoC4/CyLib.c ****     
 591:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 229              		.loc 1 591 0
 230 0016 FFF7FEFF 		bl	CyExitCriticalSection
 231              	.LVL14:
 592:Generated_Source\PSoC4/CyLib.c **** }
 232              		.loc 1 592 0
 233              		@ sp needed
 234              	.LVL15:
 235 001a 10BD     		pop	{r4, pc}
 236              	.L20:
 237              		.align	2
 238              	.L19:
 239 001c 00010B40 		.word	1074462976
 240              		.cfi_endproc
 241              	.LFE6:
 242              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 243              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 244              		.align	2
 245              		.global	CySysEnablePumpClock
 246              		.code	16
 247              		.thumb_func
 248              		.type	CySysEnablePumpClock, %function
 249              	CySysEnablePumpClock:
 250              	.LFB7:
 593:Generated_Source\PSoC4/CyLib.c **** 
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 596:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 597:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 598:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 16


 599:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 600:Generated_Source\PSoC4/CyLib.c **** *
 601:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 602:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 603:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 604:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 605:Generated_Source\PSoC4/CyLib.c **** *
 606:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 607:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 608:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 609:Generated_Source\PSoC4/CyLib.c **** *
 610:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 611:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 612:Generated_Source\PSoC4/CyLib.c **** {
 251              		.loc 1 612 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              		@ link register save eliminated.
 256              	.LVL16:
 613:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 614:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 257              		.loc 1 614 0
 258 0000 C307     		lsls	r3, r0, #31
 259 0002 07D5     		bpl	.L22
 615:Generated_Source\PSoC4/CyLib.c ****         {
 616:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 260              		.loc 1 616 0
 261 0004 094A     		ldr	r2, .L24
 262 0006 1168     		ldr	r1, [r2]
 263 0008 094B     		ldr	r3, .L24+4
 264 000a 1B68     		ldr	r3, [r3]
 265 000c 5B06     		lsls	r3, r3, #25
 266 000e 0B43     		orrs	r3, r1
 267 0010 1360     		str	r3, [r2]
 268 0012 0AE0     		b	.L21
 269              	.L22:
 617:Generated_Source\PSoC4/CyLib.c ****         }
 618:Generated_Source\PSoC4/CyLib.c ****         else
 619:Generated_Source\PSoC4/CyLib.c ****         {
 620:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 270              		.loc 1 620 0
 271 0014 054A     		ldr	r2, .L24
 272 0016 1368     		ldr	r3, [r2]
 273 0018 5B0E     		lsrs	r3, r3, #25
 274 001a 0721     		movs	r1, #7
 275 001c 0B40     		ands	r3, r1
 276 001e 0449     		ldr	r1, .L24+4
 277 0020 0B60     		str	r3, [r1]
 621:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 622:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 278              		.loc 1 622 0
 279 0022 1168     		ldr	r1, [r2]
 280 0024 034B     		ldr	r3, .L24+8
 281 0026 0B40     		ands	r3, r1
 282 0028 1360     		str	r3, [r2]
 283              	.L21:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 17


 623:Generated_Source\PSoC4/CyLib.c ****         }
 624:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 625:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 626:Generated_Source\PSoC4/CyLib.c ****         {
 627:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 628:Generated_Source\PSoC4/CyLib.c ****         }
 629:Generated_Source\PSoC4/CyLib.c ****         else
 630:Generated_Source\PSoC4/CyLib.c ****         {
 631:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 632:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 633:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 634:Generated_Source\PSoC4/CyLib.c ****         }
 635:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 636:Generated_Source\PSoC4/CyLib.c **** }
 284              		.loc 1 636 0
 285              		@ sp needed
 286 002a 7047     		bx	lr
 287              	.L25:
 288              		.align	2
 289              	.L24:
 290 002c 08010B40 		.word	1074462984
 291 0030 00000000 		.word	.LANCHOR1
 292 0034 FFFFFFF1 		.word	-234881025
 293              		.cfi_endproc
 294              	.LFE7:
 295              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 296              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 297              		.align	2
 298              		.global	CySysClkGetSysclkSource
 299              		.code	16
 300              		.thumb_func
 301              		.type	CySysClkGetSysclkSource, %function
 302              	CySysClkGetSysclkSource:
 303              	.LFB8:
 637:Generated_Source\PSoC4/CyLib.c **** 
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 642:Generated_Source\PSoC4/CyLib.c **** *
 643:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 644:Generated_Source\PSoC4/CyLib.c **** *
 645:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 646:Generated_Source\PSoC4/CyLib.c **** *
 647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 648:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 649:Generated_Source\PSoC4/CyLib.c **** {
 304              		.loc 1 649 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308 0000 10B5     		push	{r4, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 4, -8
 311              		.cfi_offset 14, -4
 650:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 651:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 18


 652:Generated_Source\PSoC4/CyLib.c **** 
 653:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 312              		.loc 1 653 0
 313 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 314              	.LVL17:
 654:Generated_Source\PSoC4/CyLib.c **** 
 655:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 656:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 657:Generated_Source\PSoC4/CyLib.c ****     {
 658:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 659:Generated_Source\PSoC4/CyLib.c ****     }
 660:Generated_Source\PSoC4/CyLib.c ****     else
 661:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 662:Generated_Source\PSoC4/CyLib.c ****     {
 663:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 315              		.loc 1 663 0
 316 0006 044B     		ldr	r3, .L27
 317 0008 1B68     		ldr	r3, [r3]
 318 000a 0724     		movs	r4, #7
 319 000c 1C40     		ands	r4, r3
 320              	.LVL18:
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 666:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 667:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 668:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 669:Generated_Source\PSoC4/CyLib.c ****         
 670:Generated_Source\PSoC4/CyLib.c ****     }
 671:Generated_Source\PSoC4/CyLib.c **** 
 672:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 321              		.loc 1 672 0
 322 000e FFF7FEFF 		bl	CyExitCriticalSection
 323              	.LVL19:
 673:Generated_Source\PSoC4/CyLib.c **** 
 674:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 675:Generated_Source\PSoC4/CyLib.c **** }
 324              		.loc 1 675 0
 325 0012 2000     		movs	r0, r4
 326              		@ sp needed
 327              	.LVL20:
 328 0014 10BD     		pop	{r4, pc}
 329              	.L28:
 330 0016 C046     		.align	2
 331              	.L27:
 332 0018 00010B40 		.word	1074462976
 333              		.cfi_endproc
 334              	.LFE8:
 335              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 336              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 337              		.align	2
 338              		.global	CySysClkWriteSysclkDiv
 339              		.code	16
 340              		.thumb_func
 341              		.type	CySysClkWriteSysclkDiv, %function
 342              	CySysClkWriteSysclkDiv:
 343              	.LFB9:
 676:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 19


 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CyLib.c **** *
 682:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 683:Generated_Source\PSoC4/CyLib.c **** *
 684:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 685:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 686:Generated_Source\PSoC4/CyLib.c **** *
 687:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 688:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 689:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 690:Generated_Source\PSoC4/CyLib.c **** *
 691:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 692:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 693:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 694:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 695:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 696:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 697:Generated_Source\PSoC4/CyLib.c **** *
 698:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 699:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 700:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 701:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 702:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 703:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 704:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 705:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 706:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 707:Generated_Source\PSoC4/CyLib.c **** *
 708:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 709:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 710:Generated_Source\PSoC4/CyLib.c **** {
 344              		.loc 1 710 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              	.LVL21:
 349 0000 10B5     		push	{r4, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 4, -8
 352              		.cfi_offset 14, -4
 353 0002 0400     		movs	r4, r0
 711:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 712:Generated_Source\PSoC4/CyLib.c **** 
 713:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 354              		.loc 1 713 0
 355 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 356              	.LVL22:
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 357              		.loc 1 715 0
 358 0008 E304     		lsls	r3, r4, #19
 359 000a E022     		movs	r2, #224
 360 000c 9203     		lsls	r2, r2, #14
 361 000e 1340     		ands	r3, r2
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 20


 362 0010 1900     		movs	r1, r3
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 717:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 363              		.loc 1 717 0
 364 0012 054C     		ldr	r4, .L30
 365              	.LVL23:
 366 0014 2368     		ldr	r3, [r4]
 367 0016 054A     		ldr	r2, .L30+4
 368 0018 1A40     		ands	r2, r3
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 369              		.loc 1 716 0
 370 001a 0B00     		movs	r3, r1
 371 001c 1343     		orrs	r3, r2
 715:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 372              		.loc 1 715 0
 373 001e 2360     		str	r3, [r4]
 718:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 374              		.loc 1 720 0
 375 0020 FFF7FEFF 		bl	CyExitCriticalSection
 376              	.LVL24:
 721:Generated_Source\PSoC4/CyLib.c **** }
 377              		.loc 1 721 0
 378              		@ sp needed
 379 0024 10BD     		pop	{r4, pc}
 380              	.L31:
 381 0026 C046     		.align	2
 382              	.L30:
 383 0028 00010B40 		.word	1074462976
 384 002c FFFFC7FF 		.word	-3670017
 385              		.cfi_endproc
 386              	.LFE9:
 387              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 388              		.section	.text.CySysLvdDisable,"ax",%progbits
 389              		.align	2
 390              		.global	CySysLvdDisable
 391              		.code	16
 392              		.thumb_func
 393              		.type	CySysLvdDisable, %function
 394              	CySysLvdDisable:
 395              	.LFB12:
 722:Generated_Source\PSoC4/CyLib.c **** 
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 725:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 726:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 727:Generated_Source\PSoC4/CyLib.c **** *
 728:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 729:Generated_Source\PSoC4/CyLib.c **** *
 730:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 731:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 732:Generated_Source\PSoC4/CyLib.c **** *
 733:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 734:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 735:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 21


 737:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 738:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 739:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 742:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 743:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 744:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 745:Generated_Source\PSoC4/CyLib.c **** *
 746:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 747:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 748:Generated_Source\PSoC4/CyLib.c **** *
 749:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 750:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 751:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 752:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 753:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 754:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 755:Generated_Source\PSoC4/CyLib.c **** *
 756:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 757:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 758:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 759:Generated_Source\PSoC4/CyLib.c **** *
 760:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 761:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 762:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 763:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 764:Generated_Source\PSoC4/CyLib.c **** *
 765:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 767:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 768:Generated_Source\PSoC4/CyLib.c ****     {
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 770:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 771:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 772:Generated_Source\PSoC4/CyLib.c ****         #else
 773:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 774:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 775:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 776:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 777:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 778:Generated_Source\PSoC4/CyLib.c **** 
 779:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 780:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 781:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 782:Generated_Source\PSoC4/CyLib.c **** 
 783:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 784:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 785:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:Generated_Source\PSoC4/CyLib.c **** 
 787:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c **** 
 790:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 791:Generated_Source\PSoC4/CyLib.c **** 
 792:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 793:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 22


 794:Generated_Source\PSoC4/CyLib.c ****             {
 795:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 796:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 797:Generated_Source\PSoC4/CyLib.c ****             }
 798:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 799:Generated_Source\PSoC4/CyLib.c **** 
 800:Generated_Source\PSoC4/CyLib.c **** 
 801:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 802:Generated_Source\PSoC4/CyLib.c **** 
 803:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 804:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 805:Generated_Source\PSoC4/CyLib.c ****                 {
 806:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 809:Generated_Source\PSoC4/CyLib.c ****                 {
 810:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 811:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 812:Generated_Source\PSoC4/CyLib.c ****                 }
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:Generated_Source\PSoC4/CyLib.c ****                 }
 816:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 817:Generated_Source\PSoC4/CyLib.c **** 
 818:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 819:Generated_Source\PSoC4/CyLib.c **** 
 820:Generated_Source\PSoC4/CyLib.c **** 
 821:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 824:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 825:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 826:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 827:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 830:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 831:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 832:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 833:Generated_Source\PSoC4/CyLib.c **** 
 834:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 835:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 836:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 837:Generated_Source\PSoC4/CyLib.c **** 
 838:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 841:Generated_Source\PSoC4/CyLib.c ****         {
 842:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 843:Generated_Source\PSoC4/CyLib.c ****             {
 844:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 845:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 846:Generated_Source\PSoC4/CyLib.c ****             }
 847:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 848:Generated_Source\PSoC4/CyLib.c ****             {
 849:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 850:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 23


 851:Generated_Source\PSoC4/CyLib.c ****             }
 852:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 853:Generated_Source\PSoC4/CyLib.c ****             {
 854:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 855:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 856:Generated_Source\PSoC4/CyLib.c ****             }
 857:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 858:Generated_Source\PSoC4/CyLib.c ****             {
 859:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 860:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 861:Generated_Source\PSoC4/CyLib.c ****             }
 862:Generated_Source\PSoC4/CyLib.c ****             else
 863:Generated_Source\PSoC4/CyLib.c ****             {
 864:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 865:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 866:Generated_Source\PSoC4/CyLib.c ****             }
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 869:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 873:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 874:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 875:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 876:Generated_Source\PSoC4/CyLib.c ****             *
 877:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 878:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 879:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 880:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 881:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 882:Generated_Source\PSoC4/CyLib.c ****             {
 883:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 884:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 885:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 886:Generated_Source\PSoC4/CyLib.c **** 
 887:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 888:Generated_Source\PSoC4/CyLib.c **** 
 889:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 890:Generated_Source\PSoC4/CyLib.c ****             }
 891:Generated_Source\PSoC4/CyLib.c ****             else
 892:Generated_Source\PSoC4/CyLib.c ****             {
 893:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 894:Generated_Source\PSoC4/CyLib.c ****             }
 895:Generated_Source\PSoC4/CyLib.c **** 
 896:Generated_Source\PSoC4/CyLib.c **** 
 897:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 898:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 899:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 900:Generated_Source\PSoC4/CyLib.c ****             *
 901:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 902:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 903:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 904:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 905:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 906:Generated_Source\PSoC4/CyLib.c ****             {
 907:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 24


 908:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 909:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 910:Generated_Source\PSoC4/CyLib.c ****             }
 911:Generated_Source\PSoC4/CyLib.c **** 
 912:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 913:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 914:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 915:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 916:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 919:Generated_Source\PSoC4/CyLib.c ****             {
 920:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 921:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 922:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 923:Generated_Source\PSoC4/CyLib.c ****             }
 924:Generated_Source\PSoC4/CyLib.c ****         }
 925:Generated_Source\PSoC4/CyLib.c ****         else
 926:Generated_Source\PSoC4/CyLib.c ****         {
 927:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 928:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 929:Generated_Source\PSoC4/CyLib.c ****         }
 930:Generated_Source\PSoC4/CyLib.c **** 
 931:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 932:Generated_Source\PSoC4/CyLib.c **** 
 933:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 934:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 935:Generated_Source\PSoC4/CyLib.c ****             {
 936:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 937:Generated_Source\PSoC4/CyLib.c ****             }
 938:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 939:Generated_Source\PSoC4/CyLib.c **** 
 940:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 941:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 948:Generated_Source\PSoC4/CyLib.c ****     }
 949:Generated_Source\PSoC4/CyLib.c **** 
 950:Generated_Source\PSoC4/CyLib.c **** #else
 951:Generated_Source\PSoC4/CyLib.c **** 
 952:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 953:Generated_Source\PSoC4/CyLib.c ****     {
 954:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 955:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 956:Generated_Source\PSoC4/CyLib.c **** 
 957:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 958:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 959:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 960:Generated_Source\PSoC4/CyLib.c ****         
 961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 962:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 963:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 964:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 25


 965:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 966:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 967:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 968:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 969:Generated_Source\PSoC4/CyLib.c ****         #else
 970:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 971:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 973:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 974:Generated_Source\PSoC4/CyLib.c ****         {
 975:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 976:Generated_Source\PSoC4/CyLib.c **** 
 977:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 978:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 979:Generated_Source\PSoC4/CyLib.c ****                 {
 980:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 981:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 982:Generated_Source\PSoC4/CyLib.c ****                 }
 983:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 988:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 989:Generated_Source\PSoC4/CyLib.c ****                     {
 990:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 991:Generated_Source\PSoC4/CyLib.c **** 
 992:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 993:Generated_Source\PSoC4/CyLib.c ****                     {
 994:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 995:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 996:Generated_Source\PSoC4/CyLib.c ****                     }
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 999:Generated_Source\PSoC4/CyLib.c ****                     }
1000:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1003:Generated_Source\PSoC4/CyLib.c **** 
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1006:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1007:Generated_Source\PSoC4/CyLib.c **** 
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1010:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1011:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1012:Generated_Source\PSoC4/CyLib.c ****                 {
1013:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1014:Generated_Source\PSoC4/CyLib.c ****                 }
1015:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1016:Generated_Source\PSoC4/CyLib.c ****                 {
1017:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1018:Generated_Source\PSoC4/CyLib.c ****                 }
1019:Generated_Source\PSoC4/CyLib.c ****                 else
1020:Generated_Source\PSoC4/CyLib.c ****                 {
1021:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 26


1022:Generated_Source\PSoC4/CyLib.c ****                 }
1023:Generated_Source\PSoC4/CyLib.c ****             #else
1024:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1025:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1026:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1027:Generated_Source\PSoC4/CyLib.c **** 
1028:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1029:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1032:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1033:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1038:Generated_Source\PSoC4/CyLib.c ****             {
1039:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1040:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1041:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1042:Generated_Source\PSoC4/CyLib.c **** 
1043:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1044:Generated_Source\PSoC4/CyLib.c **** 
1045:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1046:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1048:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1049:Generated_Source\PSoC4/CyLib.c ****             }
1050:Generated_Source\PSoC4/CyLib.c **** 
1051:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1052:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1053:Generated_Source\PSoC4/CyLib.c ****                 {
1054:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1055:Generated_Source\PSoC4/CyLib.c ****                 }
1056:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1057:Generated_Source\PSoC4/CyLib.c ****         
1058:Generated_Source\PSoC4/CyLib.c ****         
1059:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1060:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1061:Generated_Source\PSoC4/CyLib.c ****                 {
1062:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1063:Generated_Source\PSoC4/CyLib.c ****                 }
1064:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1065:Generated_Source\PSoC4/CyLib.c **** 
1066:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1067:Generated_Source\PSoC4/CyLib.c ****         }
1068:Generated_Source\PSoC4/CyLib.c ****         else
1069:Generated_Source\PSoC4/CyLib.c ****         {
1070:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1071:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1072:Generated_Source\PSoC4/CyLib.c ****         }
1073:Generated_Source\PSoC4/CyLib.c ****     }
1074:Generated_Source\PSoC4/CyLib.c **** 
1075:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1076:Generated_Source\PSoC4/CyLib.c **** 
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 27


1079:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1080:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1081:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1082:Generated_Source\PSoC4/CyLib.c ****     *
1083:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1084:Generated_Source\PSoC4/CyLib.c ****     *
1085:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1086:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1087:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1088:Generated_Source\PSoC4/CyLib.c ****     *
1089:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1090:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1091:Generated_Source\PSoC4/CyLib.c ****     *
1092:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1093:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1094:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1095:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1096:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1097:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1098:Generated_Source\PSoC4/CyLib.c ****     *
1099:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1100:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1101:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1102:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1103:Generated_Source\PSoC4/CyLib.c ****     *
1104:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1105:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1106:Generated_Source\PSoC4/CyLib.c ****     {
1107:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1110:Generated_Source\PSoC4/CyLib.c **** 
1111:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1112:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1113:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1114:Generated_Source\PSoC4/CyLib.c **** 
1115:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1116:Generated_Source\PSoC4/CyLib.c ****     }
1117:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1118:Generated_Source\PSoC4/CyLib.c **** 
1119:Generated_Source\PSoC4/CyLib.c **** 
1120:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1121:Generated_Source\PSoC4/CyLib.c **** 
1122:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1123:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1124:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1125:Generated_Source\PSoC4/CyLib.c ****     *
1126:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1127:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1128:Generated_Source\PSoC4/CyLib.c ****     *
1129:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1130:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1131:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1132:Generated_Source\PSoC4/CyLib.c ****     * called.
1133:Generated_Source\PSoC4/CyLib.c ****     *
1134:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1135:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 28


1136:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1137:Generated_Source\PSoC4/CyLib.c ****     *
1138:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1139:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1140:Generated_Source\PSoC4/CyLib.c ****     *
1141:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1142:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1143:Generated_Source\PSoC4/CyLib.c ****     *
1144:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1145:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1146:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1147:Generated_Source\PSoC4/CyLib.c ****     *
1148:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1149:Generated_Source\PSoC4/CyLib.c ****     *
1150:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1151:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1152:Generated_Source\PSoC4/CyLib.c ****     {
1153:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1154:Generated_Source\PSoC4/CyLib.c **** 
1155:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1156:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1157:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1160:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1161:Generated_Source\PSoC4/CyLib.c **** 
1162:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1163:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1164:Generated_Source\PSoC4/CyLib.c ****         
1165:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1166:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1167:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1168:Generated_Source\PSoC4/CyLib.c ****             
1169:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1170:Generated_Source\PSoC4/CyLib.c ****             {
1171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1172:Generated_Source\PSoC4/CyLib.c ****             }
1173:Generated_Source\PSoC4/CyLib.c ****             else
1174:Generated_Source\PSoC4/CyLib.c ****             {
1175:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1176:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1177:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1178:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1179:Generated_Source\PSoC4/CyLib.c ****             
1180:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1181:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1182:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1183:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1185:Generated_Source\PSoC4/CyLib.c ****                 
1186:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1187:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1188:Generated_Source\PSoC4/CyLib.c ****                 {
1189:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1190:Generated_Source\PSoC4/CyLib.c ****                 }
1191:Generated_Source\PSoC4/CyLib.c ****                 
1192:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 29


1193:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1194:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1195:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1196:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1197:Generated_Source\PSoC4/CyLib.c **** 
1198:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1199:Generated_Source\PSoC4/CyLib.c ****                 {
1200:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1201:Generated_Source\PSoC4/CyLib.c ****                 }
1202:Generated_Source\PSoC4/CyLib.c **** 
1203:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1204:Generated_Source\PSoC4/CyLib.c ****                 {
1205:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1206:Generated_Source\PSoC4/CyLib.c ****                 }
1207:Generated_Source\PSoC4/CyLib.c ****                 
1208:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1210:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1211:Generated_Source\PSoC4/CyLib.c ****                 
1212:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1213:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1214:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1215:Generated_Source\PSoC4/CyLib.c ****                 #else
1216:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1217:Generated_Source\PSoC4/CyLib.c ****                 #endif
1218:Generated_Source\PSoC4/CyLib.c ****                 
1219:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1220:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1221:Generated_Source\PSoC4/CyLib.c ****                 {
1222:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1223:Generated_Source\PSoC4/CyLib.c ****                 }
1224:Generated_Source\PSoC4/CyLib.c ****                 
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1227:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1228:Generated_Source\PSoC4/CyLib.c ****                                             
1229:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1230:Generated_Source\PSoC4/CyLib.c ****                 {
1231:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1232:Generated_Source\PSoC4/CyLib.c ****                 }
1233:Generated_Source\PSoC4/CyLib.c **** 
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1235:Generated_Source\PSoC4/CyLib.c ****                 
1236:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1237:Generated_Source\PSoC4/CyLib.c ****                 
1238:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1239:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1240:Generated_Source\PSoC4/CyLib.c ****                 
1241:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1242:Generated_Source\PSoC4/CyLib.c ****                 {
1243:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1244:Generated_Source\PSoC4/CyLib.c ****                 }
1245:Generated_Source\PSoC4/CyLib.c ****                 
1246:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1247:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1248:Generated_Source\PSoC4/CyLib.c ****                 
1249:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 30


1250:Generated_Source\PSoC4/CyLib.c ****                 {
1251:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1252:Generated_Source\PSoC4/CyLib.c ****                 }
1253:Generated_Source\PSoC4/CyLib.c ****                 
1254:Generated_Source\PSoC4/CyLib.c ****             }
1255:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1256:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1257:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1258:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1259:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1262:Generated_Source\PSoC4/CyLib.c ****         {
1263:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1266:Generated_Source\PSoC4/CyLib.c ****             {
1267:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1270:Generated_Source\PSoC4/CyLib.c ****                 {
1271:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1272:Generated_Source\PSoC4/CyLib.c ****                     break;
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c ****             }
1275:Generated_Source\PSoC4/CyLib.c **** 
1276:Generated_Source\PSoC4/CyLib.c ****         }
1277:Generated_Source\PSoC4/CyLib.c **** 
1278:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1279:Generated_Source\PSoC4/CyLib.c ****     }
1280:Generated_Source\PSoC4/CyLib.c **** 
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1283:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1284:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1285:Generated_Source\PSoC4/CyLib.c ****     *
1286:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1287:Generated_Source\PSoC4/CyLib.c ****     *
1288:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1289:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1290:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1293:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1294:Generated_Source\PSoC4/CyLib.c ****     {
1295:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1296:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1297:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1300:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1301:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1302:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1303:Generated_Source\PSoC4/CyLib.c ****         #else
1304:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1305:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1306:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 31


1307:Generated_Source\PSoC4/CyLib.c **** 
1308:Generated_Source\PSoC4/CyLib.c **** 
1309:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1310:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1311:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1312:Generated_Source\PSoC4/CyLib.c ****     *
1313:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1314:Generated_Source\PSoC4/CyLib.c ****     *
1315:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1316:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1317:Generated_Source\PSoC4/CyLib.c ****     *
1318:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1319:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1320:Generated_Source\PSoC4/CyLib.c ****     *
1321:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1322:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1323:Generated_Source\PSoC4/CyLib.c ****     *
1324:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1325:Generated_Source\PSoC4/CyLib.c ****     *
1326:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1327:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1328:Generated_Source\PSoC4/CyLib.c ****     {
1329:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1332:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1333:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1334:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1335:Generated_Source\PSoC4/CyLib.c **** 
1336:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1337:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1338:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1339:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1340:Generated_Source\PSoC4/CyLib.c ****         #else
1341:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1342:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1345:Generated_Source\PSoC4/CyLib.c ****     }
1346:Generated_Source\PSoC4/CyLib.c **** 
1347:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1348:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1349:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1350:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1351:Generated_Source\PSoC4/CyLib.c ****         *
1352:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1353:Generated_Source\PSoC4/CyLib.c ****         *
1354:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1355:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1356:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1357:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1358:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1359:Generated_Source\PSoC4/CyLib.c ****         *
1360:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1361:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1362:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1363:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 32


1364:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1365:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1366:Generated_Source\PSoC4/CyLib.c ****         *
1367:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1368:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1369:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1370:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1371:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1372:Generated_Source\PSoC4/CyLib.c ****         *
1373:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1374:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1375:Generated_Source\PSoC4/CyLib.c ****         {
1376:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1377:Generated_Source\PSoC4/CyLib.c **** 
1378:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1379:Generated_Source\PSoC4/CyLib.c ****             {
1380:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1381:Generated_Source\PSoC4/CyLib.c **** 
1382:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1383:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1386:Generated_Source\PSoC4/CyLib.c ****             }
1387:Generated_Source\PSoC4/CyLib.c ****             else
1388:Generated_Source\PSoC4/CyLib.c ****             {
1389:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1390:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1391:Generated_Source\PSoC4/CyLib.c ****             }
1392:Generated_Source\PSoC4/CyLib.c ****         }
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****     #else
1395:Generated_Source\PSoC4/CyLib.c **** 
1396:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1397:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1398:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1399:Generated_Source\PSoC4/CyLib.c ****         *
1400:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1401:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1402:Generated_Source\PSoC4/CyLib.c ****         *
1403:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1404:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1407:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1408:Generated_Source\PSoC4/CyLib.c ****         *
1409:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1410:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1411:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1412:Generated_Source\PSoC4/CyLib.c ****         *
1413:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1414:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1415:Generated_Source\PSoC4/CyLib.c ****         *
1416:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1417:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1418:Generated_Source\PSoC4/CyLib.c ****         *
1419:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1420:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 33


1421:Generated_Source\PSoC4/CyLib.c ****         *
1422:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1423:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1424:Generated_Source\PSoC4/CyLib.c ****         *
1425:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1426:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1427:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1428:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1429:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1430:Generated_Source\PSoC4/CyLib.c ****         *
1431:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1435:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1436:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1437:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1438:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1439:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1440:Generated_Source\PSoC4/CyLib.c ****         *
1441:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1442:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1443:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1444:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1445:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1446:Generated_Source\PSoC4/CyLib.c ****         *
1447:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1448:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1449:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1450:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1451:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1452:Generated_Source\PSoC4/CyLib.c ****         *
1453:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1454:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1455:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1456:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1457:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1458:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1459:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1460:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1461:Generated_Source\PSoC4/CyLib.c ****         *
1462:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1463:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1464:Generated_Source\PSoC4/CyLib.c ****         {
1465:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1466:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1467:Generated_Source\PSoC4/CyLib.c **** 
1468:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1469:Generated_Source\PSoC4/CyLib.c **** 
1470:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1471:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1472:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1473:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1476:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1477:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 34


1478:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1479:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1480:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1481:Generated_Source\PSoC4/CyLib.c **** 
1482:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1483:Generated_Source\PSoC4/CyLib.c **** 
1484:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1485:Generated_Source\PSoC4/CyLib.c ****         }
1486:Generated_Source\PSoC4/CyLib.c **** 
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1489:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1490:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1491:Generated_Source\PSoC4/CyLib.c ****         *
1492:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1493:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1494:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1495:Generated_Source\PSoC4/CyLib.c ****         *
1496:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1497:Generated_Source\PSoC4/CyLib.c ****         *
1498:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1499:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1500:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1501:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1502:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1503:Generated_Source\PSoC4/CyLib.c ****         *
1504:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1505:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1506:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1507:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1508:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1509:Generated_Source\PSoC4/CyLib.c ****         *
1510:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1511:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1512:Generated_Source\PSoC4/CyLib.c ****         *
1513:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1514:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1515:Generated_Source\PSoC4/CyLib.c ****         {
1516:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1517:Generated_Source\PSoC4/CyLib.c **** 
1518:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1519:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1521:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1522:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1525:Generated_Source\PSoC4/CyLib.c **** 
1526:Generated_Source\PSoC4/CyLib.c **** 
1527:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1528:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1529:Generated_Source\PSoC4/CyLib.c ****             {
1530:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1531:Generated_Source\PSoC4/CyLib.c ****             }
1532:Generated_Source\PSoC4/CyLib.c ****             else
1533:Generated_Source\PSoC4/CyLib.c ****             {
1534:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 35


1535:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1536:Generated_Source\PSoC4/CyLib.c **** 
1537:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1538:Generated_Source\PSoC4/CyLib.c ****                 {
1539:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1540:Generated_Source\PSoC4/CyLib.c ****                 }
1541:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1542:Generated_Source\PSoC4/CyLib.c ****                 {
1543:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1544:Generated_Source\PSoC4/CyLib.c ****                 }
1545:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1546:Generated_Source\PSoC4/CyLib.c ****                 {
1547:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1548:Generated_Source\PSoC4/CyLib.c ****                 }
1549:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1550:Generated_Source\PSoC4/CyLib.c ****                 {
1551:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1552:Generated_Source\PSoC4/CyLib.c ****                 }
1553:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1554:Generated_Source\PSoC4/CyLib.c ****                 {
1555:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1556:Generated_Source\PSoC4/CyLib.c ****                 }
1557:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1558:Generated_Source\PSoC4/CyLib.c ****                 {
1559:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1560:Generated_Source\PSoC4/CyLib.c ****                 }
1561:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1562:Generated_Source\PSoC4/CyLib.c ****                 {
1563:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1564:Generated_Source\PSoC4/CyLib.c ****                 }
1565:Generated_Source\PSoC4/CyLib.c ****                 else
1566:Generated_Source\PSoC4/CyLib.c ****                 {
1567:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1568:Generated_Source\PSoC4/CyLib.c ****                 }
1569:Generated_Source\PSoC4/CyLib.c **** 
1570:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1571:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1574:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1575:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1576:Generated_Source\PSoC4/CyLib.c ****                 {
1577:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1578:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1579:Generated_Source\PSoC4/CyLib.c ****                 }
1580:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1581:Generated_Source\PSoC4/CyLib.c ****                 {
1582:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1583:Generated_Source\PSoC4/CyLib.c ****                 }
1584:Generated_Source\PSoC4/CyLib.c ****                 else
1585:Generated_Source\PSoC4/CyLib.c ****                 {
1586:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1587:Generated_Source\PSoC4/CyLib.c ****                 }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1591:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 36


1592:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1593:Generated_Source\PSoC4/CyLib.c ****                 }
1594:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1595:Generated_Source\PSoC4/CyLib.c ****                 {
1596:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1597:Generated_Source\PSoC4/CyLib.c ****                 }
1598:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1599:Generated_Source\PSoC4/CyLib.c ****                 {
1600:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1601:Generated_Source\PSoC4/CyLib.c ****                 }
1602:Generated_Source\PSoC4/CyLib.c ****                 else
1603:Generated_Source\PSoC4/CyLib.c ****                 {
1604:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1605:Generated_Source\PSoC4/CyLib.c ****                 }
1606:Generated_Source\PSoC4/CyLib.c **** 
1607:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1608:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1609:Generated_Source\PSoC4/CyLib.c **** 
1610:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1611:Generated_Source\PSoC4/CyLib.c **** 
1612:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1613:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1614:Generated_Source\PSoC4/CyLib.c ****                 {
1615:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1616:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1617:Generated_Source\PSoC4/CyLib.c ****                 }
1618:Generated_Source\PSoC4/CyLib.c ****                 else
1619:Generated_Source\PSoC4/CyLib.c ****                 {
1620:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1621:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1622:Generated_Source\PSoC4/CyLib.c ****                     */
1623:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1624:Generated_Source\PSoC4/CyLib.c ****                 }
1625:Generated_Source\PSoC4/CyLib.c ****             }
1626:Generated_Source\PSoC4/CyLib.c **** 
1627:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1628:Generated_Source\PSoC4/CyLib.c ****         }
1629:Generated_Source\PSoC4/CyLib.c **** 
1630:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1631:Generated_Source\PSoC4/CyLib.c **** 
1632:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1633:Generated_Source\PSoC4/CyLib.c **** 
1634:Generated_Source\PSoC4/CyLib.c **** 
1635:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1636:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1637:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1638:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1641:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1642:Generated_Source\PSoC4/CyLib.c ****     *
1643:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1644:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1645:Generated_Source\PSoC4/CyLib.c ****     *
1646:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1647:Generated_Source\PSoC4/CyLib.c ****     *
1648:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 37


1649:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1650:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1651:Generated_Source\PSoC4/CyLib.c ****     *
1652:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1653:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1654:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1655:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1656:Generated_Source\PSoC4/CyLib.c ****     *
1657:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1658:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1659:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1660:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1661:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1662:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1663:Generated_Source\PSoC4/CyLib.c ****     *
1664:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1665:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1666:Generated_Source\PSoC4/CyLib.c ****     {
1667:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1668:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1669:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1670:Generated_Source\PSoC4/CyLib.c **** 
1671:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1672:Generated_Source\PSoC4/CyLib.c ****         {
1673:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1674:Generated_Source\PSoC4/CyLib.c **** 
1675:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1676:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1677:Generated_Source\PSoC4/CyLib.c **** 
1678:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1679:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1680:Generated_Source\PSoC4/CyLib.c **** 
1681:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1682:Generated_Source\PSoC4/CyLib.c **** 
1683:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1684:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1685:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1686:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1687:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1690:Generated_Source\PSoC4/CyLib.c ****             {
1691:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1692:Generated_Source\PSoC4/CyLib.c **** 
1693:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1694:Generated_Source\PSoC4/CyLib.c ****                 {
1695:Generated_Source\PSoC4/CyLib.c **** 
1696:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1697:Generated_Source\PSoC4/CyLib.c ****                     {
1698:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1699:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1700:Generated_Source\PSoC4/CyLib.c ****                         break;
1701:Generated_Source\PSoC4/CyLib.c ****                     }
1702:Generated_Source\PSoC4/CyLib.c **** 
1703:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1704:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1705:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 38


1706:Generated_Source\PSoC4/CyLib.c ****             }
1707:Generated_Source\PSoC4/CyLib.c ****         }
1708:Generated_Source\PSoC4/CyLib.c ****         else
1709:Generated_Source\PSoC4/CyLib.c ****         {
1710:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1711:Generated_Source\PSoC4/CyLib.c ****         }
1712:Generated_Source\PSoC4/CyLib.c **** 
1713:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1714:Generated_Source\PSoC4/CyLib.c ****     }
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c **** 
1717:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1718:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1719:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1720:Generated_Source\PSoC4/CyLib.c ****     *
1721:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1722:Generated_Source\PSoC4/CyLib.c ****     *
1723:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1724:Generated_Source\PSoC4/CyLib.c ****     *
1725:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1726:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1727:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1728:Generated_Source\PSoC4/CyLib.c ****     *
1729:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1732:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1733:Generated_Source\PSoC4/CyLib.c ****     {
1734:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1735:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1736:Generated_Source\PSoC4/CyLib.c **** 
1737:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1738:Generated_Source\PSoC4/CyLib.c **** 
1739:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1740:Generated_Source\PSoC4/CyLib.c **** 
1741:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1742:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1743:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1744:Generated_Source\PSoC4/CyLib.c ****         {
1745:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1746:Generated_Source\PSoC4/CyLib.c ****         }
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1749:Generated_Source\PSoC4/CyLib.c **** 
1750:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1751:Generated_Source\PSoC4/CyLib.c ****     }
1752:Generated_Source\PSoC4/CyLib.c **** 
1753:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1755:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1758:Generated_Source\PSoC4/CyLib.c ****     *
1759:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1760:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1761:Generated_Source\PSoC4/CyLib.c ****     *
1762:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 39


1763:Generated_Source\PSoC4/CyLib.c ****     *
1764:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1765:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1766:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1769:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1770:Generated_Source\PSoC4/CyLib.c ****     {
1771:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1772:Generated_Source\PSoC4/CyLib.c **** 
1773:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1774:Generated_Source\PSoC4/CyLib.c ****         {
1775:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1776:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1777:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1778:Generated_Source\PSoC4/CyLib.c ****         }
1779:Generated_Source\PSoC4/CyLib.c ****     }
1780:Generated_Source\PSoC4/CyLib.c **** 
1781:Generated_Source\PSoC4/CyLib.c **** 
1782:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1783:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1784:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1787:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1788:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1789:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1790:Generated_Source\PSoC4/CyLib.c ****     *
1791:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1792:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1793:Generated_Source\PSoC4/CyLib.c ****     *
1794:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1795:Generated_Source\PSoC4/CyLib.c ****     *
1796:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1797:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1798:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1799:Generated_Source\PSoC4/CyLib.c ****     *
1800:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1801:Generated_Source\PSoC4/CyLib.c ****     * divider.
1802:Generated_Source\PSoC4/CyLib.c ****     *
1803:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1804:Generated_Source\PSoC4/CyLib.c ****     *
1805:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1806:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1807:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1808:Generated_Source\PSoC4/CyLib.c ****     *
1809:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1810:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1811:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1814:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1815:Generated_Source\PSoC4/CyLib.c ****     {
1816:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1817:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1818:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1819:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 40


1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1822:Generated_Source\PSoC4/CyLib.c **** 
1823:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1824:Generated_Source\PSoC4/CyLib.c **** 
1825:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1826:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1827:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1828:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1829:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1830:Generated_Source\PSoC4/CyLib.c ****         {
1831:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1832:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1833:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1834:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1837:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1838:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1839:Generated_Source\PSoC4/CyLib.c **** 
1840:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1843:Generated_Source\PSoC4/CyLib.c ****         }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1846:Generated_Source\PSoC4/CyLib.c **** 
1847:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1848:Generated_Source\PSoC4/CyLib.c ****     }
1849:Generated_Source\PSoC4/CyLib.c **** 
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1852:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1853:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1858:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1861:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1862:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1863:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1864:Generated_Source\PSoC4/CyLib.c ****     *
1865:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1866:Generated_Source\PSoC4/CyLib.c ****     *
1867:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1868:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1869:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1870:Generated_Source\PSoC4/CyLib.c ****     *
1871:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1872:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1873:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1874:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1875:Generated_Source\PSoC4/CyLib.c ****     *
1876:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 41


1877:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1878:Generated_Source\PSoC4/CyLib.c ****     *
1879:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1880:Generated_Source\PSoC4/CyLib.c ****     *
1881:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1882:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1883:Generated_Source\PSoC4/CyLib.c ****     {
1884:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1885:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1886:Generated_Source\PSoC4/CyLib.c **** 
1887:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1888:Generated_Source\PSoC4/CyLib.c **** 
1889:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1890:Generated_Source\PSoC4/CyLib.c ****         {
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1893:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1894:Generated_Source\PSoC4/CyLib.c ****         }
1895:Generated_Source\PSoC4/CyLib.c **** 
1896:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1897:Generated_Source\PSoC4/CyLib.c ****     }
1898:Generated_Source\PSoC4/CyLib.c **** 
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1901:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1902:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1903:Generated_Source\PSoC4/CyLib.c ****     *
1904:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1905:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1908:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1909:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1910:Generated_Source\PSoC4/CyLib.c ****     *
1911:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1912:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1913:Generated_Source\PSoC4/CyLib.c ****     *
1914:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1915:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1916:Generated_Source\PSoC4/CyLib.c ****     {
1917:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1918:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1919:Generated_Source\PSoC4/CyLib.c **** 
1920:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1921:Generated_Source\PSoC4/CyLib.c **** 
1922:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1925:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1928:Generated_Source\PSoC4/CyLib.c **** 
1929:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1930:Generated_Source\PSoC4/CyLib.c ****     }
1931:Generated_Source\PSoC4/CyLib.c **** 
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 42


1934:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1935:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1936:Generated_Source\PSoC4/CyLib.c ****     *
1937:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1938:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1939:Generated_Source\PSoC4/CyLib.c ****     *
1940:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1941:Generated_Source\PSoC4/CyLib.c ****     *
1942:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1943:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1944:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1945:Generated_Source\PSoC4/CyLib.c ****     *
1946:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1947:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1948:Generated_Source\PSoC4/CyLib.c ****     *
1949:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1950:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1951:Generated_Source\PSoC4/CyLib.c ****     {
1952:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1953:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1954:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1955:Generated_Source\PSoC4/CyLib.c **** 
1956:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1957:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1958:Generated_Source\PSoC4/CyLib.c **** 
1959:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1960:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1962:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1963:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1964:Generated_Source\PSoC4/CyLib.c ****             )
1965:Generated_Source\PSoC4/CyLib.c ****         {
1966:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1967:Generated_Source\PSoC4/CyLib.c ****         }
1968:Generated_Source\PSoC4/CyLib.c **** 
1969:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1970:Generated_Source\PSoC4/CyLib.c ****     }
1971:Generated_Source\PSoC4/CyLib.c **** 
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1974:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1975:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1976:Generated_Source\PSoC4/CyLib.c ****     *
1977:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1978:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1979:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1980:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1981:Generated_Source\PSoC4/CyLib.c ****     *
1982:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1983:Generated_Source\PSoC4/CyLib.c ****     *
1984:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1985:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1986:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1989:Generated_Source\PSoC4/CyLib.c ****     *
1990:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 43


1991:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1992:Generated_Source\PSoC4/CyLib.c ****     {
1993:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1994:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1995:Generated_Source\PSoC4/CyLib.c **** 
1996:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1997:Generated_Source\PSoC4/CyLib.c **** 
1998:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1999:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2000:Generated_Source\PSoC4/CyLib.c **** 
2001:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2002:Generated_Source\PSoC4/CyLib.c **** 
2003:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2004:Generated_Source\PSoC4/CyLib.c ****     }
2005:Generated_Source\PSoC4/CyLib.c **** 
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2008:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2009:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2010:Generated_Source\PSoC4/CyLib.c ****     *
2011:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2012:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2013:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2014:Generated_Source\PSoC4/CyLib.c ****     *
2015:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2016:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2017:Generated_Source\PSoC4/CyLib.c ****     *
2018:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
2019:Generated_Source\PSoC4/CyLib.c ****     *
2020:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2021:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2022:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2023:Generated_Source\PSoC4/CyLib.c ****     *
2024:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2025:Generated_Source\PSoC4/CyLib.c ****     *
2026:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2029:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2030:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2031:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2032:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2033:Generated_Source\PSoC4/CyLib.c ****     *
2034:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2037:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2040:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2041:Generated_Source\PSoC4/CyLib.c ****     *
2042:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2043:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2044:Generated_Source\PSoC4/CyLib.c ****     {
2045:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2046:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2047:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 44


2048:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2049:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2050:Generated_Source\PSoC4/CyLib.c **** 
2051:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2052:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2055:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2058:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2059:Generated_Source\PSoC4/CyLib.c **** 
2060:Generated_Source\PSoC4/CyLib.c **** 
2061:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2064:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2065:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2066:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2067:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2068:Generated_Source\PSoC4/CyLib.c ****         {
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2071:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2072:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2073:Generated_Source\PSoC4/CyLib.c **** 
2074:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2075:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2076:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2077:Generated_Source\PSoC4/CyLib.c **** 
2078:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2079:Generated_Source\PSoC4/CyLib.c ****             {
2080:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2081:Generated_Source\PSoC4/CyLib.c ****                 {
2082:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2083:Generated_Source\PSoC4/CyLib.c **** 
2084:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2085:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2088:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2089:Generated_Source\PSoC4/CyLib.c **** 
2090:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2091:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2092:Generated_Source\PSoC4/CyLib.c **** 
2093:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2094:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2095:Generated_Source\PSoC4/CyLib.c ****                     {
2096:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2097:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2098:Generated_Source\PSoC4/CyLib.c ****                         break;
2099:Generated_Source\PSoC4/CyLib.c ****                     }
2100:Generated_Source\PSoC4/CyLib.c ****                 }
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c **** 
2103:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2104:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 45


2105:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2106:Generated_Source\PSoC4/CyLib.c ****                     {
2107:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2108:Generated_Source\PSoC4/CyLib.c ****                     }
2109:Generated_Source\PSoC4/CyLib.c ****                 }
2110:Generated_Source\PSoC4/CyLib.c ****             }
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         }
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2115:Generated_Source\PSoC4/CyLib.c ****     }
2116:Generated_Source\PSoC4/CyLib.c **** 
2117:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2118:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2119:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2120:Generated_Source\PSoC4/CyLib.c ****     *
2121:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2122:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2123:Generated_Source\PSoC4/CyLib.c ****     *
2124:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2125:Generated_Source\PSoC4/CyLib.c ****     *
2126:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2127:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2128:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2129:Generated_Source\PSoC4/CyLib.c ****     *
2130:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2131:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2132:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
2133:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2134:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2135:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2136:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2137:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2138:Generated_Source\PSoC4/CyLib.c ****     *
2139:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2140:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2141:Generated_Source\PSoC4/CyLib.c ****     {
2142:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2143:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2144:Generated_Source\PSoC4/CyLib.c ****         
2145:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2146:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2147:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2148:Generated_Source\PSoC4/CyLib.c **** 
2149:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2150:Generated_Source\PSoC4/CyLib.c **** 
2151:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2152:Generated_Source\PSoC4/CyLib.c ****         {
2153:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2154:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2155:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2156:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2157:Generated_Source\PSoC4/CyLib.c ****             #else
2158:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_ECO_CLK_SELECT_PLL0_MASK;
2159:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_ECO_CLK_SELECT_PLL0_SHIFT) & CY_SYS_ECO_CLK_SELECT_PLL
2160:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
2161:Generated_Source\PSoC4/CyLib.c ****                 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 46


2162:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2163:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2164:Generated_Source\PSoC4/CyLib.c ****                 
2165:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2166:Generated_Source\PSoC4/CyLib.c ****                 {
2167:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2168:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2169:Generated_Source\PSoC4/CyLib.c ****                 }
2170:Generated_Source\PSoC4/CyLib.c ****                 
2171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2174:Generated_Source\PSoC4/CyLib.c ****         }
2175:Generated_Source\PSoC4/CyLib.c **** 
2176:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2177:Generated_Source\PSoC4/CyLib.c ****     }
2178:Generated_Source\PSoC4/CyLib.c **** 
2179:Generated_Source\PSoC4/CyLib.c ****     
2180:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2181:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2182:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2183:Generated_Source\PSoC4/CyLib.c ****     *
2184:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2185:Generated_Source\PSoC4/CyLib.c ****     *
2186:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2187:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2188:Generated_Source\PSoC4/CyLib.c ****     *
2189:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2192:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2193:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2194:Generated_Source\PSoC4/CyLib.c ****     *
2195:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2196:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2197:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2198:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2199:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2200:Generated_Source\PSoC4/CyLib.c ****     *
2201:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2202:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2203:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2204:Generated_Source\PSoC4/CyLib.c ****     *
2205:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2206:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2207:Generated_Source\PSoC4/CyLib.c ****     {
2208:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2209:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2210:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2211:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c **** 
2214:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2215:Generated_Source\PSoC4/CyLib.c **** 
2216:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 47


2219:Generated_Source\PSoC4/CyLib.c ****         {
2220:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2221:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2224:Generated_Source\PSoC4/CyLib.c **** 
2225:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2226:Generated_Source\PSoC4/CyLib.c ****         }
2227:Generated_Source\PSoC4/CyLib.c **** 
2228:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2229:Generated_Source\PSoC4/CyLib.c **** 
2230:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2231:Generated_Source\PSoC4/CyLib.c ****     }
2232:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2233:Generated_Source\PSoC4/CyLib.c **** 
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2236:Generated_Source\PSoC4/CyLib.c **** 
2237:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2238:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2239:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2240:Generated_Source\PSoC4/CyLib.c ****     *
2241:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2242:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2243:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2246:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2247:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2248:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2249:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2250:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2251:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2252:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2253:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2254:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2255:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2256:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2257:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2258:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2259:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2260:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2261:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2262:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2263:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2264:Generated_Source\PSoC4/CyLib.c ****     *
2265:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2266:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2267:Generated_Source\PSoC4/CyLib.c ****     {
2268:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2269:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2272:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2273:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2274:Generated_Source\PSoC4/CyLib.c **** 
2275:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 48


2276:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2279:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2282:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2285:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2286:Generated_Source\PSoC4/CyLib.c ****     }
2287:Generated_Source\PSoC4/CyLib.c **** 
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2290:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2291:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2292:Generated_Source\PSoC4/CyLib.c ****     *
2293:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2294:Generated_Source\PSoC4/CyLib.c ****     *
2295:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2296:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2297:Generated_Source\PSoC4/CyLib.c ****     {
 396              		.loc 1 2297 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
2298:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 401              		.loc 1 2298 0
 402 0000 054A     		ldr	r2, .L33
 403 0002 1368     		ldr	r3, [r2]
 404 0004 0221     		movs	r1, #2
 405 0006 8B43     		bics	r3, r1
 406 0008 1360     		str	r3, [r2]
2299:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 407              		.loc 1 2299 0
 408 000a 044A     		ldr	r2, .L33+4
 409 000c 1368     		ldr	r3, [r2]
 410 000e 0139     		subs	r1, r1, #1
 411 0010 8B43     		bics	r3, r1
 412 0012 1360     		str	r3, [r2]
2300:Generated_Source\PSoC4/CyLib.c ****     }
 413              		.loc 1 2300 0
 414              		@ sp needed
 415 0014 7047     		bx	lr
 416              	.L34:
 417 0016 C046     		.align	2
 418              	.L33:
 419 0018 08000B40 		.word	1074462728
 420 001c 18000B40 		.word	1074462744
 421              		.cfi_endproc
 422              	.LFE12:
 423              		.size	CySysLvdDisable, .-CySysLvdDisable
 424              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 425              		.align	2
 426              		.global	CySysLvdGetInterruptSource
 427              		.code	16
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 49


 428              		.thumb_func
 429              		.type	CySysLvdGetInterruptSource, %function
 430              	CySysLvdGetInterruptSource:
 431              	.LFB13:
2301:Generated_Source\PSoC4/CyLib.c **** 
2302:Generated_Source\PSoC4/CyLib.c **** 
2303:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2304:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2305:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2306:Generated_Source\PSoC4/CyLib.c ****     *
2307:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2308:Generated_Source\PSoC4/CyLib.c ****     *
2309:Generated_Source\PSoC4/CyLib.c ****     * \return
2310:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2311:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2312:Generated_Source\PSoC4/CyLib.c ****     *
2313:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2314:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2315:Generated_Source\PSoC4/CyLib.c ****     {
 432              		.loc 1 2315 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		@ link register save eliminated.
2316:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 437              		.loc 1 2316 0
 438 0000 024B     		ldr	r3, .L36
 439 0002 1B68     		ldr	r3, [r3]
 440 0004 0220     		movs	r0, #2
 441 0006 1840     		ands	r0, r3
2317:Generated_Source\PSoC4/CyLib.c ****     }
 442              		.loc 1 2317 0
 443              		@ sp needed
 444 0008 7047     		bx	lr
 445              	.L37:
 446 000a C046     		.align	2
 447              	.L36:
 448 000c 04000B40 		.word	1074462724
 449              		.cfi_endproc
 450              	.LFE13:
 451              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 452              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 453              		.align	2
 454              		.global	CySysLvdClearInterrupt
 455              		.code	16
 456              		.thumb_func
 457              		.type	CySysLvdClearInterrupt, %function
 458              	CySysLvdClearInterrupt:
 459              	.LFB14:
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c **** 
2320:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2322:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CyLib.c ****     *
2324:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2325:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 50


2326:Generated_Source\PSoC4/CyLib.c ****     * \return
2327:Generated_Source\PSoC4/CyLib.c ****     *  None
2328:Generated_Source\PSoC4/CyLib.c ****     *
2329:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2330:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2331:Generated_Source\PSoC4/CyLib.c ****     {
 460              		.loc 1 2331 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              		@ link register save eliminated.
2332:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 465              		.loc 1 2332 0
 466 0000 0222     		movs	r2, #2
 467 0002 014B     		ldr	r3, .L39
 468 0004 1A60     		str	r2, [r3]
2333:Generated_Source\PSoC4/CyLib.c ****     }
 469              		.loc 1 2333 0
 470              		@ sp needed
 471 0006 7047     		bx	lr
 472              	.L40:
 473              		.align	2
 474              	.L39:
 475 0008 04000B40 		.word	1074462724
 476              		.cfi_endproc
 477              	.LFE14:
 478              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 479              		.section	.text.CySysGetResetReason,"ax",%progbits
 480              		.align	2
 481              		.global	CySysGetResetReason
 482              		.code	16
 483              		.thumb_func
 484              		.type	CySysGetResetReason, %function
 485              	CySysGetResetReason:
 486              	.LFB15:
2334:Generated_Source\PSoC4/CyLib.c **** 
2335:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2336:Generated_Source\PSoC4/CyLib.c **** 
2337:Generated_Source\PSoC4/CyLib.c **** 
2338:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2339:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2340:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2341:Generated_Source\PSoC4/CyLib.c **** *
2342:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2343:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2344:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2345:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2346:Generated_Source\PSoC4/CyLib.c **** *
2347:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2348:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2349:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2350:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2351:Generated_Source\PSoC4/CyLib.c **** *
2352:Generated_Source\PSoC4/CyLib.c **** * \return
2353:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2354:Generated_Source\PSoC4/CyLib.c **** *
2355:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 51


2356:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2357:Generated_Source\PSoC4/CyLib.c **** {
 487              		.loc 1 2357 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492              	.LVL25:
 493 0000 0200     		movs	r2, r0
2358:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2359:Generated_Source\PSoC4/CyLib.c **** 
2360:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 494              		.loc 1 2360 0
 495 0002 1920     		movs	r0, #25
 496              	.LVL26:
 497 0004 0240     		ands	r2, r0
 498              	.LVL27:
2361:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 499              		.loc 1 2361 0
 500 0006 0249     		ldr	r1, .L42
 501 0008 0B68     		ldr	r3, [r1]
 502 000a 1840     		ands	r0, r3
 503              	.LVL28:
2362:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2363:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 504              		.loc 1 2363 0
 505 000c 0A60     		str	r2, [r1]
2364:Generated_Source\PSoC4/CyLib.c **** 
2365:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2366:Generated_Source\PSoC4/CyLib.c **** }
 506              		.loc 1 2366 0
 507              		@ sp needed
 508 000e 7047     		bx	lr
 509              	.L43:
 510              		.align	2
 511              	.L42:
 512 0010 00030B40 		.word	1074463488
 513              		.cfi_endproc
 514              	.LFE15:
 515              		.size	CySysGetResetReason, .-CySysGetResetReason
 516              		.section	.text.CyDisableInts,"ax",%progbits
 517              		.align	2
 518              		.global	CyDisableInts
 519              		.code	16
 520              		.thumb_func
 521              		.type	CyDisableInts, %function
 522              	CyDisableInts:
 523              	.LFB16:
2367:Generated_Source\PSoC4/CyLib.c **** 
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2370:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2371:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2372:Generated_Source\PSoC4/CyLib.c **** *
2373:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2374:Generated_Source\PSoC4/CyLib.c **** *
2375:Generated_Source\PSoC4/CyLib.c **** * \return
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 52


2376:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2379:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2380:Generated_Source\PSoC4/CyLib.c **** {
 524              		.loc 1 2380 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              		@ link register save eliminated.
2381:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2382:Generated_Source\PSoC4/CyLib.c **** 
2383:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2384:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 529              		.loc 1 2384 0
 530 0000 024B     		ldr	r3, .L45
 531 0002 1868     		ldr	r0, [r3]
 532              	.LVL29:
2385:Generated_Source\PSoC4/CyLib.c **** 
2386:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2387:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 533              		.loc 1 2387 0
 534 0004 0122     		movs	r2, #1
 535 0006 5242     		rsbs	r2, r2, #0
 536 0008 1A60     		str	r2, [r3]
2388:Generated_Source\PSoC4/CyLib.c **** 
2389:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2390:Generated_Source\PSoC4/CyLib.c **** }
 537              		.loc 1 2390 0
 538              		@ sp needed
 539 000a 7047     		bx	lr
 540              	.L46:
 541              		.align	2
 542              	.L45:
 543 000c 80E100E0 		.word	-536813184
 544              		.cfi_endproc
 545              	.LFE16:
 546              		.size	CyDisableInts, .-CyDisableInts
 547              		.section	.text.CyEnableInts,"ax",%progbits
 548              		.align	2
 549              		.global	CyEnableInts
 550              		.code	16
 551              		.thumb_func
 552              		.type	CyEnableInts, %function
 553              	CyEnableInts:
 554              	.LFB17:
2391:Generated_Source\PSoC4/CyLib.c **** 
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2394:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2395:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2396:Generated_Source\PSoC4/CyLib.c **** *
2397:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2398:Generated_Source\PSoC4/CyLib.c **** *
2399:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2400:Generated_Source\PSoC4/CyLib.c **** *
2401:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 53


2402:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2403:Generated_Source\PSoC4/CyLib.c **** {
 555              		.loc 1 2403 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              		@ link register save eliminated.
 560              	.LVL30:
2404:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 561              		.loc 1 2404 0
 562 0000 014B     		ldr	r3, .L48
 563 0002 1860     		str	r0, [r3]
2405:Generated_Source\PSoC4/CyLib.c **** }
 564              		.loc 1 2405 0
 565              		@ sp needed
 566 0004 7047     		bx	lr
 567              	.L49:
 568 0006 C046     		.align	2
 569              	.L48:
 570 0008 00E100E0 		.word	-536813312
 571              		.cfi_endproc
 572              	.LFE17:
 573              		.size	CyEnableInts, .-CyEnableInts
 574              		.section	.text.CyIntEnable,"ax",%progbits
 575              		.align	2
 576              		.global	CyIntEnable
 577              		.code	16
 578              		.thumb_func
 579              		.type	CyIntEnable, %function
 580              	CyIntEnable:
 581              	.LFB24:
2406:Generated_Source\PSoC4/CyLib.c **** 
2407:Generated_Source\PSoC4/CyLib.c **** 
2408:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2409:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2410:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2413:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2416:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2417:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2418:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2419:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2420:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2421:Generated_Source\PSoC4/CyLib.c **** *
2422:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2423:Generated_Source\PSoC4/CyLib.c **** *
2424:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2425:Generated_Source\PSoC4/CyLib.c **** *
2426:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2427:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2428:Generated_Source\PSoC4/CyLib.c **** {
2429:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2430:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2431:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 54


2432:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2433:Generated_Source\PSoC4/CyLib.c **** 
2434:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2435:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2436:Generated_Source\PSoC4/CyLib.c **** 
2437:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2438:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2439:Generated_Source\PSoC4/CyLib.c **** 
2440:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2441:Generated_Source\PSoC4/CyLib.c **** }
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** 
2444:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2445:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2446:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2447:Generated_Source\PSoC4/CyLib.c **** *
2448:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2449:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2452:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2453:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2454:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2455:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2456:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2457:Generated_Source\PSoC4/CyLib.c **** *
2458:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2459:Generated_Source\PSoC4/CyLib.c **** *
2460:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2461:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2462:Generated_Source\PSoC4/CyLib.c **** {
2463:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2464:Generated_Source\PSoC4/CyLib.c **** 
2465:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2466:Generated_Source\PSoC4/CyLib.c **** 
2467:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2468:Generated_Source\PSoC4/CyLib.c **** }
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2472:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2473:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2474:Generated_Source\PSoC4/CyLib.c **** *
2475:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2476:Generated_Source\PSoC4/CyLib.c **** *
2477:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2478:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2483:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2484:Generated_Source\PSoC4/CyLib.c **** {
2485:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2486:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2487:Generated_Source\PSoC4/CyLib.c **** 
2488:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 55


2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2491:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2492:Generated_Source\PSoC4/CyLib.c **** 
2493:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2494:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2495:Generated_Source\PSoC4/CyLib.c **** 
2496:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2497:Generated_Source\PSoC4/CyLib.c **** }
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c **** 
2500:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2501:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2502:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2503:Generated_Source\PSoC4/CyLib.c **** *
2504:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2505:Generated_Source\PSoC4/CyLib.c **** *
2506:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2507:Generated_Source\PSoC4/CyLib.c **** *
2508:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2511:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2512:Generated_Source\PSoC4/CyLib.c **** {
2513:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2514:Generated_Source\PSoC4/CyLib.c **** 
2515:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2518:Generated_Source\PSoC4/CyLib.c **** }
2519:Generated_Source\PSoC4/CyLib.c **** 
2520:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2521:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2522:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2523:Generated_Source\PSoC4/CyLib.c **** *
2524:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2525:Generated_Source\PSoC4/CyLib.c **** *
2526:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2527:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2528:Generated_Source\PSoC4/CyLib.c **** *
2529:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2530:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2531:Generated_Source\PSoC4/CyLib.c **** {
2532:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2533:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2534:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2535:Generated_Source\PSoC4/CyLib.c **** 
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2537:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2538:Generated_Source\PSoC4/CyLib.c **** 
2539:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2540:Generated_Source\PSoC4/CyLib.c **** 
2541:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2542:Generated_Source\PSoC4/CyLib.c **** 
2543:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2544:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2545:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 56


2546:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2547:Generated_Source\PSoC4/CyLib.c **** 
2548:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2549:Generated_Source\PSoC4/CyLib.c **** }
2550:Generated_Source\PSoC4/CyLib.c **** 
2551:Generated_Source\PSoC4/CyLib.c **** 
2552:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2553:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2554:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2559:Generated_Source\PSoC4/CyLib.c **** *
2560:Generated_Source\PSoC4/CyLib.c **** * \return
2561:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2562:Generated_Source\PSoC4/CyLib.c **** *
2563:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2564:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2565:Generated_Source\PSoC4/CyLib.c **** {
2566:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2567:Generated_Source\PSoC4/CyLib.c **** 
2568:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2571:Generated_Source\PSoC4/CyLib.c **** 
2572:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2573:Generated_Source\PSoC4/CyLib.c **** }
2574:Generated_Source\PSoC4/CyLib.c **** 
2575:Generated_Source\PSoC4/CyLib.c **** 
2576:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2577:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2578:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2579:Generated_Source\PSoC4/CyLib.c **** *
2580:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2583:Generated_Source\PSoC4/CyLib.c **** *
2584:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2585:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2586:Generated_Source\PSoC4/CyLib.c **** {
 582              		.loc 1 2586 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587              	.LVL31:
2587:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 588              		.loc 1 2587 0
 589 0000 1F23     		movs	r3, #31
 590 0002 1840     		ands	r0, r3
 591              	.LVL32:
 592 0004 1E3B     		subs	r3, r3, #30
 593 0006 8340     		lsls	r3, r3, r0
 594 0008 014A     		ldr	r2, .L51
 595 000a 1360     		str	r3, [r2]
2588:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 57


 596              		.loc 1 2588 0
 597              		@ sp needed
 598 000c 7047     		bx	lr
 599              	.L52:
 600 000e C046     		.align	2
 601              	.L51:
 602 0010 00E100E0 		.word	-536813312
 603              		.cfi_endproc
 604              	.LFE24:
 605              		.size	CyIntEnable, .-CyIntEnable
 606              		.section	.text.CyIntGetState,"ax",%progbits
 607              		.align	2
 608              		.global	CyIntGetState
 609              		.code	16
 610              		.thumb_func
 611              		.type	CyIntGetState, %function
 612              	CyIntGetState:
 613              	.LFB25:
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c **** 
2591:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2592:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2593:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2596:Generated_Source\PSoC4/CyLib.c **** *
2597:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2598:Generated_Source\PSoC4/CyLib.c **** *
2599:Generated_Source\PSoC4/CyLib.c **** * \return
2600:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2603:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2604:Generated_Source\PSoC4/CyLib.c **** {
 614              		.loc 1 2604 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 619              	.LVL33:
2605:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2606:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 620              		.loc 1 2606 0
 621 0000 044B     		ldr	r3, .L54
 622 0002 1B68     		ldr	r3, [r3]
 623 0004 1F22     		movs	r2, #31
 624 0006 1040     		ands	r0, r2
 625              	.LVL34:
 626 0008 C340     		lsrs	r3, r3, r0
 627 000a 1800     		movs	r0, r3
 628 000c 0123     		movs	r3, #1
 629 000e 1840     		ands	r0, r3
2607:Generated_Source\PSoC4/CyLib.c **** }
 630              		.loc 1 2607 0
 631              		@ sp needed
 632 0010 7047     		bx	lr
 633              	.L55:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 58


 634 0012 C046     		.align	2
 635              	.L54:
 636 0014 00E100E0 		.word	-536813312
 637              		.cfi_endproc
 638              	.LFE25:
 639              		.size	CyIntGetState, .-CyIntGetState
 640              		.section	.text.CyIntDisable,"ax",%progbits
 641              		.align	2
 642              		.global	CyIntDisable
 643              		.code	16
 644              		.thumb_func
 645              		.type	CyIntDisable, %function
 646              	CyIntDisable:
 647              	.LFB26:
2608:Generated_Source\PSoC4/CyLib.c **** 
2609:Generated_Source\PSoC4/CyLib.c **** 
2610:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2611:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2612:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2613:Generated_Source\PSoC4/CyLib.c **** *
2614:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2615:Generated_Source\PSoC4/CyLib.c **** *
2616:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2617:Generated_Source\PSoC4/CyLib.c **** *
2618:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2620:Generated_Source\PSoC4/CyLib.c **** {
 648              		.loc 1 2620 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 653              	.LVL35:
2621:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 654              		.loc 1 2621 0
 655 0000 1F23     		movs	r3, #31
 656 0002 1840     		ands	r0, r3
 657              	.LVL36:
 658 0004 1E3B     		subs	r3, r3, #30
 659 0006 8340     		lsls	r3, r3, r0
 660 0008 014A     		ldr	r2, .L57
 661 000a 1360     		str	r3, [r2]
2622:Generated_Source\PSoC4/CyLib.c **** }
 662              		.loc 1 2622 0
 663              		@ sp needed
 664 000c 7047     		bx	lr
 665              	.L58:
 666 000e C046     		.align	2
 667              	.L57:
 668 0010 80E100E0 		.word	-536813184
 669              		.cfi_endproc
 670              	.LFE26:
 671              		.size	CyIntDisable, .-CyIntDisable
 672              		.section	.text.CyIntSetPending,"ax",%progbits
 673              		.align	2
 674              		.global	CyIntSetPending
 675              		.code	16
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 59


 676              		.thumb_func
 677              		.type	CyIntSetPending, %function
 678              	CyIntSetPending:
 679              	.LFB27:
2623:Generated_Source\PSoC4/CyLib.c **** 
2624:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2625:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2626:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2627:Generated_Source\PSoC4/CyLib.c **** *
2628:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2629:Generated_Source\PSoC4/CyLib.c **** *
2630:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2633:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2634:Generated_Source\PSoC4/CyLib.c **** {
 680              		.loc 1 2634 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 685              	.LVL37:
2635:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 686              		.loc 1 2635 0
 687 0000 1F23     		movs	r3, #31
 688 0002 1840     		ands	r0, r3
 689              	.LVL38:
 690 0004 1E3B     		subs	r3, r3, #30
 691 0006 8340     		lsls	r3, r3, r0
 692 0008 014A     		ldr	r2, .L60
 693 000a 1360     		str	r3, [r2]
2636:Generated_Source\PSoC4/CyLib.c **** }
 694              		.loc 1 2636 0
 695              		@ sp needed
 696 000c 7047     		bx	lr
 697              	.L61:
 698 000e C046     		.align	2
 699              	.L60:
 700 0010 00E200E0 		.word	-536813056
 701              		.cfi_endproc
 702              	.LFE27:
 703              		.size	CyIntSetPending, .-CyIntSetPending
 704              		.section	.text.CyIntClearPending,"ax",%progbits
 705              		.align	2
 706              		.global	CyIntClearPending
 707              		.code	16
 708              		.thumb_func
 709              		.type	CyIntClearPending, %function
 710              	CyIntClearPending:
 711              	.LFB28:
2637:Generated_Source\PSoC4/CyLib.c **** 
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2642:Generated_Source\PSoC4/CyLib.c **** *
2643:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 60


2644:Generated_Source\PSoC4/CyLib.c **** *
2645:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2646:Generated_Source\PSoC4/CyLib.c **** *
2647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2648:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2649:Generated_Source\PSoC4/CyLib.c **** {
 712              		.loc 1 2649 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 717              	.LVL39:
2650:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 718              		.loc 1 2650 0
 719 0000 1F23     		movs	r3, #31
 720 0002 1840     		ands	r0, r3
 721              	.LVL40:
 722 0004 1E3B     		subs	r3, r3, #30
 723 0006 8340     		lsls	r3, r3, r0
 724 0008 014A     		ldr	r2, .L63
 725 000a 1360     		str	r3, [r2]
2651:Generated_Source\PSoC4/CyLib.c **** }
 726              		.loc 1 2651 0
 727              		@ sp needed
 728 000c 7047     		bx	lr
 729              	.L64:
 730 000e C046     		.align	2
 731              	.L63:
 732 0010 80E200E0 		.word	-536812928
 733              		.cfi_endproc
 734              	.LFE28:
 735              		.size	CyIntClearPending, .-CyIntClearPending
 736              		.section	.text.CyHalt,"ax",%progbits
 737              		.align	2
 738              		.global	CyHalt
 739              		.code	16
 740              		.thumb_func
 741              		.type	CyHalt, %function
 742              	CyHalt:
 743              	.LFB29:
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c **** 
2654:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2655:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2656:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2657:Generated_Source\PSoC4/CyLib.c **** *
2658:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2659:Generated_Source\PSoC4/CyLib.c **** *
2660:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2661:Generated_Source\PSoC4/CyLib.c **** *
2662:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2663:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2664:Generated_Source\PSoC4/CyLib.c **** {
 744              		.loc 1 2664 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 61


 748              		@ link register save eliminated.
 749              	.LVL41:
2665:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2666:Generated_Source\PSoC4/CyLib.c ****     {
2667:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2668:Generated_Source\PSoC4/CyLib.c ****     }
2669:Generated_Source\PSoC4/CyLib.c **** 
2670:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2671:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2672:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2673:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 750              		.loc 1 2673 0
 751              		.syntax divided
 752              	@ 2673 "Generated_Source\PSoC4\CyLib.c" 1
 753 0000 01BE     		    bkpt    1
 754              	@ 0 "" 2
2674:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2675:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2676:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2677:Generated_Source\PSoC4/CyLib.c **** }
 755              		.loc 1 2677 0
 756              		.thumb
 757              		.syntax unified
 758              		@ sp needed
 759 0002 7047     		bx	lr
 760              		.cfi_endproc
 761              	.LFE29:
 762              		.size	CyHalt, .-CyHalt
 763              		.section	.text.CyIntSetSysVector,"ax",%progbits
 764              		.align	2
 765              		.global	CyIntSetSysVector
 766              		.code	16
 767              		.thumb_func
 768              		.type	CyIntSetSysVector, %function
 769              	CyIntSetSysVector:
 770              	.LFB18:
2428:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 771              		.loc 1 2428 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 775              	.LVL42:
 776 0000 70B5     		push	{r4, r5, r6, lr}
 777              		.cfi_def_cfa_offset 16
 778              		.cfi_offset 4, -16
 779              		.cfi_offset 5, -12
 780              		.cfi_offset 6, -8
 781              		.cfi_offset 14, -4
 782 0002 0400     		movs	r4, r0
 783 0004 0D00     		movs	r5, r1
 784              	.LVL43:
2432:Generated_Source\PSoC4/CyLib.c **** 
 785              		.loc 1 2432 0
 786 0006 0F28     		cmp	r0, #15
 787 0008 02D9     		bls	.L67
2432:Generated_Source\PSoC4/CyLib.c **** 
 788              		.loc 1 2432 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 62


 789 000a 0020     		movs	r0, #0
 790              	.LVL44:
 791 000c FFF7FEFF 		bl	CyHalt
 792              	.LVL45:
 793              	.L67:
2435:Generated_Source\PSoC4/CyLib.c **** 
 794              		.loc 1 2435 0 is_stmt 1
 795 0010 A400     		lsls	r4, r4, #2
 796 0012 8023     		movs	r3, #128
 797 0014 9B05     		lsls	r3, r3, #22
 798 0016 9C46     		mov	ip, r3
 799 0018 6444     		add	r4, r4, ip
 800 001a 2068     		ldr	r0, [r4]
 801              	.LVL46:
2438:Generated_Source\PSoC4/CyLib.c **** 
 802              		.loc 1 2438 0
 803 001c 2560     		str	r5, [r4]
2441:Generated_Source\PSoC4/CyLib.c **** 
 804              		.loc 1 2441 0
 805              		@ sp needed
 806              	.LVL47:
 807 001e 70BD     		pop	{r4, r5, r6, pc}
 808              		.cfi_endproc
 809              	.LFE18:
 810              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 811              		.section	.text.CyIntGetSysVector,"ax",%progbits
 812              		.align	2
 813              		.global	CyIntGetSysVector
 814              		.code	16
 815              		.thumb_func
 816              		.type	CyIntGetSysVector, %function
 817              	CyIntGetSysVector:
 818              	.LFB19:
2462:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 819              		.loc 1 2462 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 0, uses_anonymous_args = 0
 823              	.LVL48:
 824 0000 10B5     		push	{r4, lr}
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 4, -8
 827              		.cfi_offset 14, -4
 828 0002 0400     		movs	r4, r0
 829              	.LVL49:
2465:Generated_Source\PSoC4/CyLib.c **** 
 830              		.loc 1 2465 0
 831 0004 0F28     		cmp	r0, #15
 832 0006 02D9     		bls	.L69
2465:Generated_Source\PSoC4/CyLib.c **** 
 833              		.loc 1 2465 0 is_stmt 0 discriminator 1
 834 0008 0020     		movs	r0, #0
 835              	.LVL50:
 836 000a FFF7FEFF 		bl	CyHalt
 837              	.LVL51:
 838              	.L69:
2467:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 63


 839              		.loc 1 2467 0 is_stmt 1
 840 000e A400     		lsls	r4, r4, #2
 841 0010 8023     		movs	r3, #128
 842 0012 9B05     		lsls	r3, r3, #22
 843 0014 9C46     		mov	ip, r3
 844 0016 6444     		add	r4, r4, ip
 845 0018 2068     		ldr	r0, [r4]
2468:Generated_Source\PSoC4/CyLib.c **** 
 846              		.loc 1 2468 0
 847              		@ sp needed
 848 001a 10BD     		pop	{r4, pc}
 849              		.cfi_endproc
 850              	.LFE19:
 851              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 852              		.section	.text.CyIntSetVector,"ax",%progbits
 853              		.align	2
 854              		.global	CyIntSetVector
 855              		.code	16
 856              		.thumb_func
 857              		.type	CyIntSetVector, %function
 858              	CyIntSetVector:
 859              	.LFB20:
2484:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 860              		.loc 1 2484 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 0
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864              	.LVL52:
 865 0000 70B5     		push	{r4, r5, r6, lr}
 866              		.cfi_def_cfa_offset 16
 867              		.cfi_offset 4, -16
 868              		.cfi_offset 5, -12
 869              		.cfi_offset 6, -8
 870              		.cfi_offset 14, -4
 871 0002 0400     		movs	r4, r0
 872 0004 0D00     		movs	r5, r1
 873              	.LVL53:
2488:Generated_Source\PSoC4/CyLib.c **** 
 874              		.loc 1 2488 0
 875 0006 1F28     		cmp	r0, #31
 876 0008 02D9     		bls	.L71
2488:Generated_Source\PSoC4/CyLib.c **** 
 877              		.loc 1 2488 0 is_stmt 0 discriminator 1
 878 000a 0020     		movs	r0, #0
 879              	.LVL54:
 880 000c FFF7FEFF 		bl	CyHalt
 881              	.LVL55:
 882              	.L71:
2491:Generated_Source\PSoC4/CyLib.c **** 
 883              		.loc 1 2491 0 is_stmt 1
 884 0010 1034     		adds	r4, r4, #16
 885 0012 A400     		lsls	r4, r4, #2
 886 0014 8023     		movs	r3, #128
 887 0016 9B05     		lsls	r3, r3, #22
 888 0018 9C46     		mov	ip, r3
 889 001a 6444     		add	r4, r4, ip
 890 001c 2068     		ldr	r0, [r4]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 64


 891              	.LVL56:
2494:Generated_Source\PSoC4/CyLib.c **** 
 892              		.loc 1 2494 0
 893 001e 2560     		str	r5, [r4]
2497:Generated_Source\PSoC4/CyLib.c **** 
 894              		.loc 1 2497 0
 895              		@ sp needed
 896              	.LVL57:
 897 0020 70BD     		pop	{r4, r5, r6, pc}
 898              		.cfi_endproc
 899              	.LFE20:
 900              		.size	CyIntSetVector, .-CyIntSetVector
 901 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 902              		.align	2
 903              		.global	CyIntGetVector
 904              		.code	16
 905              		.thumb_func
 906              		.type	CyIntGetVector, %function
 907              	CyIntGetVector:
 908              	.LFB21:
2512:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 909              		.loc 1 2512 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913              	.LVL58:
 914 0000 10B5     		push	{r4, lr}
 915              		.cfi_def_cfa_offset 8
 916              		.cfi_offset 4, -8
 917              		.cfi_offset 14, -4
 918 0002 0400     		movs	r4, r0
 919              	.LVL59:
2515:Generated_Source\PSoC4/CyLib.c **** 
 920              		.loc 1 2515 0
 921 0004 1F28     		cmp	r0, #31
 922 0006 02D9     		bls	.L73
2515:Generated_Source\PSoC4/CyLib.c **** 
 923              		.loc 1 2515 0 is_stmt 0 discriminator 1
 924 0008 0020     		movs	r0, #0
 925              	.LVL60:
 926 000a FFF7FEFF 		bl	CyHalt
 927              	.LVL61:
 928              	.L73:
2517:Generated_Source\PSoC4/CyLib.c **** }
 929              		.loc 1 2517 0 is_stmt 1
 930 000e 1034     		adds	r4, r4, #16
 931 0010 A400     		lsls	r4, r4, #2
 932 0012 8023     		movs	r3, #128
 933 0014 9B05     		lsls	r3, r3, #22
 934 0016 9C46     		mov	ip, r3
 935 0018 6444     		add	r4, r4, ip
 936 001a 2068     		ldr	r0, [r4]
2518:Generated_Source\PSoC4/CyLib.c **** 
 937              		.loc 1 2518 0
 938              		@ sp needed
 939 001c 10BD     		pop	{r4, pc}
 940              		.cfi_endproc
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 65


 941              	.LFE21:
 942              		.size	CyIntGetVector, .-CyIntGetVector
 943 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 944              		.align	2
 945              		.global	CyIntSetPriority
 946              		.code	16
 947              		.thumb_func
 948              		.type	CyIntSetPriority, %function
 949              	CyIntSetPriority:
 950              	.LFB22:
2531:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 951              		.loc 1 2531 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              	.LVL62:
 956 0000 70B5     		push	{r4, r5, r6, lr}
 957              		.cfi_def_cfa_offset 16
 958              		.cfi_offset 4, -16
 959              		.cfi_offset 5, -12
 960              		.cfi_offset 6, -8
 961              		.cfi_offset 14, -4
 962 0002 0400     		movs	r4, r0
 963 0004 0E00     		movs	r6, r1
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 964              		.loc 1 2536 0
 965 0006 0329     		cmp	r1, #3
 966 0008 02D9     		bls	.L75
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 967              		.loc 1 2536 0 is_stmt 0 discriminator 1
 968 000a 0020     		movs	r0, #0
 969              	.LVL63:
 970 000c FFF7FEFF 		bl	CyHalt
 971              	.LVL64:
 972              	.L75:
2537:Generated_Source\PSoC4/CyLib.c **** 
 973              		.loc 1 2537 0 is_stmt 1
 974 0010 1F2C     		cmp	r4, #31
 975 0012 02D9     		bls	.L76
2537:Generated_Source\PSoC4/CyLib.c **** 
 976              		.loc 1 2537 0 is_stmt 0 discriminator 1
 977 0014 0020     		movs	r0, #0
 978 0016 FFF7FEFF 		bl	CyHalt
 979              	.LVL65:
 980              	.L76:
2539:Generated_Source\PSoC4/CyLib.c **** 
 981              		.loc 1 2539 0 is_stmt 1
 982 001a 0325     		movs	r5, #3
 983 001c 2540     		ands	r5, r4
 984 001e ED00     		lsls	r5, r5, #3
 985 0020 0635     		adds	r5, r5, #6
 986              	.LVL66:
2541:Generated_Source\PSoC4/CyLib.c **** 
 987              		.loc 1 2541 0
 988 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 989              	.LVL67:
2543:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 66


 990              		.loc 1 2543 0
 991 0026 A408     		lsrs	r4, r4, #2
 992 0028 A400     		lsls	r4, r4, #2
 993 002a 074B     		ldr	r3, .L77
 994 002c 9C46     		mov	ip, r3
 995 002e 6444     		add	r4, r4, ip
 996 0030 2168     		ldr	r1, [r4]
 997              	.LVL68:
2544:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 998              		.loc 1 2544 0
 999 0032 0323     		movs	r3, #3
 1000 0034 AB40     		lsls	r3, r3, r5
 1001 0036 9943     		bics	r1, r3
 1002              	.LVL69:
 1003 0038 0B00     		movs	r3, r1
 1004              	.LVL70:
2545:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1005              		.loc 1 2545 0
 1006 003a 3100     		movs	r1, r6
 1007              	.LVL71:
 1008 003c A940     		lsls	r1, r1, r5
 1009 003e 1943     		orrs	r1, r3
 1010              	.LVL72:
2546:Generated_Source\PSoC4/CyLib.c **** 
 1011              		.loc 1 2546 0
 1012 0040 2160     		str	r1, [r4]
2548:Generated_Source\PSoC4/CyLib.c **** }
 1013              		.loc 1 2548 0
 1014 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1015              	.LVL73:
2549:Generated_Source\PSoC4/CyLib.c **** 
 1016              		.loc 1 2549 0
 1017              		@ sp needed
 1018              	.LVL74:
 1019 0046 70BD     		pop	{r4, r5, r6, pc}
 1020              	.L78:
 1021              		.align	2
 1022              	.L77:
 1023 0048 00E400E0 		.word	-536812544
 1024              		.cfi_endproc
 1025              	.LFE22:
 1026              		.size	CyIntSetPriority, .-CyIntSetPriority
 1027              		.section	.text.CyIntGetPriority,"ax",%progbits
 1028              		.align	2
 1029              		.global	CyIntGetPriority
 1030              		.code	16
 1031              		.thumb_func
 1032              		.type	CyIntGetPriority, %function
 1033              	CyIntGetPriority:
 1034              	.LFB23:
2565:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1035              		.loc 1 2565 0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 0
 1038              		@ frame_needed = 0, uses_anonymous_args = 0
 1039              	.LVL75:
 1040 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 67


 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 4, -8
 1043              		.cfi_offset 14, -4
 1044 0002 0400     		movs	r4, r0
2568:Generated_Source\PSoC4/CyLib.c **** 
 1045              		.loc 1 2568 0
 1046 0004 1F28     		cmp	r0, #31
 1047 0006 02D9     		bls	.L80
2568:Generated_Source\PSoC4/CyLib.c **** 
 1048              		.loc 1 2568 0 is_stmt 0 discriminator 1
 1049 0008 0020     		movs	r0, #0
 1050              	.LVL76:
 1051 000a FFF7FEFF 		bl	CyHalt
 1052              	.LVL77:
 1053              	.L80:
2570:Generated_Source\PSoC4/CyLib.c **** 
 1054              		.loc 1 2570 0 is_stmt 1
 1055 000e A308     		lsrs	r3, r4, #2
 1056 0010 9B00     		lsls	r3, r3, #2
 1057 0012 054A     		ldr	r2, .L81
 1058 0014 9446     		mov	ip, r2
 1059 0016 6344     		add	r3, r3, ip
 1060 0018 1868     		ldr	r0, [r3]
 1061 001a 0323     		movs	r3, #3
 1062 001c 1C40     		ands	r4, r3
 1063 001e E400     		lsls	r4, r4, #3
 1064 0020 0634     		adds	r4, r4, #6
 1065 0022 E040     		lsrs	r0, r0, r4
 1066              	.LVL78:
2572:Generated_Source\PSoC4/CyLib.c **** }
 1067              		.loc 1 2572 0
 1068 0024 1840     		ands	r0, r3
 1069              	.LVL79:
2573:Generated_Source\PSoC4/CyLib.c **** 
 1070              		.loc 1 2573 0
 1071              		@ sp needed
 1072 0026 10BD     		pop	{r4, pc}
 1073              	.L82:
 1074              		.align	2
 1075              	.L81:
 1076 0028 00E400E0 		.word	-536812544
 1077              		.cfi_endproc
 1078              	.LFE23:
 1079              		.size	CyIntGetPriority, .-CyIntGetPriority
 1080              		.section	.text.CySoftwareReset,"ax",%progbits
 1081              		.align	2
 1082              		.global	CySoftwareReset
 1083              		.code	16
 1084              		.thumb_func
 1085              		.type	CySoftwareReset, %function
 1086              	CySoftwareReset:
 1087              	.LFB30:
2678:Generated_Source\PSoC4/CyLib.c **** 
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2681:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2682:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 68


2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
 1088              		.loc 1 2688 0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 0
 1091              		@ frame_needed = 0, uses_anonymous_args = 0
 1092              		@ link register save eliminated.
2689:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2690:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2691:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2692:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2693:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1093              		.loc 1 2693 0
 1094 0000 034A     		ldr	r2, .L84
 1095 0002 1368     		ldr	r3, [r2]
 1096 0004 1B04     		lsls	r3, r3, #16
 1097 0006 1B0C     		lsrs	r3, r3, #16
2694:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1098              		.loc 1 2694 0
 1099 0008 0249     		ldr	r1, .L84+4
 1100 000a 0B43     		orrs	r3, r1
2693:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1101              		.loc 1 2693 0
 1102 000c 1360     		str	r3, [r2]
2695:Generated_Source\PSoC4/CyLib.c **** }
 1103              		.loc 1 2695 0
 1104              		@ sp needed
 1105 000e 7047     		bx	lr
 1106              	.L85:
 1107              		.align	2
 1108              	.L84:
 1109 0010 0CED00E0 		.word	-536810228
 1110 0014 0400FA05 		.word	100270084
 1111              		.cfi_endproc
 1112              	.LFE30:
 1113              		.size	CySoftwareReset, .-CySoftwareReset
 1114              		.section	.text.CyDelay,"ax",%progbits
 1115              		.align	2
 1116              		.global	CyDelay
 1117              		.code	16
 1118              		.thumb_func
 1119              		.type	CyDelay, %function
 1120              	CyDelay:
 1121              	.LFB31:
2696:Generated_Source\PSoC4/CyLib.c **** 
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2699:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2700:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2701:Generated_Source\PSoC4/CyLib.c **** *
2702:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 69


2705:Generated_Source\PSoC4/CyLib.c **** *
2706:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2707:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2708:Generated_Source\PSoC4/CyLib.c **** {
 1122              		.loc 1 2708 0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 0
 1125              		@ frame_needed = 0, uses_anonymous_args = 0
 1126              	.LVL80:
 1127 0000 10B5     		push	{r4, lr}
 1128              		.cfi_def_cfa_offset 8
 1129              		.cfi_offset 4, -8
 1130              		.cfi_offset 14, -4
 1131 0002 0400     		movs	r4, r0
2709:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1132              		.loc 1 2709 0
 1133 0004 06E0     		b	.L87
 1134              	.LVL81:
 1135              	.L88:
2710:Generated_Source\PSoC4/CyLib.c ****     {
2711:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2712:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2713:Generated_Source\PSoC4/CyLib.c ****          */
2714:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1136              		.loc 1 2714 0
 1137 0006 084B     		ldr	r3, .L89
 1138 0008 5868     		ldr	r0, [r3, #4]
 1139 000a FFF7FEFF 		bl	CyDelayCycles
 1140              	.LVL82:
2715:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1141              		.loc 1 2715 0
 1142 000e 074B     		ldr	r3, .L89+4
 1143 0010 9C46     		mov	ip, r3
 1144 0012 6444     		add	r4, r4, ip
 1145              	.LVL83:
 1146              	.L87:
2709:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1147              		.loc 1 2709 0
 1148 0014 8023     		movs	r3, #128
 1149 0016 1B02     		lsls	r3, r3, #8
 1150 0018 9C42     		cmp	r4, r3
 1151 001a F4D8     		bhi	.L88
2716:Generated_Source\PSoC4/CyLib.c ****     }
2717:Generated_Source\PSoC4/CyLib.c **** 
2718:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1152              		.loc 1 2718 0
 1153 001c 024B     		ldr	r3, .L89
 1154 001e 9868     		ldr	r0, [r3, #8]
 1155 0020 6043     		muls	r0, r4
 1156 0022 FFF7FEFF 		bl	CyDelayCycles
 1157              	.LVL84:
2719:Generated_Source\PSoC4/CyLib.c **** }
 1158              		.loc 1 2719 0
 1159              		@ sp needed
 1160              	.LVL85:
 1161 0026 10BD     		pop	{r4, pc}
 1162              	.L90:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 70


 1163              		.align	2
 1164              	.L89:
 1165 0028 00000000 		.word	.LANCHOR1
 1166 002c 0080FFFF 		.word	-32768
 1167              		.cfi_endproc
 1168              	.LFE31:
 1169              		.size	CyDelay, .-CyDelay
 1170              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1171              		.align	2
 1172              		.global	CySysClkImoEnableWcoLock
 1173              		.code	16
 1174              		.thumb_func
 1175              		.type	CySysClkImoEnableWcoLock, %function
 1176              	CySysClkImoEnableWcoLock:
 1177              	.LFB3:
 167:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1178              		.loc 1 167 0
 1179              		.cfi_startproc
 1180              		@ args = 0, pretend = 0, frame = 8
 1181              		@ frame_needed = 0, uses_anonymous_args = 0
 1182 0000 70B5     		push	{r4, r5, r6, lr}
 1183              		.cfi_def_cfa_offset 16
 1184              		.cfi_offset 4, -16
 1185              		.cfi_offset 5, -12
 1186              		.cfi_offset 6, -8
 1187              		.cfi_offset 14, -4
 1188 0002 82B0     		sub	sp, sp, #8
 1189              		.cfi_def_cfa_offset 24
 1190              	.LVL86:
 178:Generated_Source\PSoC4/CyLib.c ****         {
 1191              		.loc 1 178 0
 1192 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1193              	.LVL87:
 1194 0008 0028     		cmp	r0, #0
 1195 000a 5DD0     		beq	.L91
 180:Generated_Source\PSoC4/CyLib.c **** 
 1196              		.loc 1 180 0
 1197 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1198              	.LVL88:
 1199 0010 0500     		movs	r5, r0
 1200              	.LVL89:
 192:Generated_Source\PSoC4/CyLib.c ****                 {
 1201              		.loc 1 192 0
 1202 0012 0023     		movs	r3, #0
 1203 0014 0AE0     		b	.L93
 1204              	.LVL90:
 1205              	.L96:
 194:Generated_Source\PSoC4/CyLib.c ****                     {
 1206              		.loc 1 194 0
 1207 0016 2D4A     		ldr	r2, .L100
 1208 0018 1268     		ldr	r2, [r2]
 1209 001a 3F21     		movs	r1, #63
 1210 001c 0A40     		ands	r2, r1
 1211 001e 2C49     		ldr	r1, .L100+4
 1212 0020 C95C     		ldrb	r1, [r1, r3]
 1213 0022 8A42     		cmp	r2, r1
 1214 0024 01D1     		bne	.L94
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 71


 196:Generated_Source\PSoC4/CyLib.c ****                         break;
 1215              		.loc 1 196 0
 1216 0026 0333     		adds	r3, r3, #3
 1217              	.LVL91:
 197:Generated_Source\PSoC4/CyLib.c ****                     }
 1218              		.loc 1 197 0
 1219 0028 03E0     		b	.L95
 1220              	.LVL92:
 1221              	.L94:
 192:Generated_Source\PSoC4/CyLib.c ****                 {
 1222              		.loc 1 192 0 discriminator 2
 1223 002a 0133     		adds	r3, r3, #1
 1224              	.LVL93:
 1225              	.L93:
 192:Generated_Source\PSoC4/CyLib.c ****                 {
 1226              		.loc 1 192 0 is_stmt 0 discriminator 1
 1227 002c 2D2B     		cmp	r3, #45
 1228 002e F2D9     		bls	.L96
 191:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 1229              		.loc 1 191 0 is_stmt 1
 1230 0030 0323     		movs	r3, #3
 1231              	.LVL94:
 1232              	.L95:
 214:Generated_Source\PSoC4/CyLib.c ****             
 1233              		.loc 1 214 0
 1234 0032 0021     		movs	r1, #0
 1235 0034 274A     		ldr	r2, .L100+8
 1236 0036 1160     		str	r1, [r2]
 218:Generated_Source\PSoC4/CyLib.c ****                 {
 1237              		.loc 1 218 0
 1238 0038 274A     		ldr	r2, .L100+12
 1239 003a 1268     		ldr	r2, [r2]
 1240 003c D206     		lsls	r2, r2, #27
 1241 003e 06D1     		bne	.L97
 220:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 1242              		.loc 1 220 0
 1243 0040 2548     		ldr	r0, .L100+12
 1244 0042 0268     		ldr	r2, [r0]
 1245 0044 1F31     		adds	r1, r1, #31
 1246 0046 8A43     		bics	r2, r1
 1247 0048 1339     		subs	r1, r1, #19
 1248 004a 0A43     		orrs	r2, r1
 1249 004c 0260     		str	r2, [r0]
 1250              	.L97:
 225:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1251              		.loc 1 225 0
 1252 004e 234C     		ldr	r4, .L100+16
 1253 0050 2168     		ldr	r1, [r4]
 1254 0052 234A     		ldr	r2, .L100+20
 1255 0054 1140     		ands	r1, r2
 1256              	.LVL95:
 231:Generated_Source\PSoC4/CyLib.c **** 
 1257              		.loc 1 231 0
 1258 0056 234A     		ldr	r2, .L100+24
 1259 0058 5A43     		muls	r2, r3
 1260 005a 8023     		movs	r3, #128
 1261              	.LVL96:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 72


 1262 005c DB01     		lsls	r3, r3, #7
 1263 005e 9C46     		mov	ip, r3
 1264 0060 6244     		add	r2, r2, ip
 1265 0062 D20B     		lsrs	r2, r2, #15
 1266 0064 013A     		subs	r2, r2, #1
 1267 0066 5205     		lsls	r2, r2, #21
 1268 0068 520D     		lsrs	r2, r2, #21
 1269 006a 0B00     		movs	r3, r1
 1270 006c 1343     		orrs	r3, r2
 1271              	.LVL97:
 234:Generated_Source\PSoC4/CyLib.c **** 
 1272              		.loc 1 234 0
 1273 006e A022     		movs	r2, #160
 1274 0070 5203     		lsls	r2, r2, #13
 1275 0072 1343     		orrs	r3, r2
 1276              	.LVL98:
 236:Generated_Source\PSoC4/CyLib.c ****             
 1277              		.loc 1 236 0
 1278 0074 2360     		str	r3, [r4]
 238:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1279              		.loc 1 238 0
 1280 0076 1C4B     		ldr	r3, .L100+28
 1281              	.LVL99:
 1282 0078 1B68     		ldr	r3, [r3]
 1283 007a 0193     		str	r3, [sp, #4]
 1284              	.LVL100:
 239:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1285              		.loc 1 239 0
 1286 007c 3020     		movs	r0, #48
 1287 007e FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1288              	.LVL101:
 240:Generated_Source\PSoC4/CyLib.c **** 
 1289              		.loc 1 240 0
 1290 0082 1A4A     		ldr	r2, .L100+32
 1291 0084 1368     		ldr	r3, [r2]
 1292 0086 8021     		movs	r1, #128
 1293 0088 C905     		lsls	r1, r1, #23
 1294 008a 0B43     		orrs	r3, r1
 1295 008c 1360     		str	r3, [r2]
 242:Generated_Source\PSoC4/CyLib.c ****             
 1296              		.loc 1 242 0
 1297 008e 2668     		ldr	r6, [r4]
 1298 0090 174B     		ldr	r3, .L100+36
 1299 0092 1E40     		ands	r6, r3
 1300              	.LVL102:
 175:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 1301              		.loc 1 175 0
 1302 0094 0024     		movs	r4, #0
 244:Generated_Source\PSoC4/CyLib.c ****             {
 1303              		.loc 1 244 0
 1304 0096 07E0     		b	.L98
 1305              	.LVL103:
 1306              	.L99:
 246:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 1307              		.loc 1 246 0
 1308 0098 0120     		movs	r0, #1
 1309 009a FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 73


 1310              	.LVL104:
 247:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 1311              		.loc 1 247 0
 1312 009e 1034     		adds	r4, r4, #16
 1313              	.LVL105:
 248:Generated_Source\PSoC4/CyLib.c ****             }
 1314              		.loc 1 248 0
 1315 00a0 A305     		lsls	r3, r4, #22
 1316 00a2 3343     		orrs	r3, r6
 1317 00a4 0D4A     		ldr	r2, .L100+16
 1318 00a6 1360     		str	r3, [r2]
 1319              	.LVL106:
 1320              	.L98:
 244:Generated_Source\PSoC4/CyLib.c ****             {
 1321              		.loc 1 244 0
 1322 00a8 EE2C     		cmp	r4, #238
 1323 00aa F5D9     		bls	.L99
 251:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 1324              		.loc 1 251 0
 1325 00ac 0120     		movs	r0, #1
 1326 00ae FFF7FEFF 		bl	CyDelay
 1327              	.LVL107:
 252:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 1328              		.loc 1 252 0
 1329 00b2 FF23     		movs	r3, #255
 1330 00b4 9B05     		lsls	r3, r3, #22
 1331 00b6 1E43     		orrs	r6, r3
 1332              	.LVL108:
 1333 00b8 084B     		ldr	r3, .L100+16
 1334 00ba 1E60     		str	r6, [r3]
 255:Generated_Source\PSoC4/CyLib.c **** 
 1335              		.loc 1 255 0
 1336 00bc 019A     		ldr	r2, [sp, #4]
 1337 00be 0A4B     		ldr	r3, .L100+28
 1338 00c0 1A60     		str	r2, [r3]
 257:Generated_Source\PSoC4/CyLib.c ****         }
 1339              		.loc 1 257 0
 1340 00c2 2800     		movs	r0, r5
 1341 00c4 FFF7FEFF 		bl	CyExitCriticalSection
 1342              	.LVL109:
 1343              	.L91:
 259:Generated_Source\PSoC4/CyLib.c **** 
 1344              		.loc 1 259 0
 1345 00c8 02B0     		add	sp, sp, #8
 1346              		@ sp needed
 1347 00ca 70BD     		pop	{r4, r5, r6, pc}
 1348              	.L101:
 1349              		.align	2
 1350              	.L100:
 1351 00cc 2CFF0B40 		.word	1074528044
 1352 00d0 00000000 		.word	.LANCHOR0
 1353 00d4 28FF0B40 		.word	1074528040
 1354 00d8 34FF0B40 		.word	1074528052
 1355 00dc 08002240 		.word	1075970056
 1356 00e0 00F800C0 		.word	-1073678336
 1357 00e4 40420F00 		.word	1000000
 1358 00e8 30001040 		.word	1074790448
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 74


 1359 00ec 00002240 		.word	1075970048
 1360 00f0 FFFF3FC0 		.word	-1069547521
 1361              		.cfi_endproc
 1362              	.LFE3:
 1363              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1364              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1365              		.align	2
 1366              		.global	CySysClkWriteImoFreq
 1367              		.code	16
 1368              		.thumb_func
 1369              		.type	CySysClkWriteImoFreq, %function
 1370              	CySysClkWriteImoFreq:
 1371              	.LFB10:
 768:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1372              		.loc 1 768 0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 24
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
 1376              	.LVL110:
 1377 0000 30B5     		push	{r4, r5, lr}
 1378              		.cfi_def_cfa_offset 12
 1379              		.cfi_offset 4, -12
 1380              		.cfi_offset 5, -8
 1381              		.cfi_offset 14, -4
 1382 0002 87B0     		sub	sp, sp, #28
 1383              		.cfi_def_cfa_offset 40
 1384 0004 0400     		movs	r4, r0
 1385              	.LVL111:
 790:Generated_Source\PSoC4/CyLib.c **** 
 1386              		.loc 1 790 0
 1387 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1388              	.LVL112:
 1389 000a 0500     		movs	r5, r0
 1390              	.LVL113:
 793:Generated_Source\PSoC4/CyLib.c ****             {
 1391              		.loc 1 793 0
 1392 000c FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1393              	.LVL114:
 1394 0010 0028     		cmp	r0, #0
 1395 0012 03D0     		beq	.L105
 1396              	.LVL115:
 796:Generated_Source\PSoC4/CyLib.c ****             }
 1397              		.loc 1 796 0
 1398 0014 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1399              	.LVL116:
 795:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 1400              		.loc 1 795 0
 1401 0018 0121     		movs	r1, #1
 1402 001a 00E0     		b	.L103
 1403              	.LVL117:
 1404              	.L105:
 780:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 1405              		.loc 1 780 0
 1406 001c 0021     		movs	r1, #0
 1407              	.LVL118:
 1408              	.L103:
 824:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 75


 1409              		.loc 1 824 0
 1410 001e 104B     		ldr	r3, .L106
 1411 0020 1B68     		ldr	r3, [r3]
 1412 0022 0093     		str	r3, [sp]
 825:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1413              		.loc 1 825 0
 1414 0024 0F4B     		ldr	r3, .L106+4
 1415 0026 1B68     		ldr	r3, [r3]
 1416 0028 0193     		str	r3, [sp, #4]
 826:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 1417              		.loc 1 826 0
 1418 002a 033C     		subs	r4, r4, #3
 1419              	.LVL119:
 1420 002c 0E4B     		ldr	r3, .L106+8
 1421 002e 1B5D     		ldrb	r3, [r3, r4]
 1422 0030 0293     		str	r3, [sp, #8]
 827:Generated_Source\PSoC4/CyLib.c **** 
 1423              		.loc 1 827 0
 1424 0032 0E4B     		ldr	r3, .L106+12
 1425 0034 1B68     		ldr	r3, [r3]
 1426 0036 0393     		str	r3, [sp, #12]
 829:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 1427              		.loc 1 829 0
 1428 0038 04AA     		add	r2, sp, #16
 1429 003a 0D4B     		ldr	r3, .L106+16
 1430 003c 0493     		str	r3, [sp, #16]
 832:Generated_Source\PSoC4/CyLib.c **** 
 1431              		.loc 1 832 0
 1432 003e 6B46     		mov	r3, sp
 1433 0040 0593     		str	r3, [sp, #20]
 834:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 1434              		.loc 1 834 0
 1435 0042 0C4B     		ldr	r3, .L106+20
 1436 0044 1A60     		str	r2, [r3]
 835:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 1437              		.loc 1 835 0
 1438 0046 0C48     		ldr	r0, .L106+24
 1439 0048 0C4A     		ldr	r2, .L106+28
 1440 004a 1060     		str	r0, [r2]
 836:Generated_Source\PSoC4/CyLib.c **** 
 1441              		.loc 1 836 0
 1442 004c 1B68     		ldr	r3, [r3]
 934:Generated_Source\PSoC4/CyLib.c ****             {
 1443              		.loc 1 934 0
 1444 004e 0129     		cmp	r1, #1
 1445 0050 01D1     		bne	.L104
 936:Generated_Source\PSoC4/CyLib.c ****             }
 1446              		.loc 1 936 0
 1447 0052 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1448              	.LVL120:
 1449              	.L104:
 947:Generated_Source\PSoC4/CyLib.c ****     }
 1450              		.loc 1 947 0
 1451 0056 2800     		movs	r0, r5
 1452 0058 FFF7FEFF 		bl	CyExitCriticalSection
 1453              	.LVL121:
 948:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 76


 1454              		.loc 1 948 0
 1455 005c 07B0     		add	sp, sp, #28
 1456              		@ sp needed
 1457              	.LVL122:
 1458              	.LVL123:
 1459 005e 30BD     		pop	{r4, r5, pc}
 1460              	.L107:
 1461              		.align	2
 1462              	.L106:
 1463 0060 08010B40 		.word	1074462984
 1464 0064 00010B40 		.word	1074462976
 1465 0068 00000000 		.word	.LANCHOR0
 1466 006c 30001040 		.word	1074790448
 1467 0070 B6EA0000 		.word	60086
 1468 0074 08001040 		.word	1074790408
 1469 0078 17000080 		.word	-2147483625
 1470 007c 04001040 		.word	1074790404
 1471              		.cfi_endproc
 1472              	.LFE10:
 1473              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1474              		.section	.text.CyDelayUs,"ax",%progbits
 1475              		.align	2
 1476              		.global	CyDelayUs
 1477              		.code	16
 1478              		.thumb_func
 1479              		.type	CyDelayUs, %function
 1480              	CyDelayUs:
 1481              	.LFB32:
2720:Generated_Source\PSoC4/CyLib.c **** 
2721:Generated_Source\PSoC4/CyLib.c **** 
2722:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2723:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2724:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2725:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2726:Generated_Source\PSoC4/CyLib.c **** *
2727:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2728:Generated_Source\PSoC4/CyLib.c **** *
2729:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2730:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2731:Generated_Source\PSoC4/CyLib.c **** {
 1482              		.loc 1 2731 0
 1483              		.cfi_startproc
 1484              		@ args = 0, pretend = 0, frame = 0
 1485              		@ frame_needed = 0, uses_anonymous_args = 0
 1486              	.LVL124:
 1487 0000 10B5     		push	{r4, lr}
 1488              		.cfi_def_cfa_offset 8
 1489              		.cfi_offset 4, -8
 1490              		.cfi_offset 14, -4
2732:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1491              		.loc 1 2732 0
 1492 0002 034B     		ldr	r3, .L109
 1493 0004 1B7B     		ldrb	r3, [r3, #12]
 1494 0006 5843     		muls	r0, r3
 1495              	.LVL125:
 1496 0008 FFF7FEFF 		bl	CyDelayCycles
 1497              	.LVL126:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 77


2733:Generated_Source\PSoC4/CyLib.c **** }
 1498              		.loc 1 2733 0
 1499              		@ sp needed
 1500 000c 10BD     		pop	{r4, pc}
 1501              	.L110:
 1502 000e C046     		.align	2
 1503              	.L109:
 1504 0010 00000000 		.word	.LANCHOR1
 1505              		.cfi_endproc
 1506              	.LFE32:
 1507              		.size	CyDelayUs, .-CyDelayUs
 1508              		.section	.text.CySysLvdEnable,"ax",%progbits
 1509              		.align	2
 1510              		.global	CySysLvdEnable
 1511              		.code	16
 1512              		.thumb_func
 1513              		.type	CySysLvdEnable, %function
 1514              	CySysLvdEnable:
 1515              	.LFB11:
2267:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1516              		.loc 1 2267 0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 0
 1519              		@ frame_needed = 0, uses_anonymous_args = 0
 1520              	.LVL127:
 1521 0000 70B5     		push	{r4, r5, r6, lr}
 1522              		.cfi_def_cfa_offset 16
 1523              		.cfi_offset 4, -16
 1524              		.cfi_offset 5, -12
 1525              		.cfi_offset 6, -8
 1526              		.cfi_offset 14, -4
 1527 0002 0300     		movs	r3, r0
2269:Generated_Source\PSoC4/CyLib.c **** 
 1528              		.loc 1 2269 0
 1529 0004 0D4C     		ldr	r4, .L112
 1530 0006 2268     		ldr	r2, [r4]
 1531 0008 0225     		movs	r5, #2
 1532 000a AA43     		bics	r2, r5
 1533 000c 2260     		str	r2, [r4]
2272:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1534              		.loc 1 2272 0
 1535 000e 0C4A     		ldr	r2, .L112+4
 1536 0010 1168     		ldr	r1, [r2]
 1537 0012 1E20     		movs	r0, #30
 1538              	.LVL128:
 1539 0014 8143     		bics	r1, r0
2273:Generated_Source\PSoC4/CyLib.c **** 
 1540              		.loc 1 2273 0
 1541 0016 5B00     		lsls	r3, r3, #1
 1542              	.LVL129:
 1543 0018 1840     		ands	r0, r3
2272:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1544              		.loc 1 2272 0
 1545 001a 0843     		orrs	r0, r1
 1546 001c 1060     		str	r0, [r2]
2276:Generated_Source\PSoC4/CyLib.c **** 
 1547              		.loc 1 2276 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 78


 1548 001e 1168     		ldr	r1, [r2]
 1549 0020 0123     		movs	r3, #1
 1550 0022 0B43     		orrs	r3, r1
 1551 0024 1360     		str	r3, [r2]
2279:Generated_Source\PSoC4/CyLib.c **** 
 1552              		.loc 1 2279 0
 1553 0026 FA20     		movs	r0, #250
 1554 0028 8000     		lsls	r0, r0, #2
 1555 002a FFF7FEFF 		bl	CyDelayUs
 1556              	.LVL130:
2282:Generated_Source\PSoC4/CyLib.c **** 
 1557              		.loc 1 2282 0
 1558 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1559              	.LVL131:
2285:Generated_Source\PSoC4/CyLib.c ****     }
 1560              		.loc 1 2285 0
 1561 0032 2368     		ldr	r3, [r4]
 1562 0034 1D43     		orrs	r5, r3
 1563 0036 2560     		str	r5, [r4]
2286:Generated_Source\PSoC4/CyLib.c **** 
 1564              		.loc 1 2286 0
 1565              		@ sp needed
 1566 0038 70BD     		pop	{r4, r5, r6, pc}
 1567              	.L113:
 1568 003a C046     		.align	2
 1569              	.L112:
 1570 003c 08000B40 		.word	1074462728
 1571 0040 18000B40 		.word	1074462744
 1572              		.cfi_endproc
 1573              	.LFE11:
 1574              		.size	CySysLvdEnable, .-CySysLvdEnable
 1575              		.global	__aeabi_uidiv
 1576              		.section	.text.CyDelayFreq,"ax",%progbits
 1577              		.align	2
 1578              		.global	CyDelayFreq
 1579              		.code	16
 1580              		.thumb_func
 1581              		.type	CyDelayFreq, %function
 1582              	CyDelayFreq:
 1583              	.LFB33:
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** 
2736:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2737:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2738:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2739:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2740:Generated_Source\PSoC4/CyLib.c **** *
2741:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2744:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2745:Generated_Source\PSoC4/CyLib.c **** {
 1584              		.loc 1 2745 0
 1585              		.cfi_startproc
 1586              		@ args = 0, pretend = 0, frame = 0
 1587              		@ frame_needed = 0, uses_anonymous_args = 0
 1588              	.LVL132:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 79


 1589 0000 70B5     		push	{r4, r5, r6, lr}
 1590              		.cfi_def_cfa_offset 16
 1591              		.cfi_offset 4, -16
 1592              		.cfi_offset 5, -12
 1593              		.cfi_offset 6, -8
 1594              		.cfi_offset 14, -4
2746:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1595              		.loc 1 2746 0
 1596 0002 0028     		cmp	r0, #0
 1597 0004 02D0     		beq	.L115
2747:Generated_Source\PSoC4/CyLib.c ****     {
2748:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1598              		.loc 1 2748 0
 1599 0006 0C4B     		ldr	r3, .L117
 1600 0008 1861     		str	r0, [r3, #16]
 1601 000a 02E0     		b	.L116
 1602              	.L115:
2749:Generated_Source\PSoC4/CyLib.c ****     }
2750:Generated_Source\PSoC4/CyLib.c ****     else
2751:Generated_Source\PSoC4/CyLib.c ****     {
2752:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1603              		.loc 1 2752 0
 1604 000c 0B4A     		ldr	r2, .L117+4
 1605 000e 0A4B     		ldr	r3, .L117
 1606 0010 1A61     		str	r2, [r3, #16]
 1607              	.L116:
2753:Generated_Source\PSoC4/CyLib.c ****     }
2754:Generated_Source\PSoC4/CyLib.c **** 
2755:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1608              		.loc 1 2755 0
 1609 0012 094C     		ldr	r4, .L117
 1610 0014 2569     		ldr	r5, [r4, #16]
 1611 0016 0A4B     		ldr	r3, .L117+8
 1612 0018 E818     		adds	r0, r5, r3
 1613              	.LVL133:
 1614 001a 0A49     		ldr	r1, .L117+12
 1615 001c FFF7FEFF 		bl	__aeabi_uidiv
 1616              	.LVL134:
 1617 0020 2073     		strb	r0, [r4, #12]
2756:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1618              		.loc 1 2756 0
 1619 0022 094B     		ldr	r3, .L117+16
 1620 0024 E818     		adds	r0, r5, r3
 1621 0026 FA21     		movs	r1, #250
 1622 0028 8900     		lsls	r1, r1, #2
 1623 002a FFF7FEFF 		bl	__aeabi_uidiv
 1624              	.LVL135:
 1625 002e A060     		str	r0, [r4, #8]
2757:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1626              		.loc 1 2757 0
 1627 0030 C003     		lsls	r0, r0, #15
 1628 0032 6060     		str	r0, [r4, #4]
2758:Generated_Source\PSoC4/CyLib.c **** }
 1629              		.loc 1 2758 0
 1630              		@ sp needed
 1631 0034 70BD     		pop	{r4, r5, r6, pc}
 1632              	.L118:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 80


 1633 0036 C046     		.align	2
 1634              	.L117:
 1635 0038 00000000 		.word	.LANCHOR1
 1636 003c 006CDC02 		.word	48000000
 1637 0040 3F420F00 		.word	999999
 1638 0044 40420F00 		.word	1000000
 1639 0048 E7030000 		.word	999
 1640              		.cfi_endproc
 1641              	.LFE33:
 1642              		.size	CyDelayFreq, .-CyDelayFreq
 1643              		.section	.text.CySysTickStop,"ax",%progbits
 1644              		.align	2
 1645              		.global	CySysTickStop
 1646              		.code	16
 1647              		.thumb_func
 1648              		.type	CySysTickStop, %function
 1649              	CySysTickStop:
 1650              	.LFB37:
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2762:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2763:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2766:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2769:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2770:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2771:Generated_Source\PSoC4/CyLib.c **** *
2772:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2773:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2774:Generated_Source\PSoC4/CyLib.c **** *
2775:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2776:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2777:Generated_Source\PSoC4/CyLib.c **** {
2778:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2779:Generated_Source\PSoC4/CyLib.c ****     {
2780:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2781:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2782:Generated_Source\PSoC4/CyLib.c ****     }
2783:Generated_Source\PSoC4/CyLib.c **** 
2784:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2785:Generated_Source\PSoC4/CyLib.c **** }
2786:Generated_Source\PSoC4/CyLib.c **** 
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2789:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2790:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2791:Generated_Source\PSoC4/CyLib.c **** *
2792:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2793:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2794:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2795:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 81


2798:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2799:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2800:Generated_Source\PSoC4/CyLib.c **** *
2801:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2802:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2803:Generated_Source\PSoC4/CyLib.c **** *
2804:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2805:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2806:Generated_Source\PSoC4/CyLib.c **** {
2807:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2808:Generated_Source\PSoC4/CyLib.c **** 
2809:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2810:Generated_Source\PSoC4/CyLib.c ****     {
2811:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2812:Generated_Source\PSoC4/CyLib.c ****     }
2813:Generated_Source\PSoC4/CyLib.c **** 
2814:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2815:Generated_Source\PSoC4/CyLib.c **** 
2816:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2817:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2818:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2819:Generated_Source\PSoC4/CyLib.c **** 
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2821:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2822:Generated_Source\PSoC4/CyLib.c **** }
2823:Generated_Source\PSoC4/CyLib.c **** 
2824:Generated_Source\PSoC4/CyLib.c **** 
2825:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2827:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2828:Generated_Source\PSoC4/CyLib.c **** *
2829:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2830:Generated_Source\PSoC4/CyLib.c **** *
2831:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2832:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2833:Generated_Source\PSoC4/CyLib.c **** *
2834:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2835:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2836:Generated_Source\PSoC4/CyLib.c **** {
2837:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2838:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2839:Generated_Source\PSoC4/CyLib.c **** }
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** 
2842:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2844:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c **** *
2846:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2847:Generated_Source\PSoC4/CyLib.c **** *
2848:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2849:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2850:Generated_Source\PSoC4/CyLib.c **** *
2851:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2852:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2853:Generated_Source\PSoC4/CyLib.c **** {
 1651              		.loc 1 2853 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 82


 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 0
 1654              		@ frame_needed = 0, uses_anonymous_args = 0
 1655              		@ link register save eliminated.
2854:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1656              		.loc 1 2854 0
 1657 0000 024A     		ldr	r2, .L120
 1658 0002 1368     		ldr	r3, [r2]
 1659 0004 0121     		movs	r1, #1
 1660 0006 8B43     		bics	r3, r1
 1661 0008 1360     		str	r3, [r2]
2855:Generated_Source\PSoC4/CyLib.c **** }
 1662              		.loc 1 2855 0
 1663              		@ sp needed
 1664 000a 7047     		bx	lr
 1665              	.L121:
 1666              		.align	2
 1667              	.L120:
 1668 000c 10E000E0 		.word	-536813552
 1669              		.cfi_endproc
 1670              	.LFE37:
 1671              		.size	CySysTickStop, .-CySysTickStop
 1672              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1673              		.align	2
 1674              		.global	CySysTickEnableInterrupt
 1675              		.code	16
 1676              		.thumb_func
 1677              		.type	CySysTickEnableInterrupt, %function
 1678              	CySysTickEnableInterrupt:
 1679              	.LFB38:
2856:Generated_Source\PSoC4/CyLib.c **** 
2857:Generated_Source\PSoC4/CyLib.c **** 
2858:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2859:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2860:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2865:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2866:Generated_Source\PSoC4/CyLib.c **** *
2867:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2868:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2869:Generated_Source\PSoC4/CyLib.c **** {
 1680              		.loc 1 2869 0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 0
 1683              		@ frame_needed = 0, uses_anonymous_args = 0
 1684              		@ link register save eliminated.
2870:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1685              		.loc 1 2870 0
 1686 0000 024A     		ldr	r2, .L123
 1687 0002 1168     		ldr	r1, [r2]
 1688 0004 0223     		movs	r3, #2
 1689 0006 0B43     		orrs	r3, r1
 1690 0008 1360     		str	r3, [r2]
2871:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 83


 1691              		.loc 1 2871 0
 1692              		@ sp needed
 1693 000a 7047     		bx	lr
 1694              	.L124:
 1695              		.align	2
 1696              	.L123:
 1697 000c 10E000E0 		.word	-536813552
 1698              		.cfi_endproc
 1699              	.LFE38:
 1700              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1701              		.section	.text.CySysTickEnable,"ax",%progbits
 1702              		.align	2
 1703              		.global	CySysTickEnable
 1704              		.code	16
 1705              		.thumb_func
 1706              		.type	CySysTickEnable, %function
 1707              	CySysTickEnable:
 1708              	.LFB36:
2836:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1709              		.loc 1 2836 0
 1710              		.cfi_startproc
 1711              		@ args = 0, pretend = 0, frame = 0
 1712              		@ frame_needed = 0, uses_anonymous_args = 0
 1713 0000 10B5     		push	{r4, lr}
 1714              		.cfi_def_cfa_offset 8
 1715              		.cfi_offset 4, -8
 1716              		.cfi_offset 14, -4
2837:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1717              		.loc 1 2837 0
 1718 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1719              	.LVL136:
2838:Generated_Source\PSoC4/CyLib.c **** }
 1720              		.loc 1 2838 0
 1721 0006 034A     		ldr	r2, .L126
 1722 0008 1168     		ldr	r1, [r2]
 1723 000a 0123     		movs	r3, #1
 1724 000c 0B43     		orrs	r3, r1
 1725 000e 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CyLib.c **** 
 1726              		.loc 1 2839 0
 1727              		@ sp needed
 1728 0010 10BD     		pop	{r4, pc}
 1729              	.L127:
 1730 0012 C046     		.align	2
 1731              	.L126:
 1732 0014 10E000E0 		.word	-536813552
 1733              		.cfi_endproc
 1734              	.LFE36:
 1735              		.size	CySysTickEnable, .-CySysTickEnable
 1736              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1737              		.align	2
 1738              		.global	CySysTickDisableInterrupt
 1739              		.code	16
 1740              		.thumb_func
 1741              		.type	CySysTickDisableInterrupt, %function
 1742              	CySysTickDisableInterrupt:
 1743              	.LFB39:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 84


2872:Generated_Source\PSoC4/CyLib.c **** 
2873:Generated_Source\PSoC4/CyLib.c **** 
2874:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2875:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2876:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2879:Generated_Source\PSoC4/CyLib.c **** *
2880:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2881:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2882:Generated_Source\PSoC4/CyLib.c **** *
2883:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2884:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2885:Generated_Source\PSoC4/CyLib.c **** {
 1744              		.loc 1 2885 0
 1745              		.cfi_startproc
 1746              		@ args = 0, pretend = 0, frame = 0
 1747              		@ frame_needed = 0, uses_anonymous_args = 0
 1748              		@ link register save eliminated.
2886:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1749              		.loc 1 2886 0
 1750 0000 024A     		ldr	r2, .L129
 1751 0002 1368     		ldr	r3, [r2]
 1752 0004 0221     		movs	r1, #2
 1753 0006 8B43     		bics	r3, r1
 1754 0008 1360     		str	r3, [r2]
2887:Generated_Source\PSoC4/CyLib.c **** }
 1755              		.loc 1 2887 0
 1756              		@ sp needed
 1757 000a 7047     		bx	lr
 1758              	.L130:
 1759              		.align	2
 1760              	.L129:
 1761 000c 10E000E0 		.word	-536813552
 1762              		.cfi_endproc
 1763              	.LFE39:
 1764              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1765              		.section	.text.CySysTickSetReload,"ax",%progbits
 1766              		.align	2
 1767              		.global	CySysTickSetReload
 1768              		.code	16
 1769              		.thumb_func
 1770              		.type	CySysTickSetReload, %function
 1771              	CySysTickSetReload:
 1772              	.LFB40:
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2891:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2892:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2893:Generated_Source\PSoC4/CyLib.c **** *
2894:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2895:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2896:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2899:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 85


2900:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2901:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2902:Generated_Source\PSoC4/CyLib.c **** {
 1773              		.loc 1 2902 0
 1774              		.cfi_startproc
 1775              		@ args = 0, pretend = 0, frame = 0
 1776              		@ frame_needed = 0, uses_anonymous_args = 0
 1777              		@ link register save eliminated.
 1778              	.LVL137:
2903:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1779              		.loc 1 2903 0
 1780 0000 0002     		lsls	r0, r0, #8
 1781              	.LVL138:
 1782 0002 000A     		lsrs	r0, r0, #8
 1783 0004 014B     		ldr	r3, .L132
 1784 0006 1860     		str	r0, [r3]
2904:Generated_Source\PSoC4/CyLib.c **** }
 1785              		.loc 1 2904 0
 1786              		@ sp needed
 1787 0008 7047     		bx	lr
 1788              	.L133:
 1789 000a C046     		.align	2
 1790              	.L132:
 1791 000c 14E000E0 		.word	-536813548
 1792              		.cfi_endproc
 1793              	.LFE40:
 1794              		.size	CySysTickSetReload, .-CySysTickSetReload
 1795              		.section	.text.CySysTickGetReload,"ax",%progbits
 1796              		.align	2
 1797              		.global	CySysTickGetReload
 1798              		.code	16
 1799              		.thumb_func
 1800              		.type	CySysTickGetReload, %function
 1801              	CySysTickGetReload:
 1802              	.LFB41:
2905:Generated_Source\PSoC4/CyLib.c **** 
2906:Generated_Source\PSoC4/CyLib.c **** 
2907:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2908:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2909:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2910:Generated_Source\PSoC4/CyLib.c **** *
2911:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** * \return
2914:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2915:Generated_Source\PSoC4/CyLib.c **** *
2916:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2917:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2918:Generated_Source\PSoC4/CyLib.c **** {
 1803              		.loc 1 2918 0
 1804              		.cfi_startproc
 1805              		@ args = 0, pretend = 0, frame = 0
 1806              		@ frame_needed = 0, uses_anonymous_args = 0
 1807              		@ link register save eliminated.
2919:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1808              		.loc 1 2919 0
 1809 0000 024B     		ldr	r3, .L135
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 86


 1810 0002 1868     		ldr	r0, [r3]
 1811 0004 0002     		lsls	r0, r0, #8
 1812 0006 000A     		lsrs	r0, r0, #8
2920:Generated_Source\PSoC4/CyLib.c **** }
 1813              		.loc 1 2920 0
 1814              		@ sp needed
 1815 0008 7047     		bx	lr
 1816              	.L136:
 1817 000a C046     		.align	2
 1818              	.L135:
 1819 000c 14E000E0 		.word	-536813548
 1820              		.cfi_endproc
 1821              	.LFE41:
 1822              		.size	CySysTickGetReload, .-CySysTickGetReload
 1823              		.section	.text.CySysTickGetValue,"ax",%progbits
 1824              		.align	2
 1825              		.global	CySysTickGetValue
 1826              		.code	16
 1827              		.thumb_func
 1828              		.type	CySysTickGetValue, %function
 1829              	CySysTickGetValue:
 1830              	.LFB42:
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** * \return
2930:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2933:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2934:Generated_Source\PSoC4/CyLib.c **** {
 1831              		.loc 1 2934 0
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 0
 1834              		@ frame_needed = 0, uses_anonymous_args = 0
 1835              		@ link register save eliminated.
2935:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1836              		.loc 1 2935 0
 1837 0000 024B     		ldr	r3, .L138
 1838 0002 1868     		ldr	r0, [r3]
 1839 0004 0002     		lsls	r0, r0, #8
 1840 0006 000A     		lsrs	r0, r0, #8
2936:Generated_Source\PSoC4/CyLib.c **** }
 1841              		.loc 1 2936 0
 1842              		@ sp needed
 1843 0008 7047     		bx	lr
 1844              	.L139:
 1845 000a C046     		.align	2
 1846              	.L138:
 1847 000c 18E000E0 		.word	-536813544
 1848              		.cfi_endproc
 1849              	.LFE42:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 87


 1850              		.size	CySysTickGetValue, .-CySysTickGetValue
 1851              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1852              		.align	2
 1853              		.global	CySysTickSetClockSource
 1854              		.code	16
 1855              		.thumb_func
 1856              		.type	CySysTickSetClockSource, %function
 1857              	CySysTickSetClockSource:
 1858              	.LFB43:
2937:Generated_Source\PSoC4/CyLib.c **** 
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2940:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2941:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2942:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2943:Generated_Source\PSoC4/CyLib.c ****     *
2944:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2945:Generated_Source\PSoC4/CyLib.c ****     *
2946:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2947:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2948:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2949:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2950:Generated_Source\PSoC4/CyLib.c ****     *
2951:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2952:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2953:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2954:Generated_Source\PSoC4/CyLib.c ****     *
2955:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2956:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2957:Generated_Source\PSoC4/CyLib.c ****     *
2958:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2959:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2960:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2961:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2962:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2963:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2964:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2965:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2966:Generated_Source\PSoC4/CyLib.c ****     {
 1859              		.loc 1 2966 0
 1860              		.cfi_startproc
 1861              		@ args = 0, pretend = 0, frame = 0
 1862              		@ frame_needed = 0, uses_anonymous_args = 0
 1863              		@ link register save eliminated.
 1864              	.LVL139:
2967:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1865              		.loc 1 2967 0
 1866 0000 0128     		cmp	r0, #1
 1867 0002 05D1     		bne	.L141
2968:Generated_Source\PSoC4/CyLib.c ****         {
2969:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1868              		.loc 1 2969 0
 1869 0004 054A     		ldr	r2, .L143
 1870 0006 1168     		ldr	r1, [r2]
 1871 0008 0423     		movs	r3, #4
 1872 000a 0B43     		orrs	r3, r1
 1873 000c 1360     		str	r3, [r2]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 88


 1874 000e 04E0     		b	.L140
 1875              	.L141:
2970:Generated_Source\PSoC4/CyLib.c ****         }
2971:Generated_Source\PSoC4/CyLib.c ****         else
2972:Generated_Source\PSoC4/CyLib.c ****         {
2973:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1876              		.loc 1 2973 0
 1877 0010 024A     		ldr	r2, .L143
 1878 0012 1368     		ldr	r3, [r2]
 1879 0014 0421     		movs	r1, #4
 1880 0016 8B43     		bics	r3, r1
 1881 0018 1360     		str	r3, [r2]
 1882              	.L140:
2974:Generated_Source\PSoC4/CyLib.c ****         }
2975:Generated_Source\PSoC4/CyLib.c ****     }
 1883              		.loc 1 2975 0
 1884              		@ sp needed
 1885 001a 7047     		bx	lr
 1886              	.L144:
 1887              		.align	2
 1888              	.L143:
 1889 001c 10E000E0 		.word	-536813552
 1890              		.cfi_endproc
 1891              	.LFE43:
 1892              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1893              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1894              		.align	2
 1895              		.global	CySysTickGetClockSource
 1896              		.code	16
 1897              		.thumb_func
 1898              		.type	CySysTickGetClockSource, %function
 1899              	CySysTickGetClockSource:
 1900              	.LFB44:
2976:Generated_Source\PSoC4/CyLib.c **** 
2977:Generated_Source\PSoC4/CyLib.c ****     
2978:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2979:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2980:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2981:Generated_Source\PSoC4/CyLib.c ****     *
2982:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2983:Generated_Source\PSoC4/CyLib.c ****     *
2984:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2985:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2986:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2987:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2988:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2989:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2990:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2991:Generated_Source\PSoC4/CyLib.c ****     {
 1901              		.loc 1 2991 0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 0
 1904              		@ frame_needed = 0, uses_anonymous_args = 0
 1905              		@ link register save eliminated.
2992:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1906              		.loc 1 2992 0
 1907 0000 024B     		ldr	r3, .L146
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 89


 1908 0002 1868     		ldr	r0, [r3]
 1909 0004 8008     		lsrs	r0, r0, #2
 1910 0006 0123     		movs	r3, #1
 1911 0008 1840     		ands	r0, r3
2993:Generated_Source\PSoC4/CyLib.c ****     }
 1912              		.loc 1 2993 0
 1913              		@ sp needed
 1914 000a 7047     		bx	lr
 1915              	.L147:
 1916              		.align	2
 1917              	.L146:
 1918 000c 10E000E0 		.word	-536813552
 1919              		.cfi_endproc
 1920              	.LFE44:
 1921              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1922              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1923              		.align	2
 1924              		.global	CySysTickGetCountFlag
 1925              		.code	16
 1926              		.thumb_func
 1927              		.type	CySysTickGetCountFlag, %function
 1928              	CySysTickGetCountFlag:
 1929              	.LFB45:
2994:Generated_Source\PSoC4/CyLib.c ****     
2995:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2996:Generated_Source\PSoC4/CyLib.c **** 
2997:Generated_Source\PSoC4/CyLib.c **** 
2998:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2999:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3000:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3001:Generated_Source\PSoC4/CyLib.c **** *
3002:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3003:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3004:Generated_Source\PSoC4/CyLib.c **** *
3005:Generated_Source\PSoC4/CyLib.c **** * \return
3006:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3007:Generated_Source\PSoC4/CyLib.c **** *
3008:Generated_Source\PSoC4/CyLib.c **** *
3009:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3010:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3013:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3014:Generated_Source\PSoC4/CyLib.c **** {
 1930              		.loc 1 3014 0
 1931              		.cfi_startproc
 1932              		@ args = 0, pretend = 0, frame = 0
 1933              		@ frame_needed = 0, uses_anonymous_args = 0
 1934              		@ link register save eliminated.
3015:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1935              		.loc 1 3015 0
 1936 0000 024B     		ldr	r3, .L149
 1937 0002 1868     		ldr	r0, [r3]
 1938 0004 000C     		lsrs	r0, r0, #16
 1939 0006 0123     		movs	r3, #1
 1940 0008 1840     		ands	r0, r3
3016:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 90


 1941              		.loc 1 3016 0
 1942              		@ sp needed
 1943 000a 7047     		bx	lr
 1944              	.L150:
 1945              		.align	2
 1946              	.L149:
 1947 000c 10E000E0 		.word	-536813552
 1948              		.cfi_endproc
 1949              	.LFE45:
 1950              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1951              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1952              		.align	2
 1953              		.code	16
 1954              		.thumb_func
 1955              		.type	CySysTickServiceCallbacks, %function
 1956              	CySysTickServiceCallbacks:
 1957              	.LFB49:
3017:Generated_Source\PSoC4/CyLib.c **** 
3018:Generated_Source\PSoC4/CyLib.c **** 
3019:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3020:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3021:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3022:Generated_Source\PSoC4/CyLib.c **** *
3023:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3024:Generated_Source\PSoC4/CyLib.c **** *
3025:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3026:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3027:Generated_Source\PSoC4/CyLib.c **** {
3028:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3029:Generated_Source\PSoC4/CyLib.c **** }
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c **** 
3032:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3033:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3034:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3035:Generated_Source\PSoC4/CyLib.c **** *
3036:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3037:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3038:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3039:Generated_Source\PSoC4/CyLib.c **** *
3040:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3041:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3042:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3043:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3044:Generated_Source\PSoC4/CyLib.c **** *  functions.
3045:Generated_Source\PSoC4/CyLib.c **** *
3046:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3047:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3048:Generated_Source\PSoC4/CyLib.c **** *
3049:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3050:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3051:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3052:Generated_Source\PSoC4/CyLib.c **** *
3053:Generated_Source\PSoC4/CyLib.c **** * \return
3054:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3055:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3056:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 91


3057:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3058:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3059:Generated_Source\PSoC4/CyLib.c **** *
3060:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3061:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3062:Generated_Source\PSoC4/CyLib.c **** {
3063:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3064:Generated_Source\PSoC4/CyLib.c **** 
3065:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3066:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3067:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3068:Generated_Source\PSoC4/CyLib.c **** }
3069:Generated_Source\PSoC4/CyLib.c **** 
3070:Generated_Source\PSoC4/CyLib.c **** 
3071:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3072:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3073:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3074:Generated_Source\PSoC4/CyLib.c **** *
3075:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3076:Generated_Source\PSoC4/CyLib.c **** *
3077:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3078:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** * \return
3081:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3082:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3083:Generated_Source\PSoC4/CyLib.c **** *
3084:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3085:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3086:Generated_Source\PSoC4/CyLib.c **** {
3087:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3088:Generated_Source\PSoC4/CyLib.c **** }
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3093:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3094:Generated_Source\PSoC4/CyLib.c **** *
3095:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3096:Generated_Source\PSoC4/CyLib.c **** *
3097:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3098:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3099:Generated_Source\PSoC4/CyLib.c **** {
 1958              		.loc 1 3099 0
 1959              		.cfi_startproc
 1960              		@ args = 0, pretend = 0, frame = 0
 1961              		@ frame_needed = 0, uses_anonymous_args = 0
 1962 0000 10B5     		push	{r4, lr}
 1963              		.cfi_def_cfa_offset 8
 1964              		.cfi_offset 4, -8
 1965              		.cfi_offset 14, -4
3100:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3101:Generated_Source\PSoC4/CyLib.c **** 
3102:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3103:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1966              		.loc 1 3103 0
 1967 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 92


 1968              	.LVL140:
 1969 0006 0128     		cmp	r0, #1
 1970 0008 0BD1     		bne	.L151
 1971 000a 07E0     		b	.L156
 1972              	.LVL141:
 1973              	.L155:
3104:Generated_Source\PSoC4/CyLib.c ****     {
3105:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3106:Generated_Source\PSoC4/CyLib.c ****         {
3107:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1974              		.loc 1 3107 0
 1975 000c A300     		lsls	r3, r4, #2
 1976 000e 054A     		ldr	r2, .L157
 1977 0010 9B58     		ldr	r3, [r3, r2]
 1978 0012 002B     		cmp	r3, #0
 1979 0014 00D0     		beq	.L154
3108:Generated_Source\PSoC4/CyLib.c ****             {
3109:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1980              		.loc 1 3109 0
 1981 0016 9847     		blx	r3
 1982              	.LVL142:
 1983              	.L154:
3105:Generated_Source\PSoC4/CyLib.c ****         {
 1984              		.loc 1 3105 0 discriminator 2
 1985 0018 0134     		adds	r4, r4, #1
 1986              	.LVL143:
 1987 001a 00E0     		b	.L152
 1988              	.LVL144:
 1989              	.L156:
 1990 001c 0024     		movs	r4, #0
 1991              	.L152:
 1992              	.LVL145:
3105:Generated_Source\PSoC4/CyLib.c ****         {
 1993              		.loc 1 3105 0 is_stmt 0 discriminator 1
 1994 001e 042C     		cmp	r4, #4
 1995 0020 F4D9     		bls	.L155
 1996              	.LVL146:
 1997              	.L151:
3110:Generated_Source\PSoC4/CyLib.c ****             }
3111:Generated_Source\PSoC4/CyLib.c ****         }
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** }
 1998              		.loc 1 3113 0 is_stmt 1
 1999              		@ sp needed
 2000 0022 10BD     		pop	{r4, pc}
 2001              	.L158:
 2002              		.align	2
 2003              	.L157:
 2004 0024 00000000 		.word	.LANCHOR2
 2005              		.cfi_endproc
 2006              	.LFE49:
 2007              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2008              		.section	.text.CySysTickClear,"ax",%progbits
 2009              		.align	2
 2010              		.global	CySysTickClear
 2011              		.code	16
 2012              		.thumb_func
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 93


 2013              		.type	CySysTickClear, %function
 2014              	CySysTickClear:
 2015              	.LFB46:
3027:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2016              		.loc 1 3027 0
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 0
 2019              		@ frame_needed = 0, uses_anonymous_args = 0
 2020              		@ link register save eliminated.
3028:Generated_Source\PSoC4/CyLib.c **** }
 2021              		.loc 1 3028 0
 2022 0000 0022     		movs	r2, #0
 2023 0002 014B     		ldr	r3, .L160
 2024 0004 1A60     		str	r2, [r3]
3029:Generated_Source\PSoC4/CyLib.c **** 
 2025              		.loc 1 3029 0
 2026              		@ sp needed
 2027 0006 7047     		bx	lr
 2028              	.L161:
 2029              		.align	2
 2030              	.L160:
 2031 0008 18E000E0 		.word	-536813544
 2032              		.cfi_endproc
 2033              	.LFE46:
 2034              		.size	CySysTickClear, .-CySysTickClear
 2035              		.section	.text.CySysTickInit,"ax",%progbits
 2036              		.align	2
 2037              		.global	CySysTickInit
 2038              		.code	16
 2039              		.thumb_func
 2040              		.type	CySysTickInit, %function
 2041              	CySysTickInit:
 2042              	.LFB35:
2806:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 2043              		.loc 1 2806 0
 2044              		.cfi_startproc
 2045              		@ args = 0, pretend = 0, frame = 0
 2046              		@ frame_needed = 0, uses_anonymous_args = 0
 2047 0000 10B5     		push	{r4, lr}
 2048              		.cfi_def_cfa_offset 8
 2049              		.cfi_offset 4, -8
 2050              		.cfi_offset 14, -4
 2051              	.LVL147:
2809:Generated_Source\PSoC4/CyLib.c ****     {
 2052              		.loc 1 2809 0
 2053 0002 0023     		movs	r3, #0
 2054 0004 04E0     		b	.L163
 2055              	.LVL148:
 2056              	.L164:
2811:Generated_Source\PSoC4/CyLib.c ****     }
 2057              		.loc 1 2811 0 discriminator 3
 2058 0006 9900     		lsls	r1, r3, #2
 2059 0008 0020     		movs	r0, #0
 2060 000a 0B4A     		ldr	r2, .L165
 2061 000c 8850     		str	r0, [r1, r2]
2809:Generated_Source\PSoC4/CyLib.c ****     {
 2062              		.loc 1 2809 0 discriminator 3
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 94


 2063 000e 0133     		adds	r3, r3, #1
 2064              	.LVL149:
 2065              	.L163:
2809:Generated_Source\PSoC4/CyLib.c ****     {
 2066              		.loc 1 2809 0 is_stmt 0 discriminator 1
 2067 0010 042B     		cmp	r3, #4
 2068 0012 F8D9     		bls	.L164
2814:Generated_Source\PSoC4/CyLib.c **** 
 2069              		.loc 1 2814 0 is_stmt 1
 2070 0014 0949     		ldr	r1, .L165+4
 2071 0016 0F20     		movs	r0, #15
 2072 0018 FFF7FEFF 		bl	CyIntSetSysVector
 2073              	.LVL150:
2817:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 2074              		.loc 1 2817 0
 2075 001c 0120     		movs	r0, #1
 2076 001e FFF7FEFF 		bl	CySysTickSetClockSource
 2077              	.LVL151:
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2078              		.loc 1 2820 0
 2079 0022 074B     		ldr	r3, .L165+8
 2080 0024 1869     		ldr	r0, [r3, #16]
 2081 0026 FA21     		movs	r1, #250
 2082 0028 8900     		lsls	r1, r1, #2
 2083 002a FFF7FEFF 		bl	__aeabi_uidiv
 2084              	.LVL152:
 2085 002e FFF7FEFF 		bl	CySysTickSetReload
 2086              	.LVL153:
2821:Generated_Source\PSoC4/CyLib.c **** }
 2087              		.loc 1 2821 0
 2088 0032 FFF7FEFF 		bl	CySysTickClear
 2089              	.LVL154:
2822:Generated_Source\PSoC4/CyLib.c **** 
 2090              		.loc 1 2822 0
 2091              		@ sp needed
 2092 0036 10BD     		pop	{r4, pc}
 2093              	.L166:
 2094              		.align	2
 2095              	.L165:
 2096 0038 00000000 		.word	.LANCHOR2
 2097 003c 00000000 		.word	CySysTickServiceCallbacks
 2098 0040 00000000 		.word	.LANCHOR1
 2099              		.cfi_endproc
 2100              	.LFE35:
 2101              		.size	CySysTickInit, .-CySysTickInit
 2102              		.section	.text.CySysTickStart,"ax",%progbits
 2103              		.align	2
 2104              		.global	CySysTickStart
 2105              		.code	16
 2106              		.thumb_func
 2107              		.type	CySysTickStart, %function
 2108              	CySysTickStart:
 2109              	.LFB34:
2777:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2110              		.loc 1 2777 0
 2111              		.cfi_startproc
 2112              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 95


 2113              		@ frame_needed = 0, uses_anonymous_args = 0
 2114 0000 10B5     		push	{r4, lr}
 2115              		.cfi_def_cfa_offset 8
 2116              		.cfi_offset 4, -8
 2117              		.cfi_offset 14, -4
2778:Generated_Source\PSoC4/CyLib.c ****     {
 2118              		.loc 1 2778 0
 2119 0002 064B     		ldr	r3, .L169
 2120 0004 5B69     		ldr	r3, [r3, #20]
 2121 0006 002B     		cmp	r3, #0
 2122 0008 04D1     		bne	.L168
2780:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2123              		.loc 1 2780 0
 2124 000a FFF7FEFF 		bl	CySysTickInit
 2125              	.LVL155:
2781:Generated_Source\PSoC4/CyLib.c ****     }
 2126              		.loc 1 2781 0
 2127 000e 0122     		movs	r2, #1
 2128 0010 024B     		ldr	r3, .L169
 2129 0012 5A61     		str	r2, [r3, #20]
 2130              	.L168:
2784:Generated_Source\PSoC4/CyLib.c **** }
 2131              		.loc 1 2784 0
 2132 0014 FFF7FEFF 		bl	CySysTickEnable
 2133              	.LVL156:
2785:Generated_Source\PSoC4/CyLib.c **** 
 2134              		.loc 1 2785 0
 2135              		@ sp needed
 2136 0018 10BD     		pop	{r4, pc}
 2137              	.L170:
 2138 001a C046     		.align	2
 2139              	.L169:
 2140 001c 00000000 		.word	.LANCHOR2
 2141              		.cfi_endproc
 2142              	.LFE34:
 2143              		.size	CySysTickStart, .-CySysTickStart
 2144              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2145              		.align	2
 2146              		.global	CySysTickSetCallback
 2147              		.code	16
 2148              		.thumb_func
 2149              		.type	CySysTickSetCallback, %function
 2150              	CySysTickSetCallback:
 2151              	.LFB47:
3062:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2152              		.loc 1 3062 0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 0
 2155              		@ frame_needed = 0, uses_anonymous_args = 0
 2156              		@ link register save eliminated.
 2157              	.LVL157:
3065:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2158              		.loc 1 3065 0
 2159 0000 024A     		ldr	r2, .L172
 2160 0002 8300     		lsls	r3, r0, #2
 2161 0004 9858     		ldr	r0, [r3, r2]
 2162              	.LVL158:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 96


3066:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2163              		.loc 1 3066 0
 2164 0006 9950     		str	r1, [r3, r2]
3068:Generated_Source\PSoC4/CyLib.c **** 
 2165              		.loc 1 3068 0
 2166              		@ sp needed
 2167 0008 7047     		bx	lr
 2168              	.L173:
 2169 000a C046     		.align	2
 2170              	.L172:
 2171 000c 00000000 		.word	.LANCHOR2
 2172              		.cfi_endproc
 2173              	.LFE47:
 2174              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2175              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2176              		.align	2
 2177              		.global	CySysTickGetCallback
 2178              		.code	16
 2179              		.thumb_func
 2180              		.type	CySysTickGetCallback, %function
 2181              	CySysTickGetCallback:
 2182              	.LFB48:
3086:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2183              		.loc 1 3086 0
 2184              		.cfi_startproc
 2185              		@ args = 0, pretend = 0, frame = 0
 2186              		@ frame_needed = 0, uses_anonymous_args = 0
 2187              		@ link register save eliminated.
 2188              	.LVL159:
3087:Generated_Source\PSoC4/CyLib.c **** }
 2189              		.loc 1 3087 0
 2190 0000 8000     		lsls	r0, r0, #2
 2191              	.LVL160:
 2192 0002 014B     		ldr	r3, .L175
 2193 0004 C058     		ldr	r0, [r0, r3]
3088:Generated_Source\PSoC4/CyLib.c **** 
 2194              		.loc 1 3088 0
 2195              		@ sp needed
 2196 0006 7047     		bx	lr
 2197              	.L176:
 2198              		.align	2
 2199              	.L175:
 2200 0008 00000000 		.word	.LANCHOR2
 2201              		.cfi_endproc
 2202              	.LFE48:
 2203              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2204              		.section	.text.CyGetUniqueId,"ax",%progbits
 2205              		.align	2
 2206              		.global	CyGetUniqueId
 2207              		.code	16
 2208              		.thumb_func
 2209              		.type	CyGetUniqueId, %function
 2210              	CyGetUniqueId:
 2211              	.LFB50:
3114:Generated_Source\PSoC4/CyLib.c **** 
3115:Generated_Source\PSoC4/CyLib.c **** 
3116:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 97


3117:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3118:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3119:Generated_Source\PSoC4/CyLib.c **** *
3120:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3121:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3122:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3123:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3126:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3127:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3128:Generated_Source\PSoC4/CyLib.c **** *
3129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3130:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3131:Generated_Source\PSoC4/CyLib.c **** {
 2212              		.loc 1 3131 0
 2213              		.cfi_startproc
 2214              		@ args = 0, pretend = 0, frame = 0
 2215              		@ frame_needed = 0, uses_anonymous_args = 0
 2216              		@ link register save eliminated.
 2217              	.LVL161:
3132:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3133:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2218              		.loc 1 3133 0
 2219 0000 134B     		ldr	r3, .L178
 2220 0002 1B78     		ldrb	r3, [r3]
 2221 0004 DAB2     		uxtb	r2, r3
 2222 0006 0260     		str	r2, [r0]
3134:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2223              		.loc 1 3134 0
 2224 0008 124B     		ldr	r3, .L178+4
 2225 000a 1B78     		ldrb	r3, [r3]
 2226 000c 1B02     		lsls	r3, r3, #8
 2227 000e 1343     		orrs	r3, r2
 2228 0010 0360     		str	r3, [r0]
3135:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2229              		.loc 1 3135 0
 2230 0012 114A     		ldr	r2, .L178+8
 2231 0014 1278     		ldrb	r2, [r2]
 2232 0016 1204     		lsls	r2, r2, #16
 2233 0018 1343     		orrs	r3, r2
 2234 001a 0360     		str	r3, [r0]
3136:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2235              		.loc 1 3136 0
 2236 001c 0F4A     		ldr	r2, .L178+12
 2237 001e 1278     		ldrb	r2, [r2]
 2238 0020 1206     		lsls	r2, r2, #24
 2239 0022 1343     		orrs	r3, r2
 2240 0024 0360     		str	r3, [r0]
3137:Generated_Source\PSoC4/CyLib.c **** 
3138:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2241              		.loc 1 3138 0
 2242 0026 0E4B     		ldr	r3, .L178+16
 2243 0028 1B78     		ldrb	r3, [r3]
 2244 002a DAB2     		uxtb	r2, r3
 2245 002c 4260     		str	r2, [r0, #4]
3139:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 98


 2246              		.loc 1 3139 0
 2247 002e 0D4B     		ldr	r3, .L178+20
 2248 0030 1B78     		ldrb	r3, [r3]
 2249 0032 1B02     		lsls	r3, r3, #8
 2250 0034 1343     		orrs	r3, r2
 2251 0036 4360     		str	r3, [r0, #4]
3140:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2252              		.loc 1 3140 0
 2253 0038 0B4A     		ldr	r2, .L178+24
 2254 003a 1278     		ldrb	r2, [r2]
 2255 003c 1204     		lsls	r2, r2, #16
 2256 003e 1343     		orrs	r3, r2
 2257 0040 4360     		str	r3, [r0, #4]
3141:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2258              		.loc 1 3141 0
 2259 0042 0A4A     		ldr	r2, .L178+28
 2260 0044 1278     		ldrb	r2, [r2]
 2261 0046 1206     		lsls	r2, r2, #24
 2262 0048 1343     		orrs	r3, r2
 2263 004a 4360     		str	r3, [r0, #4]
3142:Generated_Source\PSoC4/CyLib.c **** #else
3143:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3144:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3145:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3146:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3147:Generated_Source\PSoC4/CyLib.c **** 
3148:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3149:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3150:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3151:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3152:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3153:Generated_Source\PSoC4/CyLib.c **** }
 2264              		.loc 1 3153 0
 2265              		@ sp needed
 2266 004c 7047     		bx	lr
 2267              	.L179:
 2268 004e C046     		.align	2
 2269              	.L178:
 2270 0050 78F1FF0F 		.word	268431736
 2271 0054 79F1FF0F 		.word	268431737
 2272 0058 7AF1FF0F 		.word	268431738
 2273 005c 7BF1FF0F 		.word	268431739
 2274 0060 7CF1FF0F 		.word	268431740
 2275 0064 7DF1FF0F 		.word	268431741
 2276 0068 7EF1FF0F 		.word	268431742
 2277 006c 7FF1FF0F 		.word	268431743
 2278              		.cfi_endproc
 2279              	.LFE50:
 2280              		.size	CyGetUniqueId, .-CyGetUniqueId
 2281              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2282              		.align	2
 2283              		.global	CySysSetRamAccessArbPriority
 2284              		.code	16
 2285              		.thumb_func
 2286              		.type	CySysSetRamAccessArbPriority, %function
 2287              	CySysSetRamAccessArbPriority:
 2288              	.LFB51:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 99


3154:Generated_Source\PSoC4/CyLib.c **** 
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3157:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3158:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3159:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3160:Generated_Source\PSoC4/CyLib.c ****     *
3161:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3162:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3163:Generated_Source\PSoC4/CyLib.c ****     *  details.
3164:Generated_Source\PSoC4/CyLib.c ****     *
3165:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3166:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3167:Generated_Source\PSoC4/CyLib.c ****     *
3168:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3169:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3170:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3171:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3172:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3173:Generated_Source\PSoC4/CyLib.c ****     *
3174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3175:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3176:Generated_Source\PSoC4/CyLib.c ****     {
 2289              		.loc 1 3176 0
 2290              		.cfi_startproc
 2291              		@ args = 0, pretend = 0, frame = 0
 2292              		@ frame_needed = 0, uses_anonymous_args = 0
 2293              		@ link register save eliminated.
 2294              	.LVL162:
3177:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3178:Generated_Source\PSoC4/CyLib.c **** 
3179:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2295              		.loc 1 3179 0
 2296 0000 0549     		ldr	r1, .L181
 2297 0002 0A68     		ldr	r2, [r1]
 2298 0004 054B     		ldr	r3, .L181+4
 2299 0006 1A40     		ands	r2, r3
 2300              	.LVL163:
3180:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2301              		.loc 1 3180 0
 2302 0008 4004     		lsls	r0, r0, #17
 2303              	.LVL164:
 2304 000a C023     		movs	r3, #192
 2305 000c DB02     		lsls	r3, r3, #11
 2306 000e 1840     		ands	r0, r3
 2307 0010 1043     		orrs	r0, r2
 2308              	.LVL165:
3181:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2309              		.loc 1 3181 0
 2310 0012 0860     		str	r0, [r1]
3182:Generated_Source\PSoC4/CyLib.c ****     }
 2311              		.loc 1 3182 0
 2312              		@ sp needed
 2313 0014 7047     		bx	lr
 2314              	.L182:
 2315 0016 C046     		.align	2
 2316              	.L181:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 100


 2317 0018 38001040 		.word	1074790456
 2318 001c FFFFF9FF 		.word	-393217
 2319              		.cfi_endproc
 2320              	.LFE51:
 2321              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2322              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2323              		.align	2
 2324              		.global	CySysSetFlashAccessArbPriority
 2325              		.code	16
 2326              		.thumb_func
 2327              		.type	CySysSetFlashAccessArbPriority, %function
 2328              	CySysSetFlashAccessArbPriority:
 2329              	.LFB52:
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** 
3185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3188:Generated_Source\PSoC4/CyLib.c ****     *
3189:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3190:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3191:Generated_Source\PSoC4/CyLib.c ****     *  details.
3192:Generated_Source\PSoC4/CyLib.c ****     *
3193:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3194:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3195:Generated_Source\PSoC4/CyLib.c ****     *
3196:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3197:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3198:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3199:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3200:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3201:Generated_Source\PSoC4/CyLib.c ****     *
3202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3203:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3204:Generated_Source\PSoC4/CyLib.c ****     {
 2330              		.loc 1 3204 0
 2331              		.cfi_startproc
 2332              		@ args = 0, pretend = 0, frame = 0
 2333              		@ frame_needed = 0, uses_anonymous_args = 0
 2334              		@ link register save eliminated.
 2335              	.LVL166:
3205:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3206:Generated_Source\PSoC4/CyLib.c **** 
3207:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2336              		.loc 1 3207 0
 2337 0000 0549     		ldr	r1, .L184
 2338 0002 0A68     		ldr	r2, [r1]
 2339 0004 054B     		ldr	r3, .L184+4
 2340 0006 1A40     		ands	r2, r3
 2341              	.LVL167:
3208:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2342              		.loc 1 3208 0
 2343 0008 4004     		lsls	r0, r0, #17
 2344              	.LVL168:
 2345 000a C023     		movs	r3, #192
 2346 000c DB02     		lsls	r3, r3, #11
 2347 000e 1840     		ands	r0, r3
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 101


 2348 0010 1043     		orrs	r0, r2
 2349              	.LVL169:
3209:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2350              		.loc 1 3209 0
 2351 0012 0860     		str	r0, [r1]
3210:Generated_Source\PSoC4/CyLib.c ****     }
 2352              		.loc 1 3210 0
 2353              		@ sp needed
 2354 0014 7047     		bx	lr
 2355              	.L185:
 2356 0016 C046     		.align	2
 2357              	.L184:
 2358 0018 30001040 		.word	1074790448
 2359 001c FFFFF9FF 		.word	-393217
 2360              		.cfi_endproc
 2361              	.LFE52:
 2362              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2363              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2364              		.align	2
 2365              		.global	CySysSetDmacAccessArbPriority
 2366              		.code	16
 2367              		.thumb_func
 2368              		.type	CySysSetDmacAccessArbPriority, %function
 2369              	CySysSetDmacAccessArbPriority:
 2370              	.LFB53:
3211:Generated_Source\PSoC4/CyLib.c **** 
3212:Generated_Source\PSoC4/CyLib.c **** 
3213:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3214:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3215:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3216:Generated_Source\PSoC4/CyLib.c ****     *
3217:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3218:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3219:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3220:Generated_Source\PSoC4/CyLib.c ****     *
3221:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3222:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3223:Generated_Source\PSoC4/CyLib.c ****     *
3224:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3225:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3226:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3227:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3228:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3229:Generated_Source\PSoC4/CyLib.c ****     *
3230:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3231:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3232:Generated_Source\PSoC4/CyLib.c ****     {
 2371              		.loc 1 3232 0
 2372              		.cfi_startproc
 2373              		@ args = 0, pretend = 0, frame = 0
 2374              		@ frame_needed = 0, uses_anonymous_args = 0
 2375              		@ link register save eliminated.
 2376              	.LVL170:
3233:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3234:Generated_Source\PSoC4/CyLib.c **** 
3235:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2377              		.loc 1 3235 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 102


 2378 0000 0549     		ldr	r1, .L187
 2379 0002 0A68     		ldr	r2, [r1]
 2380 0004 054B     		ldr	r3, .L187+4
 2381 0006 1A40     		ands	r2, r3
 2382              	.LVL171:
3236:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2383              		.loc 1 3236 0
 2384 0008 4004     		lsls	r0, r0, #17
 2385              	.LVL172:
 2386 000a C023     		movs	r3, #192
 2387 000c DB02     		lsls	r3, r3, #11
 2388 000e 1840     		ands	r0, r3
 2389 0010 1043     		orrs	r0, r2
 2390              	.LVL173:
3237:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2391              		.loc 1 3237 0
 2392 0012 0860     		str	r0, [r1]
3238:Generated_Source\PSoC4/CyLib.c ****     }
 2393              		.loc 1 3238 0
 2394              		@ sp needed
 2395 0014 7047     		bx	lr
 2396              	.L188:
 2397 0016 C046     		.align	2
 2398              	.L187:
 2399 0018 3C001040 		.word	1074790460
 2400 001c FFFFF9FF 		.word	-393217
 2401              		.cfi_endproc
 2402              	.LFE53:
 2403              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2404              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2405              		.align	2
 2406              		.global	CySysSetPeripheralAccessArbPriority
 2407              		.code	16
 2408              		.thumb_func
 2409              		.type	CySysSetPeripheralAccessArbPriority, %function
 2410              	CySysSetPeripheralAccessArbPriority:
 2411              	.LFB54:
3239:Generated_Source\PSoC4/CyLib.c **** 
3240:Generated_Source\PSoC4/CyLib.c **** 
3241:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3242:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3243:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3244:Generated_Source\PSoC4/CyLib.c ****     *
3245:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3246:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3247:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3248:Generated_Source\PSoC4/CyLib.c ****     *
3249:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3250:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3251:Generated_Source\PSoC4/CyLib.c ****     *
3252:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3253:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3254:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3255:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3256:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3257:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3258:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 103


3259:Generated_Source\PSoC4/CyLib.c ****     *
3260:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3261:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3262:Generated_Source\PSoC4/CyLib.c ****     {
 2412              		.loc 1 3262 0
 2413              		.cfi_startproc
 2414              		@ args = 0, pretend = 0, frame = 0
 2415              		@ frame_needed = 0, uses_anonymous_args = 0
 2416              	.LVL174:
 2417 0000 10B5     		push	{r4, lr}
 2418              		.cfi_def_cfa_offset 8
 2419              		.cfi_offset 4, -8
 2420              		.cfi_offset 14, -4
3263:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3264:Generated_Source\PSoC4/CyLib.c **** 
3265:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2421              		.loc 1 3265 0
 2422 0002 0028     		cmp	r0, #0
 2423 0004 0AD1     		bne	.L190
3266:Generated_Source\PSoC4/CyLib.c ****         {
3267:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2424              		.loc 1 3267 0
 2425 0006 1448     		ldr	r0, .L194
 2426              	.LVL175:
 2427 0008 0268     		ldr	r2, [r0]
 2428 000a 144B     		ldr	r3, .L194+4
 2429 000c 1A40     		ands	r2, r3
 2430              	.LVL176:
3268:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2431              		.loc 1 3268 0
 2432 000e 4904     		lsls	r1, r1, #17
 2433              	.LVL177:
 2434 0010 C023     		movs	r3, #192
 2435 0012 DB02     		lsls	r3, r3, #11
 2436 0014 1940     		ands	r1, r3
 2437 0016 1143     		orrs	r1, r2
 2438              	.LVL178:
3269:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 2439              		.loc 1 3269 0
 2440 0018 0160     		str	r1, [r0]
 2441 001a 1CE0     		b	.L189
 2442              	.LVL179:
 2443              	.L190:
3270:Generated_Source\PSoC4/CyLib.c ****         } else
3271:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3272:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2444              		.loc 1 3272 0
 2445 001c 0128     		cmp	r0, #1
 2446 001e 0AD1     		bne	.L192
3273:Generated_Source\PSoC4/CyLib.c ****         {
3274:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2447              		.loc 1 3274 0
 2448 0020 0F48     		ldr	r0, .L194+8
 2449              	.LVL180:
 2450 0022 0268     		ldr	r2, [r0]
 2451 0024 0D4B     		ldr	r3, .L194+4
 2452 0026 1A40     		ands	r2, r3
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 104


 2453              	.LVL181:
3275:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2454              		.loc 1 3275 0
 2455 0028 4904     		lsls	r1, r1, #17
 2456              	.LVL182:
 2457 002a C023     		movs	r3, #192
 2458 002c DB02     		lsls	r3, r3, #11
 2459 002e 1940     		ands	r1, r3
 2460 0030 1143     		orrs	r1, r2
 2461              	.LVL183:
3276:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 2462              		.loc 1 3276 0
 2463 0032 0160     		str	r1, [r0]
 2464 0034 0FE0     		b	.L189
 2465              	.LVL184:
 2466              	.L192:
3277:Generated_Source\PSoC4/CyLib.c ****         } else
3278:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3279:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3280:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 2467              		.loc 1 3280 0
 2468 0036 0228     		cmp	r0, #2
 2469 0038 0AD1     		bne	.L193
3281:Generated_Source\PSoC4/CyLib.c ****         {
3282:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2470              		.loc 1 3282 0
 2471 003a 0A48     		ldr	r0, .L194+12
 2472              	.LVL185:
 2473 003c 0268     		ldr	r2, [r0]
 2474 003e 074B     		ldr	r3, .L194+4
 2475 0040 1A40     		ands	r2, r3
 2476              	.LVL186:
3283:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2477              		.loc 1 3283 0
 2478 0042 4904     		lsls	r1, r1, #17
 2479              	.LVL187:
 2480 0044 C023     		movs	r3, #192
 2481 0046 DB02     		lsls	r3, r3, #11
 2482 0048 1940     		ands	r1, r3
 2483 004a 1143     		orrs	r1, r2
 2484              	.LVL188:
3284:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2485              		.loc 1 3284 0
 2486 004c 0160     		str	r1, [r0]
 2487 004e 02E0     		b	.L189
 2488              	.LVL189:
 2489              	.L193:
3285:Generated_Source\PSoC4/CyLib.c ****         } else
3286:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3287:Generated_Source\PSoC4/CyLib.c ****         {
3288:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3289:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 2490              		.loc 1 3289 0 discriminator 1
 2491 0050 0020     		movs	r0, #0
 2492              	.LVL190:
 2493 0052 FFF7FEFF 		bl	CyHalt
 2494              	.LVL191:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 105


 2495              	.L189:
3290:Generated_Source\PSoC4/CyLib.c ****         }
3291:Generated_Source\PSoC4/CyLib.c ****     }
 2496              		.loc 1 3291 0
 2497              		@ sp needed
 2498 0056 10BD     		pop	{r4, pc}
 2499              	.L195:
 2500              		.align	2
 2501              	.L194:
 2502 0058 00011040 		.word	1074790656
 2503 005c FFFFF9FF 		.word	-393217
 2504 0060 04011040 		.word	1074790660
 2505 0064 08011040 		.word	1074790664
 2506              		.cfi_endproc
 2507              	.LFE54:
 2508              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2509              		.global	CySysClkPumpConfig
 2510              		.global	cyImoFreqMhz2Reg
 2511              		.global	CySysTickInitVar
 2512              		.global	cydelay32kMs
 2513              		.global	cydelayFreqMhz
 2514              		.global	cydelayFreqKhz
 2515              		.global	cydelayFreqHz
 2516              		.section	.rodata
 2517              		.align	2
 2518              		.set	.LANCHOR0,. + 0
 2519              		.type	cyImoFreqMhz2Reg, %object
 2520              		.size	cyImoFreqMhz2Reg, 46
 2521              	cyImoFreqMhz2Reg:
 2522 0000 03       		.byte	3
 2523 0001 04       		.byte	4
 2524 0002 05       		.byte	5
 2525 0003 06       		.byte	6
 2526 0004 07       		.byte	7
 2527 0005 08       		.byte	8
 2528 0006 09       		.byte	9
 2529 0007 0A       		.byte	10
 2530 0008 0B       		.byte	11
 2531 0009 0C       		.byte	12
 2532 000a 0E       		.byte	14
 2533 000b 0F       		.byte	15
 2534 000c 10       		.byte	16
 2535 000d 11       		.byte	17
 2536 000e 12       		.byte	18
 2537 000f 13       		.byte	19
 2538 0010 14       		.byte	20
 2539 0011 15       		.byte	21
 2540 0012 16       		.byte	22
 2541 0013 17       		.byte	23
 2542 0014 18       		.byte	24
 2543 0015 19       		.byte	25
 2544 0016 1B       		.byte	27
 2545 0017 1C       		.byte	28
 2546 0018 1D       		.byte	29
 2547 0019 1E       		.byte	30
 2548 001a 1F       		.byte	31
 2549 001b 20       		.byte	32
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 106


 2550 001c 21       		.byte	33
 2551 001d 22       		.byte	34
 2552 001e 23       		.byte	35
 2553 001f 25       		.byte	37
 2554 0020 26       		.byte	38
 2555 0021 27       		.byte	39
 2556 0022 28       		.byte	40
 2557 0023 29       		.byte	41
 2558 0024 2A       		.byte	42
 2559 0025 2B       		.byte	43
 2560 0026 2E       		.byte	46
 2561 0027 2F       		.byte	47
 2562 0028 30       		.byte	48
 2563 0029 31       		.byte	49
 2564 002a 32       		.byte	50
 2565 002b 33       		.byte	51
 2566 002c 34       		.byte	52
 2567 002d 35       		.byte	53
 2568              		.data
 2569              		.align	2
 2570              		.set	.LANCHOR1,. + 0
 2571              		.type	CySysClkPumpConfig, %object
 2572              		.size	CySysClkPumpConfig, 4
 2573              	CySysClkPumpConfig:
 2574 0000 01000000 		.word	1
 2575              		.type	cydelay32kMs, %object
 2576              		.size	cydelay32kMs, 4
 2577              	cydelay32kMs:
 2578 0004 0000C05D 		.word	1572864000
 2579              		.type	cydelayFreqKhz, %object
 2580              		.size	cydelayFreqKhz, 4
 2581              	cydelayFreqKhz:
 2582 0008 80BB0000 		.word	48000
 2583              		.type	cydelayFreqMhz, %object
 2584              		.size	cydelayFreqMhz, 1
 2585              	cydelayFreqMhz:
 2586 000c 30       		.byte	48
 2587 000d 000000   		.space	3
 2588              		.type	cydelayFreqHz, %object
 2589              		.size	cydelayFreqHz, 4
 2590              	cydelayFreqHz:
 2591 0010 006CDC02 		.word	48000000
 2592              		.bss
 2593              		.align	2
 2594              		.set	.LANCHOR2,. + 0
 2595              		.type	CySysTickCallbacks, %object
 2596              		.size	CySysTickCallbacks, 20
 2597              	CySysTickCallbacks:
 2598 0000 00000000 		.space	20
 2598      00000000 
 2598      00000000 
 2598      00000000 
 2598      00000000 
 2599              		.type	CySysTickInitVar, %object
 2600              		.size	CySysTickInitVar, 4
 2601              	CySysTickInitVar:
 2602 0014 00000000 		.space	4
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 107


 2603              		.text
 2604              	.Letext0:
 2605              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2606              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2607              		.file 4 "Generated_Source\\PSoC4\\CyLFClk.h"
 2608              		.file 5 "Generated_Source\\PSoC4\\CyFlash.h"
 2609              		.section	.debug_info,"",%progbits
 2610              	.Ldebug_info0:
 2611 0000 3B0D0000 		.4byte	0xd3b
 2612 0004 0400     		.2byte	0x4
 2613 0006 00000000 		.4byte	.Ldebug_abbrev0
 2614 000a 04       		.byte	0x4
 2615 000b 01       		.uleb128 0x1
 2616 000c 75000000 		.4byte	.LASF120
 2617 0010 0C       		.byte	0xc
 2618 0011 7E070000 		.4byte	.LASF121
 2619 0015 1A010000 		.4byte	.LASF122
 2620 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2621 001d 00000000 		.4byte	0
 2622 0021 00000000 		.4byte	.Ldebug_line0
 2623 0025 02       		.uleb128 0x2
 2624 0026 01       		.byte	0x1
 2625 0027 06       		.byte	0x6
 2626 0028 AA010000 		.4byte	.LASF0
 2627 002c 02       		.uleb128 0x2
 2628 002d 01       		.byte	0x1
 2629 002e 08       		.byte	0x8
 2630 002f E7050000 		.4byte	.LASF1
 2631 0033 02       		.uleb128 0x2
 2632 0034 02       		.byte	0x2
 2633 0035 05       		.byte	0x5
 2634 0036 F5050000 		.4byte	.LASF2
 2635 003a 02       		.uleb128 0x2
 2636 003b 02       		.byte	0x2
 2637 003c 07       		.byte	0x7
 2638 003d B7030000 		.4byte	.LASF3
 2639 0041 02       		.uleb128 0x2
 2640 0042 04       		.byte	0x4
 2641 0043 05       		.byte	0x5
 2642 0044 0F020000 		.4byte	.LASF4
 2643 0048 02       		.uleb128 0x2
 2644 0049 04       		.byte	0x4
 2645 004a 07       		.byte	0x7
 2646 004b 2A030000 		.4byte	.LASF5
 2647 004f 02       		.uleb128 0x2
 2648 0050 08       		.byte	0x8
 2649 0051 05       		.byte	0x5
 2650 0052 9C010000 		.4byte	.LASF6
 2651 0056 02       		.uleb128 0x2
 2652 0057 08       		.byte	0x8
 2653 0058 07       		.byte	0x7
 2654 0059 03010000 		.4byte	.LASF7
 2655 005d 03       		.uleb128 0x3
 2656 005e 04       		.byte	0x4
 2657 005f 05       		.byte	0x5
 2658 0060 696E7400 		.ascii	"int\000"
 2659 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 108


 2660 0065 04       		.byte	0x4
 2661 0066 07       		.byte	0x7
 2662 0067 0E030000 		.4byte	.LASF8
 2663 006b 04       		.uleb128 0x4
 2664 006c 2F020000 		.4byte	.LASF9
 2665 0070 02       		.byte	0x2
 2666 0071 E401     		.2byte	0x1e4
 2667 0073 2C000000 		.4byte	0x2c
 2668 0077 04       		.uleb128 0x4
 2669 0078 0F000000 		.4byte	.LASF10
 2670 007c 02       		.byte	0x2
 2671 007d E501     		.2byte	0x1e5
 2672 007f 3A000000 		.4byte	0x3a
 2673 0083 04       		.uleb128 0x4
 2674 0084 6F020000 		.4byte	.LASF11
 2675 0088 02       		.byte	0x2
 2676 0089 E601     		.2byte	0x1e6
 2677 008b 48000000 		.4byte	0x48
 2678 008f 02       		.uleb128 0x2
 2679 0090 04       		.byte	0x4
 2680 0091 04       		.byte	0x4
 2681 0092 4D050000 		.4byte	.LASF12
 2682 0096 02       		.uleb128 0x2
 2683 0097 08       		.byte	0x8
 2684 0098 04       		.byte	0x4
 2685 0099 4B020000 		.4byte	.LASF13
 2686 009d 02       		.uleb128 0x2
 2687 009e 01       		.byte	0x1
 2688 009f 08       		.byte	0x8
 2689 00a0 38060000 		.4byte	.LASF14
 2690 00a4 04       		.uleb128 0x4
 2691 00a5 B4050000 		.4byte	.LASF15
 2692 00a9 02       		.byte	0x2
 2693 00aa 8E02     		.2byte	0x28e
 2694 00ac B0000000 		.4byte	0xb0
 2695 00b0 05       		.uleb128 0x5
 2696 00b1 6B000000 		.4byte	0x6b
 2697 00b5 04       		.uleb128 0x4
 2698 00b6 68040000 		.4byte	.LASF16
 2699 00ba 02       		.byte	0x2
 2700 00bb 9002     		.2byte	0x290
 2701 00bd C1000000 		.4byte	0xc1
 2702 00c1 05       		.uleb128 0x5
 2703 00c2 83000000 		.4byte	0x83
 2704 00c6 04       		.uleb128 0x4
 2705 00c7 3D060000 		.4byte	.LASF17
 2706 00cb 02       		.byte	0x2
 2707 00cc A002     		.2byte	0x2a0
 2708 00ce D2000000 		.4byte	0xd2
 2709 00d2 06       		.uleb128 0x6
 2710 00d3 04       		.byte	0x4
 2711 00d4 D8000000 		.4byte	0xd8
 2712 00d8 07       		.uleb128 0x7
 2713 00d9 02       		.uleb128 0x2
 2714 00da 08       		.byte	0x8
 2715 00db 04       		.byte	0x4
 2716 00dc E1040000 		.4byte	.LASF18
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 109


 2717 00e0 02       		.uleb128 0x2
 2718 00e1 04       		.byte	0x4
 2719 00e2 07       		.byte	0x7
 2720 00e3 91040000 		.4byte	.LASF19
 2721 00e7 08       		.uleb128 0x8
 2722 00e8 78050000 		.4byte	.LASF20
 2723 00ec 03       		.byte	0x3
 2724 00ed F5       		.byte	0xf5
 2725 00ee D2000000 		.4byte	0xd2
 2726 00f2 09       		.uleb128 0x9
 2727 00f3 55070000 		.4byte	.LASF33
 2728 00f7 01       		.byte	0x1
 2729 00f8 62       		.byte	0x62
 2730 00f9 00000000 		.4byte	.LFB1
 2731 00fd 14000000 		.4byte	.LFE1-.LFB1
 2732 0101 01       		.uleb128 0x1
 2733 0102 9C       		.byte	0x9c
 2734 0103 0A       		.uleb128 0xa
 2735 0104 4E040000 		.4byte	.LASF22
 2736 0108 01       		.byte	0x1
 2737 0109 1301     		.2byte	0x113
 2738 010b 00000000 		.4byte	.LFB4
 2739 010f 54000000 		.4byte	.LFE4-.LFB4
 2740 0113 01       		.uleb128 0x1
 2741 0114 9C       		.byte	0x9c
 2742 0115 38010000 		.4byte	0x138
 2743 0119 0B       		.uleb128 0xb
 2744 011a 6900     		.ascii	"i\000"
 2745 011c 01       		.byte	0x1
 2746 011d 1601     		.2byte	0x116
 2747 011f 83000000 		.4byte	0x83
 2748 0123 00000000 		.4byte	.LLST0
 2749 0127 0C       		.uleb128 0xc
 2750 0128 B6010000 		.4byte	.LASF21
 2751 012c 01       		.byte	0x1
 2752 012d 1901     		.2byte	0x119
 2753 012f 83000000 		.4byte	0x83
 2754 0133 37000000 		.4byte	.LLST1
 2755 0137 00       		.byte	0
 2756 0138 0D       		.uleb128 0xd
 2757 0139 57030000 		.4byte	.LASF23
 2758 013d 01       		.byte	0x1
 2759 013e 82       		.byte	0x82
 2760 013f 00000000 		.4byte	.LFB2
 2761 0143 18000000 		.4byte	.LFE2-.LFB2
 2762 0147 01       		.uleb128 0x1
 2763 0148 9C       		.byte	0x9c
 2764 0149 57010000 		.4byte	0x157
 2765 014d 0E       		.uleb128 0xe
 2766 014e 06000000 		.4byte	.LVL8
 2767 0152 03010000 		.4byte	0x103
 2768 0156 00       		.byte	0
 2769 0157 0F       		.uleb128 0xf
 2770 0158 F1010000 		.4byte	.LASF35
 2771 015c 01       		.byte	0x1
 2772 015d 4B01     		.2byte	0x14b
 2773 015f 83000000 		.4byte	0x83
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 110


 2774 0163 00000000 		.4byte	.LFB5
 2775 0167 14000000 		.4byte	.LFE5-.LFB5
 2776 016b 01       		.uleb128 0x1
 2777 016c 9C       		.byte	0x9c
 2778 016d 0A       		.uleb128 0xa
 2779 016e 1F000000 		.4byte	.LASF24
 2780 0172 01       		.byte	0x1
 2781 0173 1B02     		.2byte	0x21b
 2782 0175 00000000 		.4byte	.LFB6
 2783 0179 20000000 		.4byte	.LFE6-.LFB6
 2784 017d 01       		.uleb128 0x1
 2785 017e 9C       		.byte	0x9c
 2786 017f C6010000 		.4byte	0x1c6
 2787 0183 10       		.uleb128 0x10
 2788 0184 1D060000 		.4byte	.LASF28
 2789 0188 01       		.byte	0x1
 2790 0189 1B02     		.2byte	0x21b
 2791 018b 83000000 		.4byte	0x83
 2792 018f 7E000000 		.4byte	.LLST2
 2793 0193 0C       		.uleb128 0xc
 2794 0194 C7010000 		.4byte	.LASF25
 2795 0198 01       		.byte	0x1
 2796 0199 1D02     		.2byte	0x21d
 2797 019b 6B000000 		.4byte	0x6b
 2798 019f AA000000 		.4byte	.LLST3
 2799 01a3 0C       		.uleb128 0xc
 2800 01a4 AA070000 		.4byte	.LASF26
 2801 01a8 01       		.byte	0x1
 2802 01a9 1E02     		.2byte	0x21e
 2803 01ab 83000000 		.4byte	0x83
 2804 01af BD000000 		.4byte	.LLST4
 2805 01b3 0E       		.uleb128 0xe
 2806 01b4 08000000 		.4byte	.LVL10
 2807 01b8 070D0000 		.4byte	0xd07
 2808 01bc 0E       		.uleb128 0xe
 2809 01bd 1A000000 		.4byte	.LVL14
 2810 01c1 120D0000 		.4byte	0xd12
 2811 01c5 00       		.byte	0
 2812 01c6 0A       		.uleb128 0xa
 2813 01c7 4B000000 		.4byte	.LASF27
 2814 01cb 01       		.byte	0x1
 2815 01cc 6302     		.2byte	0x263
 2816 01ce 00000000 		.4byte	.LFB7
 2817 01d2 38000000 		.4byte	.LFE7-.LFB7
 2818 01d6 01       		.uleb128 0x1
 2819 01d7 9C       		.byte	0x9c
 2820 01d8 EB010000 		.4byte	0x1eb
 2821 01dc 11       		.uleb128 0x11
 2822 01dd 44020000 		.4byte	.LASF29
 2823 01e1 01       		.byte	0x1
 2824 01e2 6302     		.2byte	0x263
 2825 01e4 83000000 		.4byte	0x83
 2826 01e8 01       		.uleb128 0x1
 2827 01e9 50       		.byte	0x50
 2828 01ea 00       		.byte	0
 2829 01eb 12       		.uleb128 0x12
 2830 01ec 7B020000 		.4byte	.LASF38
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 111


 2831 01f0 01       		.byte	0x1
 2832 01f1 8802     		.2byte	0x288
 2833 01f3 83000000 		.4byte	0x83
 2834 01f7 00000000 		.4byte	.LFB8
 2835 01fb 1C000000 		.4byte	.LFE8-.LFB8
 2836 01ff 01       		.uleb128 0x1
 2837 0200 9C       		.byte	0x9c
 2838 0201 38020000 		.4byte	0x238
 2839 0205 0C       		.uleb128 0xc
 2840 0206 C7010000 		.4byte	.LASF25
 2841 020a 01       		.byte	0x1
 2842 020b 8A02     		.2byte	0x28a
 2843 020d 6B000000 		.4byte	0x6b
 2844 0211 DB000000 		.4byte	.LLST5
 2845 0215 0C       		.uleb128 0xc
 2846 0216 F5040000 		.4byte	.LASF30
 2847 021a 01       		.byte	0x1
 2848 021b 8B02     		.2byte	0x28b
 2849 021d 83000000 		.4byte	0x83
 2850 0221 EE000000 		.4byte	.LLST6
 2851 0225 0E       		.uleb128 0xe
 2852 0226 06000000 		.4byte	.LVL17
 2853 022a 070D0000 		.4byte	0xd07
 2854 022e 0E       		.uleb128 0xe
 2855 022f 12000000 		.4byte	.LVL19
 2856 0233 120D0000 		.4byte	0xd12
 2857 0237 00       		.byte	0
 2858 0238 0A       		.uleb128 0xa
 2859 0239 5A060000 		.4byte	.LASF31
 2860 023d 01       		.byte	0x1
 2861 023e C502     		.2byte	0x2c5
 2862 0240 00000000 		.4byte	.LFB9
 2863 0244 30000000 		.4byte	.LFE9-.LFB9
 2864 0248 01       		.uleb128 0x1
 2865 0249 9C       		.byte	0x9c
 2866 024a 81020000 		.4byte	0x281
 2867 024e 10       		.uleb128 0x10
 2868 024f 4D070000 		.4byte	.LASF32
 2869 0253 01       		.byte	0x1
 2870 0254 C502     		.2byte	0x2c5
 2871 0256 83000000 		.4byte	0x83
 2872 025a 0C010000 		.4byte	.LLST7
 2873 025e 0C       		.uleb128 0xc
 2874 025f C7010000 		.4byte	.LASF25
 2875 0263 01       		.byte	0x1
 2876 0264 C702     		.2byte	0x2c7
 2877 0266 6B000000 		.4byte	0x6b
 2878 026a 38010000 		.4byte	.LLST8
 2879 026e 0E       		.uleb128 0xe
 2880 026f 08000000 		.4byte	.LVL22
 2881 0273 070D0000 		.4byte	0xd07
 2882 0277 0E       		.uleb128 0xe
 2883 0278 24000000 		.4byte	.LVL24
 2884 027c 120D0000 		.4byte	0xd12
 2885 0280 00       		.byte	0
 2886 0281 13       		.uleb128 0x13
 2887 0282 E8060000 		.4byte	.LASF34
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 112


 2888 0286 01       		.byte	0x1
 2889 0287 F808     		.2byte	0x8f8
 2890 0289 00000000 		.4byte	.LFB12
 2891 028d 20000000 		.4byte	.LFE12-.LFB12
 2892 0291 01       		.uleb128 0x1
 2893 0292 9C       		.byte	0x9c
 2894 0293 0F       		.uleb128 0xf
 2895 0294 3C030000 		.4byte	.LASF36
 2896 0298 01       		.byte	0x1
 2897 0299 0A09     		.2byte	0x90a
 2898 029b 83000000 		.4byte	0x83
 2899 029f 00000000 		.4byte	.LFB13
 2900 02a3 10000000 		.4byte	.LFE13-.LFB13
 2901 02a7 01       		.uleb128 0x1
 2902 02a8 9C       		.byte	0x9c
 2903 02a9 13       		.uleb128 0x13
 2904 02aa 58020000 		.4byte	.LASF37
 2905 02ae 01       		.byte	0x1
 2906 02af 1A09     		.2byte	0x91a
 2907 02b1 00000000 		.4byte	.LFB14
 2908 02b5 0C000000 		.4byte	.LFE14-.LFB14
 2909 02b9 01       		.uleb128 0x1
 2910 02ba 9C       		.byte	0x9c
 2911 02bb 12       		.uleb128 0x12
 2912 02bc A3030000 		.4byte	.LASF39
 2913 02c0 01       		.byte	0x1
 2914 02c1 3409     		.2byte	0x934
 2915 02c3 83000000 		.4byte	0x83
 2916 02c7 00000000 		.4byte	.LFB15
 2917 02cb 14000000 		.4byte	.LFE15-.LFB15
 2918 02cf 01       		.uleb128 0x1
 2919 02d0 9C       		.byte	0x9c
 2920 02d1 F4020000 		.4byte	0x2f4
 2921 02d5 10       		.uleb128 0x10
 2922 02d6 31060000 		.4byte	.LASF40
 2923 02da 01       		.byte	0x1
 2924 02db 3409     		.2byte	0x934
 2925 02dd 83000000 		.4byte	0x83
 2926 02e1 4B010000 		.4byte	.LLST9
 2927 02e5 14       		.uleb128 0x14
 2928 02e6 7D040000 		.4byte	.LASF41
 2929 02ea 01       		.byte	0x1
 2930 02eb 3609     		.2byte	0x936
 2931 02ed 83000000 		.4byte	0x83
 2932 02f1 01       		.uleb128 0x1
 2933 02f2 50       		.byte	0x50
 2934 02f3 00       		.byte	0
 2935 02f4 12       		.uleb128 0x12
 2936 02f5 67000000 		.4byte	.LASF42
 2937 02f9 01       		.byte	0x1
 2938 02fa 4B09     		.2byte	0x94b
 2939 02fc 83000000 		.4byte	0x83
 2940 0300 00000000 		.4byte	.LFB16
 2941 0304 10000000 		.4byte	.LFE16-.LFB16
 2942 0308 01       		.uleb128 0x1
 2943 0309 9C       		.byte	0x9c
 2944 030a 1D030000 		.4byte	0x31d
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 113


 2945 030e 14       		.uleb128 0x14
 2946 030f 16000000 		.4byte	.LASF43
 2947 0313 01       		.byte	0x1
 2948 0314 4D09     		.2byte	0x94d
 2949 0316 83000000 		.4byte	0x83
 2950 031a 01       		.uleb128 0x1
 2951 031b 50       		.byte	0x50
 2952 031c 00       		.byte	0
 2953 031d 0A       		.uleb128 0xa
 2954 031e 48010000 		.4byte	.LASF44
 2955 0322 01       		.byte	0x1
 2956 0323 6209     		.2byte	0x962
 2957 0325 00000000 		.4byte	.LFB17
 2958 0329 0C000000 		.4byte	.LFE17-.LFB17
 2959 032d 01       		.uleb128 0x1
 2960 032e 9C       		.byte	0x9c
 2961 032f 42030000 		.4byte	0x342
 2962 0333 11       		.uleb128 0x11
 2963 0334 76020000 		.4byte	.LASF45
 2964 0338 01       		.byte	0x1
 2965 0339 6209     		.2byte	0x962
 2966 033b 83000000 		.4byte	0x83
 2967 033f 01       		.uleb128 0x1
 2968 0340 50       		.byte	0x50
 2969 0341 00       		.byte	0
 2970 0342 0A       		.uleb128 0xa
 2971 0343 FF050000 		.4byte	.LASF46
 2972 0347 01       		.byte	0x1
 2973 0348 190A     		.2byte	0xa19
 2974 034a 00000000 		.4byte	.LFB24
 2975 034e 14000000 		.4byte	.LFE24-.LFB24
 2976 0352 01       		.uleb128 0x1
 2977 0353 9C       		.byte	0x9c
 2978 0354 69030000 		.4byte	0x369
 2979 0358 10       		.uleb128 0x10
 2980 0359 F8030000 		.4byte	.LASF47
 2981 035d 01       		.byte	0x1
 2982 035e 190A     		.2byte	0xa19
 2983 0360 6B000000 		.4byte	0x6b
 2984 0364 69010000 		.4byte	.LLST10
 2985 0368 00       		.byte	0
 2986 0369 12       		.uleb128 0x12
 2987 036a 8E010000 		.4byte	.LASF48
 2988 036e 01       		.byte	0x1
 2989 036f 2B0A     		.2byte	0xa2b
 2990 0371 6B000000 		.4byte	0x6b
 2991 0375 00000000 		.4byte	.LFB25
 2992 0379 18000000 		.4byte	.LFE25-.LFB25
 2993 037d 01       		.uleb128 0x1
 2994 037e 9C       		.byte	0x9c
 2995 037f 94030000 		.4byte	0x394
 2996 0383 10       		.uleb128 0x10
 2997 0384 F8030000 		.4byte	.LASF47
 2998 0388 01       		.byte	0x1
 2999 0389 2B0A     		.2byte	0xa2b
 3000 038b 6B000000 		.4byte	0x6b
 3001 038f 8A010000 		.4byte	.LLST11
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 114


 3002 0393 00       		.byte	0
 3003 0394 0A       		.uleb128 0xa
 3004 0395 18020000 		.4byte	.LASF49
 3005 0399 01       		.byte	0x1
 3006 039a 3B0A     		.2byte	0xa3b
 3007 039c 00000000 		.4byte	.LFB26
 3008 03a0 14000000 		.4byte	.LFE26-.LFB26
 3009 03a4 01       		.uleb128 0x1
 3010 03a5 9C       		.byte	0x9c
 3011 03a6 BB030000 		.4byte	0x3bb
 3012 03aa 10       		.uleb128 0x10
 3013 03ab F8030000 		.4byte	.LASF47
 3014 03af 01       		.byte	0x1
 3015 03b0 3B0A     		.2byte	0xa3b
 3016 03b2 6B000000 		.4byte	0x6b
 3017 03b6 AB010000 		.4byte	.LLST12
 3018 03ba 00       		.byte	0
 3019 03bb 0A       		.uleb128 0xa
 3020 03bc 7E030000 		.4byte	.LASF50
 3021 03c0 01       		.byte	0x1
 3022 03c1 490A     		.2byte	0xa49
 3023 03c3 00000000 		.4byte	.LFB27
 3024 03c7 14000000 		.4byte	.LFE27-.LFB27
 3025 03cb 01       		.uleb128 0x1
 3026 03cc 9C       		.byte	0x9c
 3027 03cd E2030000 		.4byte	0x3e2
 3028 03d1 10       		.uleb128 0x10
 3029 03d2 F8030000 		.4byte	.LASF47
 3030 03d6 01       		.byte	0x1
 3031 03d7 490A     		.2byte	0xa49
 3032 03d9 6B000000 		.4byte	0x6b
 3033 03dd CC010000 		.4byte	.LLST13
 3034 03e1 00       		.byte	0
 3035 03e2 0A       		.uleb128 0xa
 3036 03e3 CF040000 		.4byte	.LASF51
 3037 03e7 01       		.byte	0x1
 3038 03e8 580A     		.2byte	0xa58
 3039 03ea 00000000 		.4byte	.LFB28
 3040 03ee 14000000 		.4byte	.LFE28-.LFB28
 3041 03f2 01       		.uleb128 0x1
 3042 03f3 9C       		.byte	0x9c
 3043 03f4 09040000 		.4byte	0x409
 3044 03f8 10       		.uleb128 0x10
 3045 03f9 F8030000 		.4byte	.LASF47
 3046 03fd 01       		.byte	0x1
 3047 03fe 580A     		.2byte	0xa58
 3048 0400 6B000000 		.4byte	0x6b
 3049 0404 ED010000 		.4byte	.LLST14
 3050 0408 00       		.byte	0
 3051 0409 0A       		.uleb128 0xa
 3052 040a C3050000 		.4byte	.LASF52
 3053 040e 01       		.byte	0x1
 3054 040f 670A     		.2byte	0xa67
 3055 0411 00000000 		.4byte	.LFB29
 3056 0415 04000000 		.4byte	.LFE29-.LFB29
 3057 0419 01       		.uleb128 0x1
 3058 041a 9C       		.byte	0x9c
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 115


 3059 041b 2E040000 		.4byte	0x42e
 3060 041f 11       		.uleb128 0x11
 3061 0420 31060000 		.4byte	.LASF40
 3062 0424 01       		.byte	0x1
 3063 0425 670A     		.2byte	0xa67
 3064 0427 6B000000 		.4byte	0x6b
 3065 042b 01       		.uleb128 0x1
 3066 042c 50       		.byte	0x50
 3067 042d 00       		.byte	0
 3068 042e 12       		.uleb128 0x12
 3069 042f 3C040000 		.4byte	.LASF53
 3070 0433 01       		.byte	0x1
 3071 0434 7B09     		.2byte	0x97b
 3072 0436 C6000000 		.4byte	0xc6
 3073 043a 00000000 		.4byte	.LFB18
 3074 043e 20000000 		.4byte	.LFE18-.LFB18
 3075 0442 01       		.uleb128 0x1
 3076 0443 9C       		.byte	0x9c
 3077 0444 96040000 		.4byte	0x496
 3078 0448 10       		.uleb128 0x10
 3079 0449 F8030000 		.4byte	.LASF47
 3080 044d 01       		.byte	0x1
 3081 044e 7B09     		.2byte	0x97b
 3082 0450 6B000000 		.4byte	0x6b
 3083 0454 0E020000 		.4byte	.LLST15
 3084 0458 10       		.uleb128 0x10
 3085 0459 ED040000 		.4byte	.LASF54
 3086 045d 01       		.byte	0x1
 3087 045e 7B09     		.2byte	0x97b
 3088 0460 C6000000 		.4byte	0xc6
 3089 0464 2F020000 		.4byte	.LLST16
 3090 0468 14       		.uleb128 0x14
 3091 0469 F8060000 		.4byte	.LASF55
 3092 046d 01       		.byte	0x1
 3093 046e 7D09     		.2byte	0x97d
 3094 0470 C6000000 		.4byte	0xc6
 3095 0474 01       		.uleb128 0x1
 3096 0475 50       		.byte	0x50
 3097 0476 15       		.uleb128 0x15
 3098 0477 00000000 		.4byte	.LASF56
 3099 047b 01       		.byte	0x1
 3100 047c 7E09     		.2byte	0x97e
 3101 047e 96040000 		.4byte	0x496
 3102 0482 00000020 		.4byte	0x20000000
 3103 0486 16       		.uleb128 0x16
 3104 0487 10000000 		.4byte	.LVL45
 3105 048b 09040000 		.4byte	0x409
 3106 048f 17       		.uleb128 0x17
 3107 0490 01       		.uleb128 0x1
 3108 0491 50       		.byte	0x50
 3109 0492 01       		.uleb128 0x1
 3110 0493 30       		.byte	0x30
 3111 0494 00       		.byte	0
 3112 0495 00       		.byte	0
 3113 0496 06       		.uleb128 0x6
 3114 0497 04       		.byte	0x4
 3115 0498 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 116


 3116 049c 12       		.uleb128 0x12
 3117 049d 0B060000 		.4byte	.LASF57
 3118 04a1 01       		.byte	0x1
 3119 04a2 9D09     		.2byte	0x99d
 3120 04a4 C6000000 		.4byte	0xc6
 3121 04a8 00000000 		.4byte	.LFB19
 3122 04ac 1C000000 		.4byte	.LFE19-.LFB19
 3123 04b0 01       		.uleb128 0x1
 3124 04b1 9C       		.byte	0x9c
 3125 04b2 E6040000 		.4byte	0x4e6
 3126 04b6 10       		.uleb128 0x10
 3127 04b7 F8030000 		.4byte	.LASF47
 3128 04bb 01       		.byte	0x1
 3129 04bc 9D09     		.2byte	0x99d
 3130 04be 6B000000 		.4byte	0x6b
 3131 04c2 5B020000 		.4byte	.LLST17
 3132 04c6 15       		.uleb128 0x15
 3133 04c7 00000000 		.4byte	.LASF56
 3134 04cb 01       		.byte	0x1
 3135 04cc 9F09     		.2byte	0x99f
 3136 04ce 96040000 		.4byte	0x496
 3137 04d2 00000020 		.4byte	0x20000000
 3138 04d6 16       		.uleb128 0x16
 3139 04d7 0E000000 		.4byte	.LVL51
 3140 04db 09040000 		.4byte	0x409
 3141 04df 17       		.uleb128 0x17
 3142 04e0 01       		.uleb128 0x1
 3143 04e1 50       		.byte	0x50
 3144 04e2 01       		.uleb128 0x1
 3145 04e3 30       		.byte	0x30
 3146 04e4 00       		.byte	0
 3147 04e5 00       		.byte	0
 3148 04e6 12       		.uleb128 0x12
 3149 04e7 E9030000 		.4byte	.LASF58
 3150 04eb 01       		.byte	0x1
 3151 04ec B309     		.2byte	0x9b3
 3152 04ee C6000000 		.4byte	0xc6
 3153 04f2 00000000 		.4byte	.LFB20
 3154 04f6 22000000 		.4byte	.LFE20-.LFB20
 3155 04fa 01       		.uleb128 0x1
 3156 04fb 9C       		.byte	0x9c
 3157 04fc 4E050000 		.4byte	0x54e
 3158 0500 10       		.uleb128 0x10
 3159 0501 F8030000 		.4byte	.LASF47
 3160 0505 01       		.byte	0x1
 3161 0506 B309     		.2byte	0x9b3
 3162 0508 6B000000 		.4byte	0x6b
 3163 050c 7C020000 		.4byte	.LLST18
 3164 0510 10       		.uleb128 0x10
 3165 0511 ED040000 		.4byte	.LASF54
 3166 0515 01       		.byte	0x1
 3167 0516 B309     		.2byte	0x9b3
 3168 0518 C6000000 		.4byte	0xc6
 3169 051c 9D020000 		.4byte	.LLST19
 3170 0520 14       		.uleb128 0x14
 3171 0521 F8060000 		.4byte	.LASF55
 3172 0525 01       		.byte	0x1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 117


 3173 0526 B509     		.2byte	0x9b5
 3174 0528 C6000000 		.4byte	0xc6
 3175 052c 01       		.uleb128 0x1
 3176 052d 50       		.byte	0x50
 3177 052e 15       		.uleb128 0x15
 3178 052f 00000000 		.4byte	.LASF56
 3179 0533 01       		.byte	0x1
 3180 0534 B609     		.2byte	0x9b6
 3181 0536 96040000 		.4byte	0x496
 3182 053a 00000020 		.4byte	0x20000000
 3183 053e 16       		.uleb128 0x16
 3184 053f 10000000 		.4byte	.LVL55
 3185 0543 09040000 		.4byte	0x409
 3186 0547 17       		.uleb128 0x17
 3187 0548 01       		.uleb128 0x1
 3188 0549 50       		.byte	0x50
 3189 054a 01       		.uleb128 0x1
 3190 054b 30       		.byte	0x30
 3191 054c 00       		.byte	0
 3192 054d 00       		.byte	0
 3193 054e 12       		.uleb128 0x12
 3194 054f 8A050000 		.4byte	.LASF59
 3195 0553 01       		.byte	0x1
 3196 0554 CF09     		.2byte	0x9cf
 3197 0556 C6000000 		.4byte	0xc6
 3198 055a 00000000 		.4byte	.LFB21
 3199 055e 1E000000 		.4byte	.LFE21-.LFB21
 3200 0562 01       		.uleb128 0x1
 3201 0563 9C       		.byte	0x9c
 3202 0564 98050000 		.4byte	0x598
 3203 0568 10       		.uleb128 0x10
 3204 0569 F8030000 		.4byte	.LASF47
 3205 056d 01       		.byte	0x1
 3206 056e CF09     		.2byte	0x9cf
 3207 0570 6B000000 		.4byte	0x6b
 3208 0574 C9020000 		.4byte	.LLST20
 3209 0578 15       		.uleb128 0x15
 3210 0579 00000000 		.4byte	.LASF56
 3211 057d 01       		.byte	0x1
 3212 057e D109     		.2byte	0x9d1
 3213 0580 96040000 		.4byte	0x496
 3214 0584 00000020 		.4byte	0x20000000
 3215 0588 16       		.uleb128 0x16
 3216 0589 0E000000 		.4byte	.LVL61
 3217 058d 09040000 		.4byte	0x409
 3218 0591 17       		.uleb128 0x17
 3219 0592 01       		.uleb128 0x1
 3220 0593 50       		.byte	0x50
 3221 0594 01       		.uleb128 0x1
 3222 0595 30       		.byte	0x30
 3223 0596 00       		.byte	0
 3224 0597 00       		.byte	0
 3225 0598 0A       		.uleb128 0xa
 3226 0599 3C050000 		.4byte	.LASF60
 3227 059d 01       		.byte	0x1
 3228 059e E209     		.2byte	0x9e2
 3229 05a0 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 118


 3230 05a4 4C000000 		.4byte	.LFE22-.LFB22
 3231 05a8 01       		.uleb128 0x1
 3232 05a9 9C       		.byte	0x9c
 3233 05aa 37060000 		.4byte	0x637
 3234 05ae 10       		.uleb128 0x10
 3235 05af F8030000 		.4byte	.LASF47
 3236 05b3 01       		.byte	0x1
 3237 05b4 E209     		.2byte	0x9e2
 3238 05b6 6B000000 		.4byte	0x6b
 3239 05ba EA020000 		.4byte	.LLST21
 3240 05be 10       		.uleb128 0x10
 3241 05bf FF030000 		.4byte	.LASF61
 3242 05c3 01       		.byte	0x1
 3243 05c4 E209     		.2byte	0x9e2
 3244 05c6 6B000000 		.4byte	0x6b
 3245 05ca 0B030000 		.4byte	.LLST22
 3246 05ce 0C       		.uleb128 0xc
 3247 05cf C7010000 		.4byte	.LASF25
 3248 05d3 01       		.byte	0x1
 3249 05d4 E409     		.2byte	0x9e4
 3250 05d6 6B000000 		.4byte	0x6b
 3251 05da 2C030000 		.4byte	.LLST23
 3252 05de 0C       		.uleb128 0xc
 3253 05df 52020000 		.4byte	.LASF62
 3254 05e3 01       		.byte	0x1
 3255 05e4 E509     		.2byte	0x9e5
 3256 05e6 83000000 		.4byte	0x83
 3257 05ea 3F030000 		.4byte	.LLST24
 3258 05ee 0C       		.uleb128 0xc
 3259 05ef D8020000 		.4byte	.LASF63
 3260 05f3 01       		.byte	0x1
 3261 05f4 E609     		.2byte	0x9e6
 3262 05f6 83000000 		.4byte	0x83
 3263 05fa 52030000 		.4byte	.LLST25
 3264 05fe 18       		.uleb128 0x18
 3265 05ff 10000000 		.4byte	.LVL64
 3266 0603 09040000 		.4byte	0x409
 3267 0607 11060000 		.4byte	0x611
 3268 060b 17       		.uleb128 0x17
 3269 060c 01       		.uleb128 0x1
 3270 060d 50       		.byte	0x50
 3271 060e 01       		.uleb128 0x1
 3272 060f 30       		.byte	0x30
 3273 0610 00       		.byte	0
 3274 0611 18       		.uleb128 0x18
 3275 0612 1A000000 		.4byte	.LVL65
 3276 0616 09040000 		.4byte	0x409
 3277 061a 24060000 		.4byte	0x624
 3278 061e 17       		.uleb128 0x17
 3279 061f 01       		.uleb128 0x1
 3280 0620 50       		.byte	0x50
 3281 0621 01       		.uleb128 0x1
 3282 0622 30       		.byte	0x30
 3283 0623 00       		.byte	0
 3284 0624 0E       		.uleb128 0xe
 3285 0625 26000000 		.4byte	.LVL67
 3286 0629 070D0000 		.4byte	0xd07
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 119


 3287 062d 0E       		.uleb128 0xe
 3288 062e 46000000 		.4byte	.LVL73
 3289 0632 120D0000 		.4byte	0xd12
 3290 0636 00       		.byte	0
 3291 0637 12       		.uleb128 0x12
 3292 0638 AC020000 		.4byte	.LASF64
 3293 063c 01       		.byte	0x1
 3294 063d 040A     		.2byte	0xa04
 3295 063f 6B000000 		.4byte	0x6b
 3296 0643 00000000 		.4byte	.LFB23
 3297 0647 2C000000 		.4byte	.LFE23-.LFB23
 3298 064b 01       		.uleb128 0x1
 3299 064c 9C       		.byte	0x9c
 3300 064d 81060000 		.4byte	0x681
 3301 0651 10       		.uleb128 0x10
 3302 0652 F8030000 		.4byte	.LASF47
 3303 0656 01       		.byte	0x1
 3304 0657 040A     		.2byte	0xa04
 3305 0659 6B000000 		.4byte	0x6b
 3306 065d 86030000 		.4byte	.LLST26
 3307 0661 0C       		.uleb128 0xc
 3308 0662 FF030000 		.4byte	.LASF61
 3309 0666 01       		.byte	0x1
 3310 0667 060A     		.2byte	0xa06
 3311 0669 6B000000 		.4byte	0x6b
 3312 066d A7030000 		.4byte	.LLST27
 3313 0671 16       		.uleb128 0x16
 3314 0672 0E000000 		.4byte	.LVL77
 3315 0676 09040000 		.4byte	0x409
 3316 067a 17       		.uleb128 0x17
 3317 067b 01       		.uleb128 0x1
 3318 067c 50       		.byte	0x50
 3319 067d 01       		.uleb128 0x1
 3320 067e 30       		.byte	0x30
 3321 067f 00       		.byte	0
 3322 0680 00       		.byte	0
 3323 0681 13       		.uleb128 0x13
 3324 0682 65010000 		.4byte	.LASF65
 3325 0686 01       		.byte	0x1
 3326 0687 7F0A     		.2byte	0xa7f
 3327 0689 00000000 		.4byte	.LFB30
 3328 068d 18000000 		.4byte	.LFE30-.LFB30
 3329 0691 01       		.uleb128 0x1
 3330 0692 9C       		.byte	0x9c
 3331 0693 0A       		.uleb128 0xa
 3332 0694 AE060000 		.4byte	.LASF66
 3333 0698 01       		.byte	0x1
 3334 0699 930A     		.2byte	0xa93
 3335 069b 00000000 		.4byte	.LFB31
 3336 069f 30000000 		.4byte	.LFE31-.LFB31
 3337 06a3 01       		.uleb128 0x1
 3338 06a4 9C       		.byte	0x9c
 3339 06a5 CC060000 		.4byte	0x6cc
 3340 06a9 10       		.uleb128 0x10
 3341 06aa 99050000 		.4byte	.LASF67
 3342 06ae 01       		.byte	0x1
 3343 06af 930A     		.2byte	0xa93
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 120


 3344 06b1 83000000 		.4byte	0x83
 3345 06b5 BA030000 		.4byte	.LLST28
 3346 06b9 0E       		.uleb128 0xe
 3347 06ba 0E000000 		.4byte	.LVL82
 3348 06be 1D0D0000 		.4byte	0xd1d
 3349 06c2 0E       		.uleb128 0xe
 3350 06c3 26000000 		.4byte	.LVL84
 3351 06c7 1D0D0000 		.4byte	0xd1d
 3352 06cb 00       		.byte	0
 3353 06cc 0D       		.uleb128 0xd
 3354 06cd 93020000 		.4byte	.LASF68
 3355 06d1 01       		.byte	0x1
 3356 06d2 A6       		.byte	0xa6
 3357 06d3 00000000 		.4byte	.LFB3
 3358 06d7 F4000000 		.4byte	.LFE3-.LFB3
 3359 06db 01       		.uleb128 0x1
 3360 06dc 9C       		.byte	0x9c
 3361 06dd 95070000 		.4byte	0x795
 3362 06e1 19       		.uleb128 0x19
 3363 06e2 6900     		.ascii	"i\000"
 3364 06e4 01       		.byte	0x1
 3365 06e5 A9       		.byte	0xa9
 3366 06e6 83000000 		.4byte	0x83
 3367 06ea D8030000 		.4byte	.LLST29
 3368 06ee 1A       		.uleb128 0x1a
 3369 06ef B6010000 		.4byte	.LASF21
 3370 06f3 01       		.byte	0x1
 3371 06f4 AC       		.byte	0xac
 3372 06f5 83000000 		.4byte	0x83
 3373 06f9 0F040000 		.4byte	.LLST30
 3374 06fd 1A       		.uleb128 0x1a
 3375 06fe C7010000 		.4byte	.LASF25
 3376 0702 01       		.byte	0x1
 3377 0703 AD       		.byte	0xad
 3378 0704 6B000000 		.4byte	0x6b
 3379 0708 45040000 		.4byte	.LLST31
 3380 070c 1A       		.uleb128 0x1a
 3381 070d CA030000 		.4byte	.LASF69
 3382 0711 01       		.byte	0x1
 3383 0712 AE       		.byte	0xae
 3384 0713 83000000 		.4byte	0x83
 3385 0717 58040000 		.4byte	.LLST32
 3386 071b 1A       		.uleb128 0x1a
 3387 071c D6010000 		.4byte	.LASF70
 3388 0720 01       		.byte	0x1
 3389 0721 AF       		.byte	0xaf
 3390 0722 83000000 		.4byte	0x83
 3391 0726 8D040000 		.4byte	.LLST33
 3392 072a 1B       		.uleb128 0x1b
 3393 072b A2060000 		.4byte	.LASF71
 3394 072f 01       		.byte	0x1
 3395 0730 B0       		.byte	0xb0
 3396 0731 C1000000 		.4byte	0xc1
 3397 0735 02       		.uleb128 0x2
 3398 0736 91       		.byte	0x91
 3399 0737 6C       		.sleb128 -20
 3400 0738 0E       		.uleb128 0xe
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 121


 3401 0739 08000000 		.4byte	.LVL87
 3402 073d 280D0000 		.4byte	0xd28
 3403 0741 0E       		.uleb128 0xe
 3404 0742 10000000 		.4byte	.LVL88
 3405 0746 070D0000 		.4byte	0xd07
 3406 074a 18       		.uleb128 0x18
 3407 074b 82000000 		.4byte	.LVL101
 3408 074f 330D0000 		.4byte	0xd33
 3409 0753 5E070000 		.4byte	0x75e
 3410 0757 17       		.uleb128 0x17
 3411 0758 01       		.uleb128 0x1
 3412 0759 50       		.byte	0x50
 3413 075a 02       		.uleb128 0x2
 3414 075b 08       		.byte	0x8
 3415 075c 30       		.byte	0x30
 3416 075d 00       		.byte	0
 3417 075e 18       		.uleb128 0x18
 3418 075f 9E000000 		.4byte	.LVL104
 3419 0763 93060000 		.4byte	0x693
 3420 0767 71070000 		.4byte	0x771
 3421 076b 17       		.uleb128 0x17
 3422 076c 01       		.uleb128 0x1
 3423 076d 50       		.byte	0x50
 3424 076e 01       		.uleb128 0x1
 3425 076f 31       		.byte	0x31
 3426 0770 00       		.byte	0
 3427 0771 18       		.uleb128 0x18
 3428 0772 B2000000 		.4byte	.LVL107
 3429 0776 93060000 		.4byte	0x693
 3430 077a 84070000 		.4byte	0x784
 3431 077e 17       		.uleb128 0x17
 3432 077f 01       		.uleb128 0x1
 3433 0780 50       		.byte	0x50
 3434 0781 01       		.uleb128 0x1
 3435 0782 31       		.byte	0x31
 3436 0783 00       		.byte	0
 3437 0784 16       		.uleb128 0x16
 3438 0785 C8000000 		.4byte	.LVL109
 3439 0789 120D0000 		.4byte	0xd12
 3440 078d 17       		.uleb128 0x17
 3441 078e 01       		.uleb128 0x1
 3442 078f 50       		.byte	0x50
 3443 0790 02       		.uleb128 0x2
 3444 0791 75       		.byte	0x75
 3445 0792 00       		.sleb128 0
 3446 0793 00       		.byte	0
 3447 0794 00       		.byte	0
 3448 0795 0A       		.uleb128 0xa
 3449 0796 08040000 		.4byte	.LASF72
 3450 079a 01       		.byte	0x1
 3451 079b FF02     		.2byte	0x2ff
 3452 079d 00000000 		.4byte	.LFB10
 3453 07a1 80000000 		.4byte	.LFE10-.LFB10
 3454 07a5 01       		.uleb128 0x1
 3455 07a6 9C       		.byte	0x9c
 3456 07a7 2E080000 		.4byte	0x82e
 3457 07ab 10       		.uleb128 0x10
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 122


 3458 07ac B6010000 		.4byte	.LASF21
 3459 07b0 01       		.byte	0x1
 3460 07b1 FF02     		.2byte	0x2ff
 3461 07b3 83000000 		.4byte	0x83
 3462 07b7 AC040000 		.4byte	.LLST34
 3463 07bb 14       		.uleb128 0x14
 3464 07bc 3D010000 		.4byte	.LASF73
 3465 07c0 01       		.byte	0x1
 3466 07c1 0203     		.2byte	0x302
 3467 07c3 3E080000 		.4byte	0x83e
 3468 07c7 02       		.uleb128 0x2
 3469 07c8 91       		.byte	0x91
 3470 07c9 68       		.sleb128 -24
 3471 07ca 14       		.uleb128 0x14
 3472 07cb 25020000 		.4byte	.LASF74
 3473 07cf 01       		.byte	0x1
 3474 07d0 0303     		.2byte	0x303
 3475 07d2 53080000 		.4byte	0x853
 3476 07d6 02       		.uleb128 0x2
 3477 07d7 91       		.byte	0x91
 3478 07d8 58       		.sleb128 -40
 3479 07d9 0C       		.uleb128 0xc
 3480 07da 07020000 		.4byte	.LASF75
 3481 07de 01       		.byte	0x1
 3482 07df 0C03     		.2byte	0x30c
 3483 07e1 83000000 		.4byte	0x83
 3484 07e5 E5040000 		.4byte	.LLST35
 3485 07e9 0C       		.uleb128 0xc
 3486 07ea C7010000 		.4byte	.LASF25
 3487 07ee 01       		.byte	0x1
 3488 07ef 1303     		.2byte	0x313
 3489 07f1 6B000000 		.4byte	0x6b
 3490 07f5 1C050000 		.4byte	.LLST36
 3491 07f9 0E       		.uleb128 0xe
 3492 07fa 0A000000 		.4byte	.LVL112
 3493 07fe 070D0000 		.4byte	0xd07
 3494 0802 0E       		.uleb128 0xe
 3495 0803 10000000 		.4byte	.LVL114
 3496 0807 57010000 		.4byte	0x157
 3497 080b 0E       		.uleb128 0xe
 3498 080c 18000000 		.4byte	.LVL116
 3499 0810 03010000 		.4byte	0x103
 3500 0814 0E       		.uleb128 0xe
 3501 0815 56000000 		.4byte	.LVL120
 3502 0819 CC060000 		.4byte	0x6cc
 3503 081d 16       		.uleb128 0x16
 3504 081e 5C000000 		.4byte	.LVL121
 3505 0822 120D0000 		.4byte	0xd12
 3506 0826 17       		.uleb128 0x17
 3507 0827 01       		.uleb128 0x1
 3508 0828 50       		.byte	0x50
 3509 0829 02       		.uleb128 0x2
 3510 082a 75       		.byte	0x75
 3511 082b 00       		.sleb128 0
 3512 082c 00       		.byte	0
 3513 082d 00       		.byte	0
 3514 082e 1C       		.uleb128 0x1c
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 123


 3515 082f C1000000 		.4byte	0xc1
 3516 0833 3E080000 		.4byte	0x83e
 3517 0837 1D       		.uleb128 0x1d
 3518 0838 E0000000 		.4byte	0xe0
 3519 083c 01       		.byte	0x1
 3520 083d 00       		.byte	0
 3521 083e 05       		.uleb128 0x5
 3522 083f 2E080000 		.4byte	0x82e
 3523 0843 1C       		.uleb128 0x1c
 3524 0844 C1000000 		.4byte	0xc1
 3525 0848 53080000 		.4byte	0x853
 3526 084c 1D       		.uleb128 0x1d
 3527 084d E0000000 		.4byte	0xe0
 3528 0851 03       		.byte	0x3
 3529 0852 00       		.byte	0
 3530 0853 05       		.uleb128 0x5
 3531 0854 43080000 		.4byte	0x843
 3532 0858 0A       		.uleb128 0xa
 3533 0859 27060000 		.4byte	.LASF76
 3534 085d 01       		.byte	0x1
 3535 085e AA0A     		.2byte	0xaaa
 3536 0860 00000000 		.4byte	.LFB32
 3537 0864 14000000 		.4byte	.LFE32-.LFB32
 3538 0868 01       		.uleb128 0x1
 3539 0869 9C       		.byte	0x9c
 3540 086a 88080000 		.4byte	0x888
 3541 086e 10       		.uleb128 0x10
 3542 086f 9D070000 		.4byte	.LASF77
 3543 0873 01       		.byte	0x1
 3544 0874 AA0A     		.2byte	0xaaa
 3545 0876 77000000 		.4byte	0x77
 3546 087a 2F050000 		.4byte	.LLST37
 3547 087e 0E       		.uleb128 0xe
 3548 087f 0C000000 		.4byte	.LVL126
 3549 0883 1D0D0000 		.4byte	0xd1d
 3550 0887 00       		.byte	0
 3551 0888 0A       		.uleb128 0xa
 3552 0889 69050000 		.4byte	.LASF78
 3553 088d 01       		.byte	0x1
 3554 088e DA08     		.2byte	0x8da
 3555 0890 00000000 		.4byte	.LFB11
 3556 0894 44000000 		.4byte	.LFE11-.LFB11
 3557 0898 01       		.uleb128 0x1
 3558 0899 9C       		.byte	0x9c
 3559 089a CD080000 		.4byte	0x8cd
 3560 089e 10       		.uleb128 0x10
 3561 089f B9050000 		.4byte	.LASF79
 3562 08a3 01       		.byte	0x1
 3563 08a4 DA08     		.2byte	0x8da
 3564 08a6 83000000 		.4byte	0x83
 3565 08aa 50050000 		.4byte	.LLST38
 3566 08ae 18       		.uleb128 0x18
 3567 08af 2E000000 		.4byte	.LVL130
 3568 08b3 58080000 		.4byte	0x858
 3569 08b7 C3080000 		.4byte	0x8c3
 3570 08bb 17       		.uleb128 0x17
 3571 08bc 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 124


 3572 08bd 50       		.byte	0x50
 3573 08be 03       		.uleb128 0x3
 3574 08bf 0A       		.byte	0xa
 3575 08c0 E803     		.2byte	0x3e8
 3576 08c2 00       		.byte	0
 3577 08c3 0E       		.uleb128 0xe
 3578 08c4 32000000 		.4byte	.LVL131
 3579 08c8 A9020000 		.4byte	0x2a9
 3580 08cc 00       		.byte	0
 3581 08cd 1E       		.uleb128 0x1e
 3582 08ce BB010000 		.4byte	.LASF80
 3583 08d2 01       		.byte	0x1
 3584 08d3 B80A     		.2byte	0xab8
 3585 08d5 00000000 		.4byte	.LFB33
 3586 08d9 4C000000 		.4byte	.LFE33-.LFB33
 3587 08dd 01       		.uleb128 0x1
 3588 08de 9C       		.byte	0x9c
 3589 08df F4080000 		.4byte	0x8f4
 3590 08e3 10       		.uleb128 0x10
 3591 08e4 B6010000 		.4byte	.LASF21
 3592 08e8 01       		.byte	0x1
 3593 08e9 B80A     		.2byte	0xab8
 3594 08eb 83000000 		.4byte	0x83
 3595 08ef 7C050000 		.4byte	.LLST39
 3596 08f3 00       		.byte	0
 3597 08f4 13       		.uleb128 0x13
 3598 08f5 3F070000 		.4byte	.LASF81
 3599 08f9 01       		.byte	0x1
 3600 08fa 240B     		.2byte	0xb24
 3601 08fc 00000000 		.4byte	.LFB37
 3602 0900 10000000 		.4byte	.LFE37-.LFB37
 3603 0904 01       		.uleb128 0x1
 3604 0905 9C       		.byte	0x9c
 3605 0906 13       		.uleb128 0x13
 3606 0907 75010000 		.4byte	.LASF82
 3607 090b 01       		.byte	0x1
 3608 090c 340B     		.2byte	0xb34
 3609 090e 00000000 		.4byte	.LFB38
 3610 0912 10000000 		.4byte	.LFE38-.LFB38
 3611 0916 01       		.uleb128 0x1
 3612 0917 9C       		.byte	0x9c
 3613 0918 0A       		.uleb128 0xa
 3614 0919 4A060000 		.4byte	.LASF83
 3615 091d 01       		.byte	0x1
 3616 091e 130B     		.2byte	0xb13
 3617 0920 00000000 		.4byte	.LFB36
 3618 0924 18000000 		.4byte	.LFE36-.LFB36
 3619 0928 01       		.uleb128 0x1
 3620 0929 9C       		.byte	0x9c
 3621 092a 38090000 		.4byte	0x938
 3622 092e 0E       		.uleb128 0xe
 3623 092f 06000000 		.4byte	.LVL136
 3624 0933 06090000 		.4byte	0x906
 3625 0937 00       		.byte	0
 3626 0938 13       		.uleb128 0x13
 3627 0939 CE060000 		.4byte	.LASF84
 3628 093d 01       		.byte	0x1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 125


 3629 093e 440B     		.2byte	0xb44
 3630 0940 00000000 		.4byte	.LFB39
 3631 0944 10000000 		.4byte	.LFE39-.LFB39
 3632 0948 01       		.uleb128 0x1
 3633 0949 9C       		.byte	0x9c
 3634 094a 0A       		.uleb128 0xa
 3635 094b B1070000 		.4byte	.LASF85
 3636 094f 01       		.byte	0x1
 3637 0950 550B     		.2byte	0xb55
 3638 0952 00000000 		.4byte	.LFB40
 3639 0956 10000000 		.4byte	.LFE40-.LFB40
 3640 095a 01       		.uleb128 0x1
 3641 095b 9C       		.byte	0x9c
 3642 095c 71090000 		.4byte	0x971
 3643 0960 10       		.uleb128 0x10
 3644 0961 D8020000 		.4byte	.LASF63
 3645 0965 01       		.byte	0x1
 3646 0966 550B     		.2byte	0xb55
 3647 0968 83000000 		.4byte	0x83
 3648 096c 9D050000 		.4byte	.LLST40
 3649 0970 00       		.byte	0
 3650 0971 0F       		.uleb128 0xf
 3651 0972 DE010000 		.4byte	.LASF86
 3652 0976 01       		.byte	0x1
 3653 0977 650B     		.2byte	0xb65
 3654 0979 83000000 		.4byte	0x83
 3655 097d 00000000 		.4byte	.LFB41
 3656 0981 10000000 		.4byte	.LFE41-.LFB41
 3657 0985 01       		.uleb128 0x1
 3658 0986 9C       		.byte	0x9c
 3659 0987 0F       		.uleb128 0xf
 3660 0988 1C050000 		.4byte	.LASF87
 3661 098c 01       		.byte	0x1
 3662 098d 750B     		.2byte	0xb75
 3663 098f 83000000 		.4byte	0x83
 3664 0993 00000000 		.4byte	.LFB42
 3665 0997 10000000 		.4byte	.LFE42-.LFB42
 3666 099b 01       		.uleb128 0x1
 3667 099c 9C       		.byte	0x9c
 3668 099d 0A       		.uleb128 0xa
 3669 099e D1030000 		.4byte	.LASF88
 3670 09a2 01       		.byte	0x1
 3671 09a3 950B     		.2byte	0xb95
 3672 09a5 00000000 		.4byte	.LFB43
 3673 09a9 20000000 		.4byte	.LFE43-.LFB43
 3674 09ad 01       		.uleb128 0x1
 3675 09ae 9C       		.byte	0x9c
 3676 09af C2090000 		.4byte	0x9c2
 3677 09b3 11       		.uleb128 0x11
 3678 09b4 DE020000 		.4byte	.LASF89
 3679 09b8 01       		.byte	0x1
 3680 09b9 950B     		.2byte	0xb95
 3681 09bb 83000000 		.4byte	0x83
 3682 09bf 01       		.uleb128 0x1
 3683 09c0 50       		.byte	0x50
 3684 09c1 00       		.byte	0
 3685 09c2 0F       		.uleb128 0xf
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 126


 3686 09c3 B6060000 		.4byte	.LASF90
 3687 09c7 01       		.byte	0x1
 3688 09c8 AE0B     		.2byte	0xbae
 3689 09ca 83000000 		.4byte	0x83
 3690 09ce 00000000 		.4byte	.LFB44
 3691 09d2 10000000 		.4byte	.LFE44-.LFB44
 3692 09d6 01       		.uleb128 0x1
 3693 09d7 9C       		.byte	0x9c
 3694 09d8 0F       		.uleb128 0xf
 3695 09d9 F8020000 		.4byte	.LASF91
 3696 09dd 01       		.byte	0x1
 3697 09de C50B     		.2byte	0xbc5
 3698 09e0 83000000 		.4byte	0x83
 3699 09e4 00000000 		.4byte	.LFB45
 3700 09e8 10000000 		.4byte	.LFE45-.LFB45
 3701 09ec 01       		.uleb128 0x1
 3702 09ed 9C       		.byte	0x9c
 3703 09ee 1F       		.uleb128 0x1f
 3704 09ef C4070000 		.4byte	.LASF123
 3705 09f3 01       		.byte	0x1
 3706 09f4 1A0C     		.2byte	0xc1a
 3707 09f6 00000000 		.4byte	.LFB49
 3708 09fa 28000000 		.4byte	.LFE49-.LFB49
 3709 09fe 01       		.uleb128 0x1
 3710 09ff 9C       		.byte	0x9c
 3711 0a00 1C0A0000 		.4byte	0xa1c
 3712 0a04 0B       		.uleb128 0xb
 3713 0a05 6900     		.ascii	"i\000"
 3714 0a07 01       		.byte	0x1
 3715 0a08 1C0C     		.2byte	0xc1c
 3716 0a0a 83000000 		.4byte	0x83
 3717 0a0e BE050000 		.4byte	.LLST41
 3718 0a12 0E       		.uleb128 0xe
 3719 0a13 06000000 		.4byte	.LVL140
 3720 0a17 D8090000 		.4byte	0x9d8
 3721 0a1b 00       		.byte	0
 3722 0a1c 13       		.uleb128 0x13
 3723 0a1d 1B030000 		.4byte	.LASF92
 3724 0a21 01       		.byte	0x1
 3725 0a22 D20B     		.2byte	0xbd2
 3726 0a24 00000000 		.4byte	.LFB46
 3727 0a28 0C000000 		.4byte	.LFE46-.LFB46
 3728 0a2c 01       		.uleb128 0x1
 3729 0a2d 9C       		.byte	0x9c
 3730 0a2e 1E       		.uleb128 0x1e
 3731 0a2f CA020000 		.4byte	.LASF93
 3732 0a33 01       		.byte	0x1
 3733 0a34 F50A     		.2byte	0xaf5
 3734 0a36 00000000 		.4byte	.LFB35
 3735 0a3a 44000000 		.4byte	.LFE35-.LFB35
 3736 0a3e 01       		.uleb128 0x1
 3737 0a3f 9C       		.byte	0x9c
 3738 0a40 940A0000 		.4byte	0xa94
 3739 0a44 0B       		.uleb128 0xb
 3740 0a45 6900     		.ascii	"i\000"
 3741 0a47 01       		.byte	0x1
 3742 0a48 F70A     		.2byte	0xaf7
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 127


 3743 0a4a 83000000 		.4byte	0x83
 3744 0a4e DC050000 		.4byte	.LLST42
 3745 0a52 18       		.uleb128 0x18
 3746 0a53 1C000000 		.4byte	.LVL150
 3747 0a57 2E040000 		.4byte	0x42e
 3748 0a5b 6E0A0000 		.4byte	0xa6e
 3749 0a5f 17       		.uleb128 0x17
 3750 0a60 01       		.uleb128 0x1
 3751 0a61 50       		.byte	0x50
 3752 0a62 01       		.uleb128 0x1
 3753 0a63 3F       		.byte	0x3f
 3754 0a64 17       		.uleb128 0x17
 3755 0a65 01       		.uleb128 0x1
 3756 0a66 51       		.byte	0x51
 3757 0a67 05       		.uleb128 0x5
 3758 0a68 03       		.byte	0x3
 3759 0a69 00000000 		.4byte	CySysTickServiceCallbacks
 3760 0a6d 00       		.byte	0
 3761 0a6e 18       		.uleb128 0x18
 3762 0a6f 22000000 		.4byte	.LVL151
 3763 0a73 9D090000 		.4byte	0x99d
 3764 0a77 810A0000 		.4byte	0xa81
 3765 0a7b 17       		.uleb128 0x17
 3766 0a7c 01       		.uleb128 0x1
 3767 0a7d 50       		.byte	0x50
 3768 0a7e 01       		.uleb128 0x1
 3769 0a7f 31       		.byte	0x31
 3770 0a80 00       		.byte	0
 3771 0a81 0E       		.uleb128 0xe
 3772 0a82 32000000 		.4byte	.LVL153
 3773 0a86 4A090000 		.4byte	0x94a
 3774 0a8a 0E       		.uleb128 0xe
 3775 0a8b 36000000 		.4byte	.LVL154
 3776 0a8f 1C0A0000 		.4byte	0xa1c
 3777 0a93 00       		.byte	0
 3778 0a94 0A       		.uleb128 0xa
 3779 0a95 6E040000 		.4byte	.LASF94
 3780 0a99 01       		.byte	0x1
 3781 0a9a D80A     		.2byte	0xad8
 3782 0a9c 00000000 		.4byte	.LFB34
 3783 0aa0 20000000 		.4byte	.LFE34-.LFB34
 3784 0aa4 01       		.uleb128 0x1
 3785 0aa5 9C       		.byte	0x9c
 3786 0aa6 BD0A0000 		.4byte	0xabd
 3787 0aaa 0E       		.uleb128 0xe
 3788 0aab 0E000000 		.4byte	.LVL155
 3789 0aaf 2E0A0000 		.4byte	0xa2e
 3790 0ab3 0E       		.uleb128 0xe
 3791 0ab4 18000000 		.4byte	.LVL156
 3792 0ab8 18090000 		.4byte	0x918
 3793 0abc 00       		.byte	0
 3794 0abd 12       		.uleb128 0x12
 3795 0abe 71060000 		.4byte	.LASF95
 3796 0ac2 01       		.byte	0x1
 3797 0ac3 F50B     		.2byte	0xbf5
 3798 0ac5 E7000000 		.4byte	0xe7
 3799 0ac9 00000000 		.4byte	.LFB47
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 128


 3800 0acd 10000000 		.4byte	.LFE47-.LFB47
 3801 0ad1 01       		.uleb128 0x1
 3802 0ad2 9C       		.byte	0x9c
 3803 0ad3 040B0000 		.4byte	0xb04
 3804 0ad7 10       		.uleb128 0x10
 3805 0ad8 F8030000 		.4byte	.LASF47
 3806 0adc 01       		.byte	0x1
 3807 0add F50B     		.2byte	0xbf5
 3808 0adf 83000000 		.4byte	0x83
 3809 0ae3 FB050000 		.4byte	.LLST43
 3810 0ae7 11       		.uleb128 0x11
 3811 0ae8 02050000 		.4byte	.LASF96
 3812 0aec 01       		.byte	0x1
 3813 0aed F50B     		.2byte	0xbf5
 3814 0aef E7000000 		.4byte	0xe7
 3815 0af3 01       		.uleb128 0x1
 3816 0af4 51       		.byte	0x51
 3817 0af5 14       		.uleb128 0x14
 3818 0af6 60000000 		.4byte	.LASF97
 3819 0afa 01       		.byte	0x1
 3820 0afb F70B     		.2byte	0xbf7
 3821 0afd E7000000 		.4byte	0xe7
 3822 0b01 01       		.uleb128 0x1
 3823 0b02 50       		.byte	0x50
 3824 0b03 00       		.byte	0
 3825 0b04 12       		.uleb128 0x12
 3826 0b05 8E030000 		.4byte	.LASF98
 3827 0b09 01       		.byte	0x1
 3828 0b0a 0D0C     		.2byte	0xc0d
 3829 0b0c E7000000 		.4byte	0xe7
 3830 0b10 00000000 		.4byte	.LFB48
 3831 0b14 0C000000 		.4byte	.LFE48-.LFB48
 3832 0b18 01       		.uleb128 0x1
 3833 0b19 9C       		.byte	0x9c
 3834 0b1a 2F0B0000 		.4byte	0xb2f
 3835 0b1e 10       		.uleb128 0x10
 3836 0b1f F8030000 		.4byte	.LASF47
 3837 0b23 01       		.byte	0x1
 3838 0b24 0D0C     		.2byte	0xc0d
 3839 0b26 83000000 		.4byte	0x83
 3840 0b2a 1C060000 		.4byte	.LLST44
 3841 0b2e 00       		.byte	0
 3842 0b2f 0A       		.uleb128 0xa
 3843 0b30 EA020000 		.4byte	.LASF99
 3844 0b34 01       		.byte	0x1
 3845 0b35 3A0C     		.2byte	0xc3a
 3846 0b37 00000000 		.4byte	.LFB50
 3847 0b3b 70000000 		.4byte	.LFE50-.LFB50
 3848 0b3f 01       		.uleb128 0x1
 3849 0b40 9C       		.byte	0x9c
 3850 0b41 540B0000 		.4byte	0xb54
 3851 0b45 11       		.uleb128 0x11
 3852 0b46 99060000 		.4byte	.LASF100
 3853 0b4a 01       		.byte	0x1
 3854 0b4b 3A0C     		.2byte	0xc3a
 3855 0b4d 540B0000 		.4byte	0xb54
 3856 0b51 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 129


 3857 0b52 50       		.byte	0x50
 3858 0b53 00       		.byte	0
 3859 0b54 06       		.uleb128 0x6
 3860 0b55 04       		.byte	0x4
 3861 0b56 83000000 		.4byte	0x83
 3862 0b5a 0A       		.uleb128 0xa
 3863 0b5b CA050000 		.4byte	.LASF101
 3864 0b5f 01       		.byte	0x1
 3865 0b60 670C     		.2byte	0xc67
 3866 0b62 00000000 		.4byte	.LFB51
 3867 0b66 20000000 		.4byte	.LFE51-.LFB51
 3868 0b6a 01       		.uleb128 0x1
 3869 0b6b 9C       		.byte	0x9c
 3870 0b6c 910B0000 		.4byte	0xb91
 3871 0b70 10       		.uleb128 0x10
 3872 0b71 8A040000 		.4byte	.LASF102
 3873 0b75 01       		.byte	0x1
 3874 0b76 670C     		.2byte	0xc67
 3875 0b78 83000000 		.4byte	0x83
 3876 0b7c 3D060000 		.4byte	.LLST45
 3877 0b80 0C       		.uleb128 0xc
 3878 0b81 CA030000 		.4byte	.LASF69
 3879 0b85 01       		.byte	0x1
 3880 0b86 690C     		.2byte	0xc69
 3881 0b88 83000000 		.4byte	0x83
 3882 0b8c 5E060000 		.4byte	.LLST46
 3883 0b90 00       		.byte	0
 3884 0b91 0A       		.uleb128 0xa
 3885 0b92 1D040000 		.4byte	.LASF103
 3886 0b96 01       		.byte	0x1
 3887 0b97 830C     		.2byte	0xc83
 3888 0b99 00000000 		.4byte	.LFB52
 3889 0b9d 20000000 		.4byte	.LFE52-.LFB52
 3890 0ba1 01       		.uleb128 0x1
 3891 0ba2 9C       		.byte	0x9c
 3892 0ba3 C80B0000 		.4byte	0xbc8
 3893 0ba7 10       		.uleb128 0x10
 3894 0ba8 8A040000 		.4byte	.LASF102
 3895 0bac 01       		.byte	0x1
 3896 0bad 830C     		.2byte	0xc83
 3897 0baf 83000000 		.4byte	0x83
 3898 0bb3 7C060000 		.4byte	.LLST47
 3899 0bb7 0C       		.uleb128 0xc
 3900 0bb8 CA030000 		.4byte	.LASF69
 3901 0bbc 01       		.byte	0x1
 3902 0bbd 850C     		.2byte	0xc85
 3903 0bbf 83000000 		.4byte	0x83
 3904 0bc3 9D060000 		.4byte	.LLST48
 3905 0bc7 00       		.byte	0
 3906 0bc8 0A       		.uleb128 0xa
 3907 0bc9 21070000 		.4byte	.LASF104
 3908 0bcd 01       		.byte	0x1
 3909 0bce 9F0C     		.2byte	0xc9f
 3910 0bd0 00000000 		.4byte	.LFB53
 3911 0bd4 20000000 		.4byte	.LFE53-.LFB53
 3912 0bd8 01       		.uleb128 0x1
 3913 0bd9 9C       		.byte	0x9c
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 130


 3914 0bda FF0B0000 		.4byte	0xbff
 3915 0bde 10       		.uleb128 0x10
 3916 0bdf 8A040000 		.4byte	.LASF102
 3917 0be3 01       		.byte	0x1
 3918 0be4 9F0C     		.2byte	0xc9f
 3919 0be6 83000000 		.4byte	0x83
 3920 0bea BB060000 		.4byte	.LLST49
 3921 0bee 0C       		.uleb128 0xc
 3922 0bef CA030000 		.4byte	.LASF69
 3923 0bf3 01       		.byte	0x1
 3924 0bf4 A10C     		.2byte	0xca1
 3925 0bf6 83000000 		.4byte	0x83
 3926 0bfa DC060000 		.4byte	.LLST50
 3927 0bfe 00       		.byte	0
 3928 0bff 0A       		.uleb128 0xa
 3929 0c00 AB040000 		.4byte	.LASF105
 3930 0c04 01       		.byte	0x1
 3931 0c05 BD0C     		.2byte	0xcbd
 3932 0c07 00000000 		.4byte	.LFB54
 3933 0c0b 68000000 		.4byte	.LFE54-.LFB54
 3934 0c0f 01       		.uleb128 0x1
 3935 0c10 9C       		.byte	0x9c
 3936 0c11 550C0000 		.4byte	0xc55
 3937 0c15 10       		.uleb128 0x10
 3938 0c16 55010000 		.4byte	.LASF106
 3939 0c1a 01       		.byte	0x1
 3940 0c1b BD0C     		.2byte	0xcbd
 3941 0c1d 83000000 		.4byte	0x83
 3942 0c21 FA060000 		.4byte	.LLST51
 3943 0c25 10       		.uleb128 0x10
 3944 0c26 8A040000 		.4byte	.LASF102
 3945 0c2a 01       		.byte	0x1
 3946 0c2b BD0C     		.2byte	0xcbd
 3947 0c2d 83000000 		.4byte	0x83
 3948 0c31 66070000 		.4byte	.LLST52
 3949 0c35 0C       		.uleb128 0xc
 3950 0c36 CA030000 		.4byte	.LASF69
 3951 0c3a 01       		.byte	0x1
 3952 0c3b BF0C     		.2byte	0xcbf
 3953 0c3d 83000000 		.4byte	0x83
 3954 0c41 D2070000 		.4byte	.LLST53
 3955 0c45 16       		.uleb128 0x16
 3956 0c46 56000000 		.4byte	.LVL191
 3957 0c4a 09040000 		.4byte	0x409
 3958 0c4e 17       		.uleb128 0x17
 3959 0c4f 01       		.uleb128 0x1
 3960 0c50 50       		.byte	0x50
 3961 0c51 01       		.uleb128 0x1
 3962 0c52 30       		.byte	0x30
 3963 0c53 00       		.byte	0
 3964 0c54 00       		.byte	0
 3965 0c55 1C       		.uleb128 0x1c
 3966 0c56 E7000000 		.4byte	0xe7
 3967 0c5a 650C0000 		.4byte	0xc65
 3968 0c5e 1D       		.uleb128 0x1d
 3969 0c5f E0000000 		.4byte	0xe0
 3970 0c63 04       		.byte	0x4
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 131


 3971 0c64 00       		.byte	0
 3972 0c65 1B       		.uleb128 0x1b
 3973 0c66 86060000 		.4byte	.LASF107
 3974 0c6a 01       		.byte	0x1
 3975 0c6b 22       		.byte	0x22
 3976 0c6c 550C0000 		.4byte	0xc55
 3977 0c70 05       		.uleb128 0x5
 3978 0c71 03       		.byte	0x3
 3979 0c72 00000000 		.4byte	CySysTickCallbacks
 3980 0c76 20       		.uleb128 0x20
 3981 0c77 2E050000 		.4byte	.LASF108
 3982 0c7b 01       		.byte	0x1
 3983 0c7c 1B       		.byte	0x1b
 3984 0c7d 83000000 		.4byte	0x83
 3985 0c81 05       		.uleb128 0x5
 3986 0c82 03       		.byte	0x3
 3987 0c83 00000000 		.4byte	cydelayFreqHz
 3988 0c87 20       		.uleb128 0x20
 3989 0c88 35020000 		.4byte	.LASF109
 3990 0c8c 01       		.byte	0x1
 3991 0c8d 1C       		.byte	0x1c
 3992 0c8e 83000000 		.4byte	0x83
 3993 0c92 05       		.uleb128 0x5
 3994 0c93 03       		.byte	0x3
 3995 0c94 00000000 		.4byte	cydelayFreqKhz
 3996 0c98 20       		.uleb128 0x20
 3997 0c99 FF060000 		.4byte	.LASF110
 3998 0c9d 01       		.byte	0x1
 3999 0c9e 1D       		.byte	0x1d
 4000 0c9f 6B000000 		.4byte	0x6b
 4001 0ca3 05       		.uleb128 0x5
 4002 0ca4 03       		.byte	0x3
 4003 0ca5 00000000 		.4byte	cydelayFreqMhz
 4004 0ca9 20       		.uleb128 0x20
 4005 0caa BD020000 		.4byte	.LASF111
 4006 0cae 01       		.byte	0x1
 4007 0caf 1E       		.byte	0x1e
 4008 0cb0 83000000 		.4byte	0x83
 4009 0cb4 05       		.uleb128 0x5
 4010 0cb5 03       		.byte	0x3
 4011 0cb6 00000000 		.4byte	cydelay32kMs
 4012 0cba 20       		.uleb128 0x20
 4013 0cbb 9A040000 		.4byte	.LASF112
 4014 0cbf 01       		.byte	0x1
 4015 0cc0 36       		.byte	0x36
 4016 0cc1 83000000 		.4byte	0x83
 4017 0cc5 05       		.uleb128 0x5
 4018 0cc6 03       		.byte	0x3
 4019 0cc7 00000000 		.4byte	CySysTickInitVar
 4020 0ccb 1C       		.uleb128 0x1c
 4021 0ccc DB0C0000 		.4byte	0xcdb
 4022 0cd0 DB0C0000 		.4byte	0xcdb
 4023 0cd4 1D       		.uleb128 0x1d
 4024 0cd5 E0000000 		.4byte	0xe0
 4025 0cd9 2D       		.byte	0x2d
 4026 0cda 00       		.byte	0
 4027 0cdb 21       		.uleb128 0x21
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 132


 4028 0cdc 6B000000 		.4byte	0x6b
 4029 0ce0 20       		.uleb128 0x20
 4030 0ce1 0B050000 		.4byte	.LASF113
 4031 0ce5 01       		.byte	0x1
 4032 0ce6 3B       		.byte	0x3b
 4033 0ce7 F10C0000 		.4byte	0xcf1
 4034 0ceb 05       		.uleb128 0x5
 4035 0cec 03       		.byte	0x3
 4036 0ced 00000000 		.4byte	cyImoFreqMhz2Reg
 4037 0cf1 21       		.uleb128 0x21
 4038 0cf2 CB0C0000 		.4byte	0xccb
 4039 0cf6 20       		.uleb128 0x20
 4040 0cf7 38000000 		.4byte	.LASF114
 4041 0cfb 01       		.byte	0x1
 4042 0cfc 51       		.byte	0x51
 4043 0cfd 83000000 		.4byte	0x83
 4044 0d01 05       		.uleb128 0x5
 4045 0d02 03       		.byte	0x3
 4046 0d03 00000000 		.4byte	CySysClkPumpConfig
 4047 0d07 22       		.uleb128 0x22
 4048 0d08 67030000 		.4byte	.LASF115
 4049 0d0c 67030000 		.4byte	.LASF115
 4050 0d10 03       		.byte	0x3
 4051 0d11 E5       		.byte	0xe5
 4052 0d12 22       		.uleb128 0x22
 4053 0d13 53050000 		.4byte	.LASF116
 4054 0d17 53050000 		.4byte	.LASF116
 4055 0d1b 03       		.byte	0x3
 4056 0d1c E6       		.byte	0xe6
 4057 0d1d 22       		.uleb128 0x22
 4058 0d1e A6050000 		.4byte	.LASF117
 4059 0d22 A6050000 		.4byte	.LASF117
 4060 0d26 03       		.byte	0x3
 4061 0d27 DC       		.byte	0xdc
 4062 0d28 22       		.uleb128 0x22
 4063 0d29 0E070000 		.4byte	.LASF118
 4064 0d2d 0E070000 		.4byte	.LASF118
 4065 0d31 04       		.byte	0x4
 4066 0d32 54       		.byte	0x54
 4067 0d33 22       		.uleb128 0x22
 4068 0d34 66070000 		.4byte	.LASF119
 4069 0d38 66070000 		.4byte	.LASF119
 4070 0d3c 05       		.byte	0x5
 4071 0d3d 52       		.byte	0x52
 4072 0d3e 00       		.byte	0
 4073              		.section	.debug_abbrev,"",%progbits
 4074              	.Ldebug_abbrev0:
 4075 0000 01       		.uleb128 0x1
 4076 0001 11       		.uleb128 0x11
 4077 0002 01       		.byte	0x1
 4078 0003 25       		.uleb128 0x25
 4079 0004 0E       		.uleb128 0xe
 4080 0005 13       		.uleb128 0x13
 4081 0006 0B       		.uleb128 0xb
 4082 0007 03       		.uleb128 0x3
 4083 0008 0E       		.uleb128 0xe
 4084 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 133


 4085 000a 0E       		.uleb128 0xe
 4086 000b 55       		.uleb128 0x55
 4087 000c 17       		.uleb128 0x17
 4088 000d 11       		.uleb128 0x11
 4089 000e 01       		.uleb128 0x1
 4090 000f 10       		.uleb128 0x10
 4091 0010 17       		.uleb128 0x17
 4092 0011 00       		.byte	0
 4093 0012 00       		.byte	0
 4094 0013 02       		.uleb128 0x2
 4095 0014 24       		.uleb128 0x24
 4096 0015 00       		.byte	0
 4097 0016 0B       		.uleb128 0xb
 4098 0017 0B       		.uleb128 0xb
 4099 0018 3E       		.uleb128 0x3e
 4100 0019 0B       		.uleb128 0xb
 4101 001a 03       		.uleb128 0x3
 4102 001b 0E       		.uleb128 0xe
 4103 001c 00       		.byte	0
 4104 001d 00       		.byte	0
 4105 001e 03       		.uleb128 0x3
 4106 001f 24       		.uleb128 0x24
 4107 0020 00       		.byte	0
 4108 0021 0B       		.uleb128 0xb
 4109 0022 0B       		.uleb128 0xb
 4110 0023 3E       		.uleb128 0x3e
 4111 0024 0B       		.uleb128 0xb
 4112 0025 03       		.uleb128 0x3
 4113 0026 08       		.uleb128 0x8
 4114 0027 00       		.byte	0
 4115 0028 00       		.byte	0
 4116 0029 04       		.uleb128 0x4
 4117 002a 16       		.uleb128 0x16
 4118 002b 00       		.byte	0
 4119 002c 03       		.uleb128 0x3
 4120 002d 0E       		.uleb128 0xe
 4121 002e 3A       		.uleb128 0x3a
 4122 002f 0B       		.uleb128 0xb
 4123 0030 3B       		.uleb128 0x3b
 4124 0031 05       		.uleb128 0x5
 4125 0032 49       		.uleb128 0x49
 4126 0033 13       		.uleb128 0x13
 4127 0034 00       		.byte	0
 4128 0035 00       		.byte	0
 4129 0036 05       		.uleb128 0x5
 4130 0037 35       		.uleb128 0x35
 4131 0038 00       		.byte	0
 4132 0039 49       		.uleb128 0x49
 4133 003a 13       		.uleb128 0x13
 4134 003b 00       		.byte	0
 4135 003c 00       		.byte	0
 4136 003d 06       		.uleb128 0x6
 4137 003e 0F       		.uleb128 0xf
 4138 003f 00       		.byte	0
 4139 0040 0B       		.uleb128 0xb
 4140 0041 0B       		.uleb128 0xb
 4141 0042 49       		.uleb128 0x49
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 134


 4142 0043 13       		.uleb128 0x13
 4143 0044 00       		.byte	0
 4144 0045 00       		.byte	0
 4145 0046 07       		.uleb128 0x7
 4146 0047 15       		.uleb128 0x15
 4147 0048 00       		.byte	0
 4148 0049 27       		.uleb128 0x27
 4149 004a 19       		.uleb128 0x19
 4150 004b 00       		.byte	0
 4151 004c 00       		.byte	0
 4152 004d 08       		.uleb128 0x8
 4153 004e 16       		.uleb128 0x16
 4154 004f 00       		.byte	0
 4155 0050 03       		.uleb128 0x3
 4156 0051 0E       		.uleb128 0xe
 4157 0052 3A       		.uleb128 0x3a
 4158 0053 0B       		.uleb128 0xb
 4159 0054 3B       		.uleb128 0x3b
 4160 0055 0B       		.uleb128 0xb
 4161 0056 49       		.uleb128 0x49
 4162 0057 13       		.uleb128 0x13
 4163 0058 00       		.byte	0
 4164 0059 00       		.byte	0
 4165 005a 09       		.uleb128 0x9
 4166 005b 2E       		.uleb128 0x2e
 4167 005c 00       		.byte	0
 4168 005d 3F       		.uleb128 0x3f
 4169 005e 19       		.uleb128 0x19
 4170 005f 03       		.uleb128 0x3
 4171 0060 0E       		.uleb128 0xe
 4172 0061 3A       		.uleb128 0x3a
 4173 0062 0B       		.uleb128 0xb
 4174 0063 3B       		.uleb128 0x3b
 4175 0064 0B       		.uleb128 0xb
 4176 0065 27       		.uleb128 0x27
 4177 0066 19       		.uleb128 0x19
 4178 0067 11       		.uleb128 0x11
 4179 0068 01       		.uleb128 0x1
 4180 0069 12       		.uleb128 0x12
 4181 006a 06       		.uleb128 0x6
 4182 006b 40       		.uleb128 0x40
 4183 006c 18       		.uleb128 0x18
 4184 006d 9742     		.uleb128 0x2117
 4185 006f 19       		.uleb128 0x19
 4186 0070 00       		.byte	0
 4187 0071 00       		.byte	0
 4188 0072 0A       		.uleb128 0xa
 4189 0073 2E       		.uleb128 0x2e
 4190 0074 01       		.byte	0x1
 4191 0075 3F       		.uleb128 0x3f
 4192 0076 19       		.uleb128 0x19
 4193 0077 03       		.uleb128 0x3
 4194 0078 0E       		.uleb128 0xe
 4195 0079 3A       		.uleb128 0x3a
 4196 007a 0B       		.uleb128 0xb
 4197 007b 3B       		.uleb128 0x3b
 4198 007c 05       		.uleb128 0x5
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 135


 4199 007d 27       		.uleb128 0x27
 4200 007e 19       		.uleb128 0x19
 4201 007f 11       		.uleb128 0x11
 4202 0080 01       		.uleb128 0x1
 4203 0081 12       		.uleb128 0x12
 4204 0082 06       		.uleb128 0x6
 4205 0083 40       		.uleb128 0x40
 4206 0084 18       		.uleb128 0x18
 4207 0085 9742     		.uleb128 0x2117
 4208 0087 19       		.uleb128 0x19
 4209 0088 01       		.uleb128 0x1
 4210 0089 13       		.uleb128 0x13
 4211 008a 00       		.byte	0
 4212 008b 00       		.byte	0
 4213 008c 0B       		.uleb128 0xb
 4214 008d 34       		.uleb128 0x34
 4215 008e 00       		.byte	0
 4216 008f 03       		.uleb128 0x3
 4217 0090 08       		.uleb128 0x8
 4218 0091 3A       		.uleb128 0x3a
 4219 0092 0B       		.uleb128 0xb
 4220 0093 3B       		.uleb128 0x3b
 4221 0094 05       		.uleb128 0x5
 4222 0095 49       		.uleb128 0x49
 4223 0096 13       		.uleb128 0x13
 4224 0097 02       		.uleb128 0x2
 4225 0098 17       		.uleb128 0x17
 4226 0099 00       		.byte	0
 4227 009a 00       		.byte	0
 4228 009b 0C       		.uleb128 0xc
 4229 009c 34       		.uleb128 0x34
 4230 009d 00       		.byte	0
 4231 009e 03       		.uleb128 0x3
 4232 009f 0E       		.uleb128 0xe
 4233 00a0 3A       		.uleb128 0x3a
 4234 00a1 0B       		.uleb128 0xb
 4235 00a2 3B       		.uleb128 0x3b
 4236 00a3 05       		.uleb128 0x5
 4237 00a4 49       		.uleb128 0x49
 4238 00a5 13       		.uleb128 0x13
 4239 00a6 02       		.uleb128 0x2
 4240 00a7 17       		.uleb128 0x17
 4241 00a8 00       		.byte	0
 4242 00a9 00       		.byte	0
 4243 00aa 0D       		.uleb128 0xd
 4244 00ab 2E       		.uleb128 0x2e
 4245 00ac 01       		.byte	0x1
 4246 00ad 3F       		.uleb128 0x3f
 4247 00ae 19       		.uleb128 0x19
 4248 00af 03       		.uleb128 0x3
 4249 00b0 0E       		.uleb128 0xe
 4250 00b1 3A       		.uleb128 0x3a
 4251 00b2 0B       		.uleb128 0xb
 4252 00b3 3B       		.uleb128 0x3b
 4253 00b4 0B       		.uleb128 0xb
 4254 00b5 27       		.uleb128 0x27
 4255 00b6 19       		.uleb128 0x19
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 136


 4256 00b7 11       		.uleb128 0x11
 4257 00b8 01       		.uleb128 0x1
 4258 00b9 12       		.uleb128 0x12
 4259 00ba 06       		.uleb128 0x6
 4260 00bb 40       		.uleb128 0x40
 4261 00bc 18       		.uleb128 0x18
 4262 00bd 9742     		.uleb128 0x2117
 4263 00bf 19       		.uleb128 0x19
 4264 00c0 01       		.uleb128 0x1
 4265 00c1 13       		.uleb128 0x13
 4266 00c2 00       		.byte	0
 4267 00c3 00       		.byte	0
 4268 00c4 0E       		.uleb128 0xe
 4269 00c5 898201   		.uleb128 0x4109
 4270 00c8 00       		.byte	0
 4271 00c9 11       		.uleb128 0x11
 4272 00ca 01       		.uleb128 0x1
 4273 00cb 31       		.uleb128 0x31
 4274 00cc 13       		.uleb128 0x13
 4275 00cd 00       		.byte	0
 4276 00ce 00       		.byte	0
 4277 00cf 0F       		.uleb128 0xf
 4278 00d0 2E       		.uleb128 0x2e
 4279 00d1 00       		.byte	0
 4280 00d2 3F       		.uleb128 0x3f
 4281 00d3 19       		.uleb128 0x19
 4282 00d4 03       		.uleb128 0x3
 4283 00d5 0E       		.uleb128 0xe
 4284 00d6 3A       		.uleb128 0x3a
 4285 00d7 0B       		.uleb128 0xb
 4286 00d8 3B       		.uleb128 0x3b
 4287 00d9 05       		.uleb128 0x5
 4288 00da 27       		.uleb128 0x27
 4289 00db 19       		.uleb128 0x19
 4290 00dc 49       		.uleb128 0x49
 4291 00dd 13       		.uleb128 0x13
 4292 00de 11       		.uleb128 0x11
 4293 00df 01       		.uleb128 0x1
 4294 00e0 12       		.uleb128 0x12
 4295 00e1 06       		.uleb128 0x6
 4296 00e2 40       		.uleb128 0x40
 4297 00e3 18       		.uleb128 0x18
 4298 00e4 9742     		.uleb128 0x2117
 4299 00e6 19       		.uleb128 0x19
 4300 00e7 00       		.byte	0
 4301 00e8 00       		.byte	0
 4302 00e9 10       		.uleb128 0x10
 4303 00ea 05       		.uleb128 0x5
 4304 00eb 00       		.byte	0
 4305 00ec 03       		.uleb128 0x3
 4306 00ed 0E       		.uleb128 0xe
 4307 00ee 3A       		.uleb128 0x3a
 4308 00ef 0B       		.uleb128 0xb
 4309 00f0 3B       		.uleb128 0x3b
 4310 00f1 05       		.uleb128 0x5
 4311 00f2 49       		.uleb128 0x49
 4312 00f3 13       		.uleb128 0x13
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 137


 4313 00f4 02       		.uleb128 0x2
 4314 00f5 17       		.uleb128 0x17
 4315 00f6 00       		.byte	0
 4316 00f7 00       		.byte	0
 4317 00f8 11       		.uleb128 0x11
 4318 00f9 05       		.uleb128 0x5
 4319 00fa 00       		.byte	0
 4320 00fb 03       		.uleb128 0x3
 4321 00fc 0E       		.uleb128 0xe
 4322 00fd 3A       		.uleb128 0x3a
 4323 00fe 0B       		.uleb128 0xb
 4324 00ff 3B       		.uleb128 0x3b
 4325 0100 05       		.uleb128 0x5
 4326 0101 49       		.uleb128 0x49
 4327 0102 13       		.uleb128 0x13
 4328 0103 02       		.uleb128 0x2
 4329 0104 18       		.uleb128 0x18
 4330 0105 00       		.byte	0
 4331 0106 00       		.byte	0
 4332 0107 12       		.uleb128 0x12
 4333 0108 2E       		.uleb128 0x2e
 4334 0109 01       		.byte	0x1
 4335 010a 3F       		.uleb128 0x3f
 4336 010b 19       		.uleb128 0x19
 4337 010c 03       		.uleb128 0x3
 4338 010d 0E       		.uleb128 0xe
 4339 010e 3A       		.uleb128 0x3a
 4340 010f 0B       		.uleb128 0xb
 4341 0110 3B       		.uleb128 0x3b
 4342 0111 05       		.uleb128 0x5
 4343 0112 27       		.uleb128 0x27
 4344 0113 19       		.uleb128 0x19
 4345 0114 49       		.uleb128 0x49
 4346 0115 13       		.uleb128 0x13
 4347 0116 11       		.uleb128 0x11
 4348 0117 01       		.uleb128 0x1
 4349 0118 12       		.uleb128 0x12
 4350 0119 06       		.uleb128 0x6
 4351 011a 40       		.uleb128 0x40
 4352 011b 18       		.uleb128 0x18
 4353 011c 9742     		.uleb128 0x2117
 4354 011e 19       		.uleb128 0x19
 4355 011f 01       		.uleb128 0x1
 4356 0120 13       		.uleb128 0x13
 4357 0121 00       		.byte	0
 4358 0122 00       		.byte	0
 4359 0123 13       		.uleb128 0x13
 4360 0124 2E       		.uleb128 0x2e
 4361 0125 00       		.byte	0
 4362 0126 3F       		.uleb128 0x3f
 4363 0127 19       		.uleb128 0x19
 4364 0128 03       		.uleb128 0x3
 4365 0129 0E       		.uleb128 0xe
 4366 012a 3A       		.uleb128 0x3a
 4367 012b 0B       		.uleb128 0xb
 4368 012c 3B       		.uleb128 0x3b
 4369 012d 05       		.uleb128 0x5
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 138


 4370 012e 27       		.uleb128 0x27
 4371 012f 19       		.uleb128 0x19
 4372 0130 11       		.uleb128 0x11
 4373 0131 01       		.uleb128 0x1
 4374 0132 12       		.uleb128 0x12
 4375 0133 06       		.uleb128 0x6
 4376 0134 40       		.uleb128 0x40
 4377 0135 18       		.uleb128 0x18
 4378 0136 9742     		.uleb128 0x2117
 4379 0138 19       		.uleb128 0x19
 4380 0139 00       		.byte	0
 4381 013a 00       		.byte	0
 4382 013b 14       		.uleb128 0x14
 4383 013c 34       		.uleb128 0x34
 4384 013d 00       		.byte	0
 4385 013e 03       		.uleb128 0x3
 4386 013f 0E       		.uleb128 0xe
 4387 0140 3A       		.uleb128 0x3a
 4388 0141 0B       		.uleb128 0xb
 4389 0142 3B       		.uleb128 0x3b
 4390 0143 05       		.uleb128 0x5
 4391 0144 49       		.uleb128 0x49
 4392 0145 13       		.uleb128 0x13
 4393 0146 02       		.uleb128 0x2
 4394 0147 18       		.uleb128 0x18
 4395 0148 00       		.byte	0
 4396 0149 00       		.byte	0
 4397 014a 15       		.uleb128 0x15
 4398 014b 34       		.uleb128 0x34
 4399 014c 00       		.byte	0
 4400 014d 03       		.uleb128 0x3
 4401 014e 0E       		.uleb128 0xe
 4402 014f 3A       		.uleb128 0x3a
 4403 0150 0B       		.uleb128 0xb
 4404 0151 3B       		.uleb128 0x3b
 4405 0152 05       		.uleb128 0x5
 4406 0153 49       		.uleb128 0x49
 4407 0154 13       		.uleb128 0x13
 4408 0155 1C       		.uleb128 0x1c
 4409 0156 06       		.uleb128 0x6
 4410 0157 00       		.byte	0
 4411 0158 00       		.byte	0
 4412 0159 16       		.uleb128 0x16
 4413 015a 898201   		.uleb128 0x4109
 4414 015d 01       		.byte	0x1
 4415 015e 11       		.uleb128 0x11
 4416 015f 01       		.uleb128 0x1
 4417 0160 31       		.uleb128 0x31
 4418 0161 13       		.uleb128 0x13
 4419 0162 00       		.byte	0
 4420 0163 00       		.byte	0
 4421 0164 17       		.uleb128 0x17
 4422 0165 8A8201   		.uleb128 0x410a
 4423 0168 00       		.byte	0
 4424 0169 02       		.uleb128 0x2
 4425 016a 18       		.uleb128 0x18
 4426 016b 9142     		.uleb128 0x2111
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 139


 4427 016d 18       		.uleb128 0x18
 4428 016e 00       		.byte	0
 4429 016f 00       		.byte	0
 4430 0170 18       		.uleb128 0x18
 4431 0171 898201   		.uleb128 0x4109
 4432 0174 01       		.byte	0x1
 4433 0175 11       		.uleb128 0x11
 4434 0176 01       		.uleb128 0x1
 4435 0177 31       		.uleb128 0x31
 4436 0178 13       		.uleb128 0x13
 4437 0179 01       		.uleb128 0x1
 4438 017a 13       		.uleb128 0x13
 4439 017b 00       		.byte	0
 4440 017c 00       		.byte	0
 4441 017d 19       		.uleb128 0x19
 4442 017e 34       		.uleb128 0x34
 4443 017f 00       		.byte	0
 4444 0180 03       		.uleb128 0x3
 4445 0181 08       		.uleb128 0x8
 4446 0182 3A       		.uleb128 0x3a
 4447 0183 0B       		.uleb128 0xb
 4448 0184 3B       		.uleb128 0x3b
 4449 0185 0B       		.uleb128 0xb
 4450 0186 49       		.uleb128 0x49
 4451 0187 13       		.uleb128 0x13
 4452 0188 02       		.uleb128 0x2
 4453 0189 17       		.uleb128 0x17
 4454 018a 00       		.byte	0
 4455 018b 00       		.byte	0
 4456 018c 1A       		.uleb128 0x1a
 4457 018d 34       		.uleb128 0x34
 4458 018e 00       		.byte	0
 4459 018f 03       		.uleb128 0x3
 4460 0190 0E       		.uleb128 0xe
 4461 0191 3A       		.uleb128 0x3a
 4462 0192 0B       		.uleb128 0xb
 4463 0193 3B       		.uleb128 0x3b
 4464 0194 0B       		.uleb128 0xb
 4465 0195 49       		.uleb128 0x49
 4466 0196 13       		.uleb128 0x13
 4467 0197 02       		.uleb128 0x2
 4468 0198 17       		.uleb128 0x17
 4469 0199 00       		.byte	0
 4470 019a 00       		.byte	0
 4471 019b 1B       		.uleb128 0x1b
 4472 019c 34       		.uleb128 0x34
 4473 019d 00       		.byte	0
 4474 019e 03       		.uleb128 0x3
 4475 019f 0E       		.uleb128 0xe
 4476 01a0 3A       		.uleb128 0x3a
 4477 01a1 0B       		.uleb128 0xb
 4478 01a2 3B       		.uleb128 0x3b
 4479 01a3 0B       		.uleb128 0xb
 4480 01a4 49       		.uleb128 0x49
 4481 01a5 13       		.uleb128 0x13
 4482 01a6 02       		.uleb128 0x2
 4483 01a7 18       		.uleb128 0x18
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 140


 4484 01a8 00       		.byte	0
 4485 01a9 00       		.byte	0
 4486 01aa 1C       		.uleb128 0x1c
 4487 01ab 01       		.uleb128 0x1
 4488 01ac 01       		.byte	0x1
 4489 01ad 49       		.uleb128 0x49
 4490 01ae 13       		.uleb128 0x13
 4491 01af 01       		.uleb128 0x1
 4492 01b0 13       		.uleb128 0x13
 4493 01b1 00       		.byte	0
 4494 01b2 00       		.byte	0
 4495 01b3 1D       		.uleb128 0x1d
 4496 01b4 21       		.uleb128 0x21
 4497 01b5 00       		.byte	0
 4498 01b6 49       		.uleb128 0x49
 4499 01b7 13       		.uleb128 0x13
 4500 01b8 2F       		.uleb128 0x2f
 4501 01b9 0B       		.uleb128 0xb
 4502 01ba 00       		.byte	0
 4503 01bb 00       		.byte	0
 4504 01bc 1E       		.uleb128 0x1e
 4505 01bd 2E       		.uleb128 0x2e
 4506 01be 01       		.byte	0x1
 4507 01bf 3F       		.uleb128 0x3f
 4508 01c0 19       		.uleb128 0x19
 4509 01c1 03       		.uleb128 0x3
 4510 01c2 0E       		.uleb128 0xe
 4511 01c3 3A       		.uleb128 0x3a
 4512 01c4 0B       		.uleb128 0xb
 4513 01c5 3B       		.uleb128 0x3b
 4514 01c6 05       		.uleb128 0x5
 4515 01c7 27       		.uleb128 0x27
 4516 01c8 19       		.uleb128 0x19
 4517 01c9 11       		.uleb128 0x11
 4518 01ca 01       		.uleb128 0x1
 4519 01cb 12       		.uleb128 0x12
 4520 01cc 06       		.uleb128 0x6
 4521 01cd 40       		.uleb128 0x40
 4522 01ce 18       		.uleb128 0x18
 4523 01cf 9642     		.uleb128 0x2116
 4524 01d1 19       		.uleb128 0x19
 4525 01d2 01       		.uleb128 0x1
 4526 01d3 13       		.uleb128 0x13
 4527 01d4 00       		.byte	0
 4528 01d5 00       		.byte	0
 4529 01d6 1F       		.uleb128 0x1f
 4530 01d7 2E       		.uleb128 0x2e
 4531 01d8 01       		.byte	0x1
 4532 01d9 03       		.uleb128 0x3
 4533 01da 0E       		.uleb128 0xe
 4534 01db 3A       		.uleb128 0x3a
 4535 01dc 0B       		.uleb128 0xb
 4536 01dd 3B       		.uleb128 0x3b
 4537 01de 05       		.uleb128 0x5
 4538 01df 27       		.uleb128 0x27
 4539 01e0 19       		.uleb128 0x19
 4540 01e1 11       		.uleb128 0x11
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 141


 4541 01e2 01       		.uleb128 0x1
 4542 01e3 12       		.uleb128 0x12
 4543 01e4 06       		.uleb128 0x6
 4544 01e5 40       		.uleb128 0x40
 4545 01e6 18       		.uleb128 0x18
 4546 01e7 9642     		.uleb128 0x2116
 4547 01e9 19       		.uleb128 0x19
 4548 01ea 01       		.uleb128 0x1
 4549 01eb 13       		.uleb128 0x13
 4550 01ec 00       		.byte	0
 4551 01ed 00       		.byte	0
 4552 01ee 20       		.uleb128 0x20
 4553 01ef 34       		.uleb128 0x34
 4554 01f0 00       		.byte	0
 4555 01f1 03       		.uleb128 0x3
 4556 01f2 0E       		.uleb128 0xe
 4557 01f3 3A       		.uleb128 0x3a
 4558 01f4 0B       		.uleb128 0xb
 4559 01f5 3B       		.uleb128 0x3b
 4560 01f6 0B       		.uleb128 0xb
 4561 01f7 49       		.uleb128 0x49
 4562 01f8 13       		.uleb128 0x13
 4563 01f9 3F       		.uleb128 0x3f
 4564 01fa 19       		.uleb128 0x19
 4565 01fb 02       		.uleb128 0x2
 4566 01fc 18       		.uleb128 0x18
 4567 01fd 00       		.byte	0
 4568 01fe 00       		.byte	0
 4569 01ff 21       		.uleb128 0x21
 4570 0200 26       		.uleb128 0x26
 4571 0201 00       		.byte	0
 4572 0202 49       		.uleb128 0x49
 4573 0203 13       		.uleb128 0x13
 4574 0204 00       		.byte	0
 4575 0205 00       		.byte	0
 4576 0206 22       		.uleb128 0x22
 4577 0207 2E       		.uleb128 0x2e
 4578 0208 00       		.byte	0
 4579 0209 3F       		.uleb128 0x3f
 4580 020a 19       		.uleb128 0x19
 4581 020b 3C       		.uleb128 0x3c
 4582 020c 19       		.uleb128 0x19
 4583 020d 6E       		.uleb128 0x6e
 4584 020e 0E       		.uleb128 0xe
 4585 020f 03       		.uleb128 0x3
 4586 0210 0E       		.uleb128 0xe
 4587 0211 3A       		.uleb128 0x3a
 4588 0212 0B       		.uleb128 0xb
 4589 0213 3B       		.uleb128 0x3b
 4590 0214 0B       		.uleb128 0xb
 4591 0215 00       		.byte	0
 4592 0216 00       		.byte	0
 4593 0217 00       		.byte	0
 4594              		.section	.debug_loc,"",%progbits
 4595              	.Ldebug_loc0:
 4596              	.LLST0:
 4597 0000 00000000 		.4byte	.LVL0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 142


 4598 0004 04000000 		.4byte	.LVL1
 4599 0008 0200     		.2byte	0x2
 4600 000a 30       		.byte	0x30
 4601 000b 9F       		.byte	0x9f
 4602 000c 04000000 		.4byte	.LVL1
 4603 0010 16000000 		.4byte	.LVL2
 4604 0014 0100     		.2byte	0x1
 4605 0016 53       		.byte	0x53
 4606 0017 16000000 		.4byte	.LVL2
 4607 001b 18000000 		.4byte	.LVL3
 4608 001f 0300     		.2byte	0x3
 4609 0021 73       		.byte	0x73
 4610 0022 7D       		.sleb128 -3
 4611 0023 9F       		.byte	0x9f
 4612 0024 18000000 		.4byte	.LVL3
 4613 0028 20000000 		.4byte	.LVL5
 4614 002c 0100     		.2byte	0x1
 4615 002e 53       		.byte	0x53
 4616 002f 00000000 		.4byte	0
 4617 0033 00000000 		.4byte	0
 4618              	.LLST1:
 4619 0037 00000000 		.4byte	.LVL0
 4620 003b 16000000 		.4byte	.LVL2
 4621 003f 0200     		.2byte	0x2
 4622 0041 33       		.byte	0x33
 4623 0042 9F       		.byte	0x9f
 4624 0043 16000000 		.4byte	.LVL2
 4625 0047 18000000 		.4byte	.LVL3
 4626 004b 0100     		.2byte	0x1
 4627 004d 53       		.byte	0x53
 4628 004e 18000000 		.4byte	.LVL3
 4629 0052 20000000 		.4byte	.LVL5
 4630 0056 0200     		.2byte	0x2
 4631 0058 33       		.byte	0x33
 4632 0059 9F       		.byte	0x9f
 4633 005a 20000000 		.4byte	.LVL5
 4634 005e 30000000 		.4byte	.LVL6
 4635 0062 0100     		.2byte	0x1
 4636 0064 53       		.byte	0x53
 4637 0065 30000000 		.4byte	.LVL6
 4638 0069 32000000 		.4byte	.LVL7
 4639 006d 0700     		.2byte	0x7
 4640 006f 73       		.byte	0x73
 4641 0070 B39C8080 		.sleb128 -268431821
 4641      7F
 4642 0075 9F       		.byte	0x9f
 4643 0076 00000000 		.4byte	0
 4644 007a 00000000 		.4byte	0
 4645              	.LLST2:
 4646 007e 00000000 		.4byte	.LVL9
 4647 0082 07000000 		.4byte	.LVL10-1
 4648 0086 0100     		.2byte	0x1
 4649 0088 50       		.byte	0x50
 4650 0089 07000000 		.4byte	.LVL10-1
 4651 008d 12000000 		.4byte	.LVL12
 4652 0091 0100     		.2byte	0x1
 4653 0093 54       		.byte	0x54
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 143


 4654 0094 12000000 		.4byte	.LVL12
 4655 0098 20000000 		.4byte	.LFE6
 4656 009c 0400     		.2byte	0x4
 4657 009e F3       		.byte	0xf3
 4658 009f 01       		.uleb128 0x1
 4659 00a0 50       		.byte	0x50
 4660 00a1 9F       		.byte	0x9f
 4661 00a2 00000000 		.4byte	0
 4662 00a6 00000000 		.4byte	0
 4663              	.LLST3:
 4664 00aa 08000000 		.4byte	.LVL10
 4665 00ae 19000000 		.4byte	.LVL14-1
 4666 00b2 0100     		.2byte	0x1
 4667 00b4 50       		.byte	0x50
 4668 00b5 00000000 		.4byte	0
 4669 00b9 00000000 		.4byte	0
 4670              	.LLST4:
 4671 00bd 10000000 		.4byte	.LVL11
 4672 00c1 14000000 		.4byte	.LVL13
 4673 00c5 0100     		.2byte	0x1
 4674 00c7 53       		.byte	0x53
 4675 00c8 14000000 		.4byte	.LVL13
 4676 00cc 1A000000 		.4byte	.LVL15
 4677 00d0 0100     		.2byte	0x1
 4678 00d2 54       		.byte	0x54
 4679 00d3 00000000 		.4byte	0
 4680 00d7 00000000 		.4byte	0
 4681              	.LLST5:
 4682 00db 06000000 		.4byte	.LVL17
 4683 00df 11000000 		.4byte	.LVL19-1
 4684 00e3 0100     		.2byte	0x1
 4685 00e5 50       		.byte	0x50
 4686 00e6 00000000 		.4byte	0
 4687 00ea 00000000 		.4byte	0
 4688              	.LLST6:
 4689 00ee 0E000000 		.4byte	.LVL18
 4690 00f2 14000000 		.4byte	.LVL20
 4691 00f6 0100     		.2byte	0x1
 4692 00f8 54       		.byte	0x54
 4693 00f9 14000000 		.4byte	.LVL20
 4694 00fd 1C000000 		.4byte	.LFE8
 4695 0101 0100     		.2byte	0x1
 4696 0103 50       		.byte	0x50
 4697 0104 00000000 		.4byte	0
 4698 0108 00000000 		.4byte	0
 4699              	.LLST7:
 4700 010c 00000000 		.4byte	.LVL21
 4701 0110 07000000 		.4byte	.LVL22-1
 4702 0114 0100     		.2byte	0x1
 4703 0116 50       		.byte	0x50
 4704 0117 07000000 		.4byte	.LVL22-1
 4705 011b 14000000 		.4byte	.LVL23
 4706 011f 0100     		.2byte	0x1
 4707 0121 54       		.byte	0x54
 4708 0122 14000000 		.4byte	.LVL23
 4709 0126 30000000 		.4byte	.LFE9
 4710 012a 0400     		.2byte	0x4
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 144


 4711 012c F3       		.byte	0xf3
 4712 012d 01       		.uleb128 0x1
 4713 012e 50       		.byte	0x50
 4714 012f 9F       		.byte	0x9f
 4715 0130 00000000 		.4byte	0
 4716 0134 00000000 		.4byte	0
 4717              	.LLST8:
 4718 0138 08000000 		.4byte	.LVL22
 4719 013c 23000000 		.4byte	.LVL24-1
 4720 0140 0100     		.2byte	0x1
 4721 0142 50       		.byte	0x50
 4722 0143 00000000 		.4byte	0
 4723 0147 00000000 		.4byte	0
 4724              	.LLST9:
 4725 014b 00000000 		.4byte	.LVL25
 4726 014f 04000000 		.4byte	.LVL26
 4727 0153 0100     		.2byte	0x1
 4728 0155 50       		.byte	0x50
 4729 0156 04000000 		.4byte	.LVL26
 4730 015a 14000000 		.4byte	.LFE15
 4731 015e 0100     		.2byte	0x1
 4732 0160 52       		.byte	0x52
 4733 0161 00000000 		.4byte	0
 4734 0165 00000000 		.4byte	0
 4735              	.LLST10:
 4736 0169 00000000 		.4byte	.LVL31
 4737 016d 04000000 		.4byte	.LVL32
 4738 0171 0100     		.2byte	0x1
 4739 0173 50       		.byte	0x50
 4740 0174 04000000 		.4byte	.LVL32
 4741 0178 14000000 		.4byte	.LFE24
 4742 017c 0400     		.2byte	0x4
 4743 017e F3       		.byte	0xf3
 4744 017f 01       		.uleb128 0x1
 4745 0180 50       		.byte	0x50
 4746 0181 9F       		.byte	0x9f
 4747 0182 00000000 		.4byte	0
 4748 0186 00000000 		.4byte	0
 4749              	.LLST11:
 4750 018a 00000000 		.4byte	.LVL33
 4751 018e 08000000 		.4byte	.LVL34
 4752 0192 0100     		.2byte	0x1
 4753 0194 50       		.byte	0x50
 4754 0195 08000000 		.4byte	.LVL34
 4755 0199 18000000 		.4byte	.LFE25
 4756 019d 0400     		.2byte	0x4
 4757 019f F3       		.byte	0xf3
 4758 01a0 01       		.uleb128 0x1
 4759 01a1 50       		.byte	0x50
 4760 01a2 9F       		.byte	0x9f
 4761 01a3 00000000 		.4byte	0
 4762 01a7 00000000 		.4byte	0
 4763              	.LLST12:
 4764 01ab 00000000 		.4byte	.LVL35
 4765 01af 04000000 		.4byte	.LVL36
 4766 01b3 0100     		.2byte	0x1
 4767 01b5 50       		.byte	0x50
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 145


 4768 01b6 04000000 		.4byte	.LVL36
 4769 01ba 14000000 		.4byte	.LFE26
 4770 01be 0400     		.2byte	0x4
 4771 01c0 F3       		.byte	0xf3
 4772 01c1 01       		.uleb128 0x1
 4773 01c2 50       		.byte	0x50
 4774 01c3 9F       		.byte	0x9f
 4775 01c4 00000000 		.4byte	0
 4776 01c8 00000000 		.4byte	0
 4777              	.LLST13:
 4778 01cc 00000000 		.4byte	.LVL37
 4779 01d0 04000000 		.4byte	.LVL38
 4780 01d4 0100     		.2byte	0x1
 4781 01d6 50       		.byte	0x50
 4782 01d7 04000000 		.4byte	.LVL38
 4783 01db 14000000 		.4byte	.LFE27
 4784 01df 0400     		.2byte	0x4
 4785 01e1 F3       		.byte	0xf3
 4786 01e2 01       		.uleb128 0x1
 4787 01e3 50       		.byte	0x50
 4788 01e4 9F       		.byte	0x9f
 4789 01e5 00000000 		.4byte	0
 4790 01e9 00000000 		.4byte	0
 4791              	.LLST14:
 4792 01ed 00000000 		.4byte	.LVL39
 4793 01f1 04000000 		.4byte	.LVL40
 4794 01f5 0100     		.2byte	0x1
 4795 01f7 50       		.byte	0x50
 4796 01f8 04000000 		.4byte	.LVL40
 4797 01fc 14000000 		.4byte	.LFE28
 4798 0200 0400     		.2byte	0x4
 4799 0202 F3       		.byte	0xf3
 4800 0203 01       		.uleb128 0x1
 4801 0204 50       		.byte	0x50
 4802 0205 9F       		.byte	0x9f
 4803 0206 00000000 		.4byte	0
 4804 020a 00000000 		.4byte	0
 4805              	.LLST15:
 4806 020e 00000000 		.4byte	.LVL42
 4807 0212 0C000000 		.4byte	.LVL44
 4808 0216 0100     		.2byte	0x1
 4809 0218 50       		.byte	0x50
 4810 0219 0C000000 		.4byte	.LVL44
 4811 021d 20000000 		.4byte	.LFE18
 4812 0221 0400     		.2byte	0x4
 4813 0223 F3       		.byte	0xf3
 4814 0224 01       		.uleb128 0x1
 4815 0225 50       		.byte	0x50
 4816 0226 9F       		.byte	0x9f
 4817 0227 00000000 		.4byte	0
 4818 022b 00000000 		.4byte	0
 4819              	.LLST16:
 4820 022f 00000000 		.4byte	.LVL42
 4821 0233 0F000000 		.4byte	.LVL45-1
 4822 0237 0100     		.2byte	0x1
 4823 0239 51       		.byte	0x51
 4824 023a 0F000000 		.4byte	.LVL45-1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 146


 4825 023e 1E000000 		.4byte	.LVL47
 4826 0242 0100     		.2byte	0x1
 4827 0244 55       		.byte	0x55
 4828 0245 1E000000 		.4byte	.LVL47
 4829 0249 20000000 		.4byte	.LFE18
 4830 024d 0400     		.2byte	0x4
 4831 024f F3       		.byte	0xf3
 4832 0250 01       		.uleb128 0x1
 4833 0251 51       		.byte	0x51
 4834 0252 9F       		.byte	0x9f
 4835 0253 00000000 		.4byte	0
 4836 0257 00000000 		.4byte	0
 4837              	.LLST17:
 4838 025b 00000000 		.4byte	.LVL48
 4839 025f 0A000000 		.4byte	.LVL50
 4840 0263 0100     		.2byte	0x1
 4841 0265 50       		.byte	0x50
 4842 0266 0A000000 		.4byte	.LVL50
 4843 026a 1C000000 		.4byte	.LFE19
 4844 026e 0400     		.2byte	0x4
 4845 0270 F3       		.byte	0xf3
 4846 0271 01       		.uleb128 0x1
 4847 0272 50       		.byte	0x50
 4848 0273 9F       		.byte	0x9f
 4849 0274 00000000 		.4byte	0
 4850 0278 00000000 		.4byte	0
 4851              	.LLST18:
 4852 027c 00000000 		.4byte	.LVL52
 4853 0280 0C000000 		.4byte	.LVL54
 4854 0284 0100     		.2byte	0x1
 4855 0286 50       		.byte	0x50
 4856 0287 0C000000 		.4byte	.LVL54
 4857 028b 22000000 		.4byte	.LFE20
 4858 028f 0400     		.2byte	0x4
 4859 0291 F3       		.byte	0xf3
 4860 0292 01       		.uleb128 0x1
 4861 0293 50       		.byte	0x50
 4862 0294 9F       		.byte	0x9f
 4863 0295 00000000 		.4byte	0
 4864 0299 00000000 		.4byte	0
 4865              	.LLST19:
 4866 029d 00000000 		.4byte	.LVL52
 4867 02a1 0F000000 		.4byte	.LVL55-1
 4868 02a5 0100     		.2byte	0x1
 4869 02a7 51       		.byte	0x51
 4870 02a8 0F000000 		.4byte	.LVL55-1
 4871 02ac 20000000 		.4byte	.LVL57
 4872 02b0 0100     		.2byte	0x1
 4873 02b2 55       		.byte	0x55
 4874 02b3 20000000 		.4byte	.LVL57
 4875 02b7 22000000 		.4byte	.LFE20
 4876 02bb 0400     		.2byte	0x4
 4877 02bd F3       		.byte	0xf3
 4878 02be 01       		.uleb128 0x1
 4879 02bf 51       		.byte	0x51
 4880 02c0 9F       		.byte	0x9f
 4881 02c1 00000000 		.4byte	0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 147


 4882 02c5 00000000 		.4byte	0
 4883              	.LLST20:
 4884 02c9 00000000 		.4byte	.LVL58
 4885 02cd 0A000000 		.4byte	.LVL60
 4886 02d1 0100     		.2byte	0x1
 4887 02d3 50       		.byte	0x50
 4888 02d4 0A000000 		.4byte	.LVL60
 4889 02d8 1E000000 		.4byte	.LFE21
 4890 02dc 0400     		.2byte	0x4
 4891 02de F3       		.byte	0xf3
 4892 02df 01       		.uleb128 0x1
 4893 02e0 50       		.byte	0x50
 4894 02e1 9F       		.byte	0x9f
 4895 02e2 00000000 		.4byte	0
 4896 02e6 00000000 		.4byte	0
 4897              	.LLST21:
 4898 02ea 00000000 		.4byte	.LVL62
 4899 02ee 0C000000 		.4byte	.LVL63
 4900 02f2 0100     		.2byte	0x1
 4901 02f4 50       		.byte	0x50
 4902 02f5 0C000000 		.4byte	.LVL63
 4903 02f9 4C000000 		.4byte	.LFE22
 4904 02fd 0400     		.2byte	0x4
 4905 02ff F3       		.byte	0xf3
 4906 0300 01       		.uleb128 0x1
 4907 0301 50       		.byte	0x50
 4908 0302 9F       		.byte	0x9f
 4909 0303 00000000 		.4byte	0
 4910 0307 00000000 		.4byte	0
 4911              	.LLST22:
 4912 030b 00000000 		.4byte	.LVL62
 4913 030f 0F000000 		.4byte	.LVL64-1
 4914 0313 0100     		.2byte	0x1
 4915 0315 51       		.byte	0x51
 4916 0316 0F000000 		.4byte	.LVL64-1
 4917 031a 4C000000 		.4byte	.LFE22
 4918 031e 0400     		.2byte	0x4
 4919 0320 F3       		.byte	0xf3
 4920 0321 01       		.uleb128 0x1
 4921 0322 51       		.byte	0x51
 4922 0323 9F       		.byte	0x9f
 4923 0324 00000000 		.4byte	0
 4924 0328 00000000 		.4byte	0
 4925              	.LLST23:
 4926 032c 26000000 		.4byte	.LVL67
 4927 0330 45000000 		.4byte	.LVL73-1
 4928 0334 0100     		.2byte	0x1
 4929 0336 50       		.byte	0x50
 4930 0337 00000000 		.4byte	0
 4931 033b 00000000 		.4byte	0
 4932              	.LLST24:
 4933 033f 22000000 		.4byte	.LVL66
 4934 0343 46000000 		.4byte	.LVL74
 4935 0347 0100     		.2byte	0x1
 4936 0349 55       		.byte	0x55
 4937 034a 00000000 		.4byte	0
 4938 034e 00000000 		.4byte	0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 148


 4939              	.LLST25:
 4940 0352 32000000 		.4byte	.LVL68
 4941 0356 38000000 		.4byte	.LVL69
 4942 035a 0100     		.2byte	0x1
 4943 035c 51       		.byte	0x51
 4944 035d 3A000000 		.4byte	.LVL70
 4945 0361 3C000000 		.4byte	.LVL71
 4946 0365 0100     		.2byte	0x1
 4947 0367 51       		.byte	0x51
 4948 0368 3C000000 		.4byte	.LVL71
 4949 036c 40000000 		.4byte	.LVL72
 4950 0370 0100     		.2byte	0x1
 4951 0372 53       		.byte	0x53
 4952 0373 40000000 		.4byte	.LVL72
 4953 0377 45000000 		.4byte	.LVL73-1
 4954 037b 0100     		.2byte	0x1
 4955 037d 51       		.byte	0x51
 4956 037e 00000000 		.4byte	0
 4957 0382 00000000 		.4byte	0
 4958              	.LLST26:
 4959 0386 00000000 		.4byte	.LVL75
 4960 038a 0A000000 		.4byte	.LVL76
 4961 038e 0100     		.2byte	0x1
 4962 0390 50       		.byte	0x50
 4963 0391 0A000000 		.4byte	.LVL76
 4964 0395 2C000000 		.4byte	.LFE23
 4965 0399 0400     		.2byte	0x4
 4966 039b F3       		.byte	0xf3
 4967 039c 01       		.uleb128 0x1
 4968 039d 50       		.byte	0x50
 4969 039e 9F       		.byte	0x9f
 4970 039f 00000000 		.4byte	0
 4971 03a3 00000000 		.4byte	0
 4972              	.LLST27:
 4973 03a7 24000000 		.4byte	.LVL78
 4974 03ab 26000000 		.4byte	.LVL79
 4975 03af 0100     		.2byte	0x1
 4976 03b1 50       		.byte	0x50
 4977 03b2 00000000 		.4byte	0
 4978 03b6 00000000 		.4byte	0
 4979              	.LLST28:
 4980 03ba 00000000 		.4byte	.LVL80
 4981 03be 06000000 		.4byte	.LVL81
 4982 03c2 0100     		.2byte	0x1
 4983 03c4 50       		.byte	0x50
 4984 03c5 06000000 		.4byte	.LVL81
 4985 03c9 26000000 		.4byte	.LVL85
 4986 03cd 0100     		.2byte	0x1
 4987 03cf 54       		.byte	0x54
 4988 03d0 00000000 		.4byte	0
 4989 03d4 00000000 		.4byte	0
 4990              	.LLST29:
 4991 03d8 12000000 		.4byte	.LVL89
 4992 03dc 16000000 		.4byte	.LVL90
 4993 03e0 0200     		.2byte	0x2
 4994 03e2 30       		.byte	0x30
 4995 03e3 9F       		.byte	0x9f
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 149


 4996 03e4 16000000 		.4byte	.LVL90
 4997 03e8 28000000 		.4byte	.LVL91
 4998 03ec 0100     		.2byte	0x1
 4999 03ee 53       		.byte	0x53
 5000 03ef 28000000 		.4byte	.LVL91
 5001 03f3 2A000000 		.4byte	.LVL92
 5002 03f7 0300     		.2byte	0x3
 5003 03f9 73       		.byte	0x73
 5004 03fa 7D       		.sleb128 -3
 5005 03fb 9F       		.byte	0x9f
 5006 03fc 2A000000 		.4byte	.LVL92
 5007 0400 32000000 		.4byte	.LVL94
 5008 0404 0100     		.2byte	0x1
 5009 0406 53       		.byte	0x53
 5010 0407 00000000 		.4byte	0
 5011 040b 00000000 		.4byte	0
 5012              	.LLST30:
 5013 040f 12000000 		.4byte	.LVL89
 5014 0413 28000000 		.4byte	.LVL91
 5015 0417 0200     		.2byte	0x2
 5016 0419 33       		.byte	0x33
 5017 041a 9F       		.byte	0x9f
 5018 041b 28000000 		.4byte	.LVL91
 5019 041f 2A000000 		.4byte	.LVL92
 5020 0423 0100     		.2byte	0x1
 5021 0425 53       		.byte	0x53
 5022 0426 2A000000 		.4byte	.LVL92
 5023 042a 32000000 		.4byte	.LVL94
 5024 042e 0200     		.2byte	0x2
 5025 0430 33       		.byte	0x33
 5026 0431 9F       		.byte	0x9f
 5027 0432 32000000 		.4byte	.LVL94
 5028 0436 5C000000 		.4byte	.LVL96
 5029 043a 0100     		.2byte	0x1
 5030 043c 53       		.byte	0x53
 5031 043d 00000000 		.4byte	0
 5032 0441 00000000 		.4byte	0
 5033              	.LLST31:
 5034 0445 12000000 		.4byte	.LVL89
 5035 0449 C8000000 		.4byte	.LVL109
 5036 044d 0100     		.2byte	0x1
 5037 044f 55       		.byte	0x55
 5038 0450 00000000 		.4byte	0
 5039 0454 00000000 		.4byte	0
 5040              	.LLST32:
 5041 0458 56000000 		.4byte	.LVL95
 5042 045c 6E000000 		.4byte	.LVL97
 5043 0460 0100     		.2byte	0x1
 5044 0462 51       		.byte	0x51
 5045 0463 6E000000 		.4byte	.LVL97
 5046 0467 78000000 		.4byte	.LVL99
 5047 046b 0100     		.2byte	0x1
 5048 046d 53       		.byte	0x53
 5049 046e 78000000 		.4byte	.LVL99
 5050 0472 7C000000 		.4byte	.LVL100
 5051 0476 0200     		.2byte	0x2
 5052 0478 74       		.byte	0x74
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 150


 5053 0479 00       		.sleb128 0
 5054 047a 94000000 		.4byte	.LVL102
 5055 047e B8000000 		.4byte	.LVL108
 5056 0482 0100     		.2byte	0x1
 5057 0484 56       		.byte	0x56
 5058 0485 00000000 		.4byte	0
 5059 0489 00000000 		.4byte	0
 5060              	.LLST33:
 5061 048d 04000000 		.4byte	.LVL86
 5062 0491 98000000 		.4byte	.LVL103
 5063 0495 0200     		.2byte	0x2
 5064 0497 30       		.byte	0x30
 5065 0498 9F       		.byte	0x9f
 5066 0499 98000000 		.4byte	.LVL103
 5067 049d C8000000 		.4byte	.LVL109
 5068 04a1 0100     		.2byte	0x1
 5069 04a3 54       		.byte	0x54
 5070 04a4 00000000 		.4byte	0
 5071 04a8 00000000 		.4byte	0
 5072              	.LLST34:
 5073 04ac 00000000 		.4byte	.LVL110
 5074 04b0 09000000 		.4byte	.LVL112-1
 5075 04b4 0100     		.2byte	0x1
 5076 04b6 50       		.byte	0x50
 5077 04b7 09000000 		.4byte	.LVL112-1
 5078 04bb 2C000000 		.4byte	.LVL119
 5079 04bf 0100     		.2byte	0x1
 5080 04c1 54       		.byte	0x54
 5081 04c2 2C000000 		.4byte	.LVL119
 5082 04c6 5E000000 		.4byte	.LVL122
 5083 04ca 0300     		.2byte	0x3
 5084 04cc 74       		.byte	0x74
 5085 04cd 03       		.sleb128 3
 5086 04ce 9F       		.byte	0x9f
 5087 04cf 5E000000 		.4byte	.LVL122
 5088 04d3 80000000 		.4byte	.LFE10
 5089 04d7 0400     		.2byte	0x4
 5090 04d9 F3       		.byte	0xf3
 5091 04da 01       		.uleb128 0x1
 5092 04db 50       		.byte	0x50
 5093 04dc 9F       		.byte	0x9f
 5094 04dd 00000000 		.4byte	0
 5095 04e1 00000000 		.4byte	0
 5096              	.LLST35:
 5097 04e5 06000000 		.4byte	.LVL111
 5098 04e9 14000000 		.4byte	.LVL115
 5099 04ed 0200     		.2byte	0x2
 5100 04ef 30       		.byte	0x30
 5101 04f0 9F       		.byte	0x9f
 5102 04f1 14000000 		.4byte	.LVL115
 5103 04f5 1C000000 		.4byte	.LVL117
 5104 04f9 0200     		.2byte	0x2
 5105 04fb 31       		.byte	0x31
 5106 04fc 9F       		.byte	0x9f
 5107 04fd 1C000000 		.4byte	.LVL117
 5108 0501 1E000000 		.4byte	.LVL118
 5109 0505 0200     		.2byte	0x2
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 151


 5110 0507 30       		.byte	0x30
 5111 0508 9F       		.byte	0x9f
 5112 0509 1E000000 		.4byte	.LVL118
 5113 050d 55000000 		.4byte	.LVL120-1
 5114 0511 0100     		.2byte	0x1
 5115 0513 51       		.byte	0x51
 5116 0514 00000000 		.4byte	0
 5117 0518 00000000 		.4byte	0
 5118              	.LLST36:
 5119 051c 0C000000 		.4byte	.LVL113
 5120 0520 5E000000 		.4byte	.LVL123
 5121 0524 0100     		.2byte	0x1
 5122 0526 55       		.byte	0x55
 5123 0527 00000000 		.4byte	0
 5124 052b 00000000 		.4byte	0
 5125              	.LLST37:
 5126 052f 00000000 		.4byte	.LVL124
 5127 0533 08000000 		.4byte	.LVL125
 5128 0537 0100     		.2byte	0x1
 5129 0539 50       		.byte	0x50
 5130 053a 08000000 		.4byte	.LVL125
 5131 053e 14000000 		.4byte	.LFE32
 5132 0542 0400     		.2byte	0x4
 5133 0544 F3       		.byte	0xf3
 5134 0545 01       		.uleb128 0x1
 5135 0546 50       		.byte	0x50
 5136 0547 9F       		.byte	0x9f
 5137 0548 00000000 		.4byte	0
 5138 054c 00000000 		.4byte	0
 5139              	.LLST38:
 5140 0550 00000000 		.4byte	.LVL127
 5141 0554 14000000 		.4byte	.LVL128
 5142 0558 0100     		.2byte	0x1
 5143 055a 50       		.byte	0x50
 5144 055b 14000000 		.4byte	.LVL128
 5145 055f 18000000 		.4byte	.LVL129
 5146 0563 0100     		.2byte	0x1
 5147 0565 53       		.byte	0x53
 5148 0566 18000000 		.4byte	.LVL129
 5149 056a 44000000 		.4byte	.LFE11
 5150 056e 0400     		.2byte	0x4
 5151 0570 F3       		.byte	0xf3
 5152 0571 01       		.uleb128 0x1
 5153 0572 50       		.byte	0x50
 5154 0573 9F       		.byte	0x9f
 5155 0574 00000000 		.4byte	0
 5156 0578 00000000 		.4byte	0
 5157              	.LLST39:
 5158 057c 00000000 		.4byte	.LVL132
 5159 0580 1A000000 		.4byte	.LVL133
 5160 0584 0100     		.2byte	0x1
 5161 0586 50       		.byte	0x50
 5162 0587 1A000000 		.4byte	.LVL133
 5163 058b 4C000000 		.4byte	.LFE33
 5164 058f 0400     		.2byte	0x4
 5165 0591 F3       		.byte	0xf3
 5166 0592 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 152


 5167 0593 50       		.byte	0x50
 5168 0594 9F       		.byte	0x9f
 5169 0595 00000000 		.4byte	0
 5170 0599 00000000 		.4byte	0
 5171              	.LLST40:
 5172 059d 00000000 		.4byte	.LVL137
 5173 05a1 02000000 		.4byte	.LVL138
 5174 05a5 0100     		.2byte	0x1
 5175 05a7 50       		.byte	0x50
 5176 05a8 02000000 		.4byte	.LVL138
 5177 05ac 10000000 		.4byte	.LFE40
 5178 05b0 0400     		.2byte	0x4
 5179 05b2 F3       		.byte	0xf3
 5180 05b3 01       		.uleb128 0x1
 5181 05b4 50       		.byte	0x50
 5182 05b5 9F       		.byte	0x9f
 5183 05b6 00000000 		.4byte	0
 5184 05ba 00000000 		.4byte	0
 5185              	.LLST41:
 5186 05be 0C000000 		.4byte	.LVL141
 5187 05c2 1C000000 		.4byte	.LVL144
 5188 05c6 0100     		.2byte	0x1
 5189 05c8 54       		.byte	0x54
 5190 05c9 1E000000 		.4byte	.LVL145
 5191 05cd 22000000 		.4byte	.LVL146
 5192 05d1 0100     		.2byte	0x1
 5193 05d3 54       		.byte	0x54
 5194 05d4 00000000 		.4byte	0
 5195 05d8 00000000 		.4byte	0
 5196              	.LLST42:
 5197 05dc 02000000 		.4byte	.LVL147
 5198 05e0 06000000 		.4byte	.LVL148
 5199 05e4 0200     		.2byte	0x2
 5200 05e6 30       		.byte	0x30
 5201 05e7 9F       		.byte	0x9f
 5202 05e8 06000000 		.4byte	.LVL148
 5203 05ec 1B000000 		.4byte	.LVL150-1
 5204 05f0 0100     		.2byte	0x1
 5205 05f2 53       		.byte	0x53
 5206 05f3 00000000 		.4byte	0
 5207 05f7 00000000 		.4byte	0
 5208              	.LLST43:
 5209 05fb 00000000 		.4byte	.LVL157
 5210 05ff 06000000 		.4byte	.LVL158
 5211 0603 0100     		.2byte	0x1
 5212 0605 50       		.byte	0x50
 5213 0606 06000000 		.4byte	.LVL158
 5214 060a 10000000 		.4byte	.LFE47
 5215 060e 0400     		.2byte	0x4
 5216 0610 F3       		.byte	0xf3
 5217 0611 01       		.uleb128 0x1
 5218 0612 50       		.byte	0x50
 5219 0613 9F       		.byte	0x9f
 5220 0614 00000000 		.4byte	0
 5221 0618 00000000 		.4byte	0
 5222              	.LLST44:
 5223 061c 00000000 		.4byte	.LVL159
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 153


 5224 0620 02000000 		.4byte	.LVL160
 5225 0624 0100     		.2byte	0x1
 5226 0626 50       		.byte	0x50
 5227 0627 02000000 		.4byte	.LVL160
 5228 062b 0C000000 		.4byte	.LFE48
 5229 062f 0400     		.2byte	0x4
 5230 0631 F3       		.byte	0xf3
 5231 0632 01       		.uleb128 0x1
 5232 0633 50       		.byte	0x50
 5233 0634 9F       		.byte	0x9f
 5234 0635 00000000 		.4byte	0
 5235 0639 00000000 		.4byte	0
 5236              	.LLST45:
 5237 063d 00000000 		.4byte	.LVL162
 5238 0641 0A000000 		.4byte	.LVL164
 5239 0645 0100     		.2byte	0x1
 5240 0647 50       		.byte	0x50
 5241 0648 0A000000 		.4byte	.LVL164
 5242 064c 20000000 		.4byte	.LFE51
 5243 0650 0400     		.2byte	0x4
 5244 0652 F3       		.byte	0xf3
 5245 0653 01       		.uleb128 0x1
 5246 0654 50       		.byte	0x50
 5247 0655 9F       		.byte	0x9f
 5248 0656 00000000 		.4byte	0
 5249 065a 00000000 		.4byte	0
 5250              	.LLST46:
 5251 065e 08000000 		.4byte	.LVL163
 5252 0662 12000000 		.4byte	.LVL165
 5253 0666 0100     		.2byte	0x1
 5254 0668 52       		.byte	0x52
 5255 0669 12000000 		.4byte	.LVL165
 5256 066d 20000000 		.4byte	.LFE51
 5257 0671 0100     		.2byte	0x1
 5258 0673 50       		.byte	0x50
 5259 0674 00000000 		.4byte	0
 5260 0678 00000000 		.4byte	0
 5261              	.LLST47:
 5262 067c 00000000 		.4byte	.LVL166
 5263 0680 0A000000 		.4byte	.LVL168
 5264 0684 0100     		.2byte	0x1
 5265 0686 50       		.byte	0x50
 5266 0687 0A000000 		.4byte	.LVL168
 5267 068b 20000000 		.4byte	.LFE52
 5268 068f 0400     		.2byte	0x4
 5269 0691 F3       		.byte	0xf3
 5270 0692 01       		.uleb128 0x1
 5271 0693 50       		.byte	0x50
 5272 0694 9F       		.byte	0x9f
 5273 0695 00000000 		.4byte	0
 5274 0699 00000000 		.4byte	0
 5275              	.LLST48:
 5276 069d 08000000 		.4byte	.LVL167
 5277 06a1 12000000 		.4byte	.LVL169
 5278 06a5 0100     		.2byte	0x1
 5279 06a7 52       		.byte	0x52
 5280 06a8 12000000 		.4byte	.LVL169
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 154


 5281 06ac 20000000 		.4byte	.LFE52
 5282 06b0 0100     		.2byte	0x1
 5283 06b2 50       		.byte	0x50
 5284 06b3 00000000 		.4byte	0
 5285 06b7 00000000 		.4byte	0
 5286              	.LLST49:
 5287 06bb 00000000 		.4byte	.LVL170
 5288 06bf 0A000000 		.4byte	.LVL172
 5289 06c3 0100     		.2byte	0x1
 5290 06c5 50       		.byte	0x50
 5291 06c6 0A000000 		.4byte	.LVL172
 5292 06ca 20000000 		.4byte	.LFE53
 5293 06ce 0400     		.2byte	0x4
 5294 06d0 F3       		.byte	0xf3
 5295 06d1 01       		.uleb128 0x1
 5296 06d2 50       		.byte	0x50
 5297 06d3 9F       		.byte	0x9f
 5298 06d4 00000000 		.4byte	0
 5299 06d8 00000000 		.4byte	0
 5300              	.LLST50:
 5301 06dc 08000000 		.4byte	.LVL171
 5302 06e0 12000000 		.4byte	.LVL173
 5303 06e4 0100     		.2byte	0x1
 5304 06e6 52       		.byte	0x52
 5305 06e7 12000000 		.4byte	.LVL173
 5306 06eb 20000000 		.4byte	.LFE53
 5307 06ef 0100     		.2byte	0x1
 5308 06f1 50       		.byte	0x50
 5309 06f2 00000000 		.4byte	0
 5310 06f6 00000000 		.4byte	0
 5311              	.LLST51:
 5312 06fa 00000000 		.4byte	.LVL174
 5313 06fe 08000000 		.4byte	.LVL175
 5314 0702 0100     		.2byte	0x1
 5315 0704 50       		.byte	0x50
 5316 0705 08000000 		.4byte	.LVL175
 5317 0709 1C000000 		.4byte	.LVL179
 5318 070d 0400     		.2byte	0x4
 5319 070f F3       		.byte	0xf3
 5320 0710 01       		.uleb128 0x1
 5321 0711 50       		.byte	0x50
 5322 0712 9F       		.byte	0x9f
 5323 0713 1C000000 		.4byte	.LVL179
 5324 0717 22000000 		.4byte	.LVL180
 5325 071b 0100     		.2byte	0x1
 5326 071d 50       		.byte	0x50
 5327 071e 22000000 		.4byte	.LVL180
 5328 0722 36000000 		.4byte	.LVL184
 5329 0726 0400     		.2byte	0x4
 5330 0728 F3       		.byte	0xf3
 5331 0729 01       		.uleb128 0x1
 5332 072a 50       		.byte	0x50
 5333 072b 9F       		.byte	0x9f
 5334 072c 36000000 		.4byte	.LVL184
 5335 0730 3C000000 		.4byte	.LVL185
 5336 0734 0100     		.2byte	0x1
 5337 0736 50       		.byte	0x50
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 155


 5338 0737 3C000000 		.4byte	.LVL185
 5339 073b 50000000 		.4byte	.LVL189
 5340 073f 0400     		.2byte	0x4
 5341 0741 F3       		.byte	0xf3
 5342 0742 01       		.uleb128 0x1
 5343 0743 50       		.byte	0x50
 5344 0744 9F       		.byte	0x9f
 5345 0745 50000000 		.4byte	.LVL189
 5346 0749 52000000 		.4byte	.LVL190
 5347 074d 0100     		.2byte	0x1
 5348 074f 50       		.byte	0x50
 5349 0750 52000000 		.4byte	.LVL190
 5350 0754 68000000 		.4byte	.LFE54
 5351 0758 0400     		.2byte	0x4
 5352 075a F3       		.byte	0xf3
 5353 075b 01       		.uleb128 0x1
 5354 075c 50       		.byte	0x50
 5355 075d 9F       		.byte	0x9f
 5356 075e 00000000 		.4byte	0
 5357 0762 00000000 		.4byte	0
 5358              	.LLST52:
 5359 0766 00000000 		.4byte	.LVL174
 5360 076a 10000000 		.4byte	.LVL177
 5361 076e 0100     		.2byte	0x1
 5362 0770 51       		.byte	0x51
 5363 0771 10000000 		.4byte	.LVL177
 5364 0775 1C000000 		.4byte	.LVL179
 5365 0779 0400     		.2byte	0x4
 5366 077b F3       		.byte	0xf3
 5367 077c 01       		.uleb128 0x1
 5368 077d 51       		.byte	0x51
 5369 077e 9F       		.byte	0x9f
 5370 077f 1C000000 		.4byte	.LVL179
 5371 0783 2A000000 		.4byte	.LVL182
 5372 0787 0100     		.2byte	0x1
 5373 0789 51       		.byte	0x51
 5374 078a 2A000000 		.4byte	.LVL182
 5375 078e 36000000 		.4byte	.LVL184
 5376 0792 0400     		.2byte	0x4
 5377 0794 F3       		.byte	0xf3
 5378 0795 01       		.uleb128 0x1
 5379 0796 51       		.byte	0x51
 5380 0797 9F       		.byte	0x9f
 5381 0798 36000000 		.4byte	.LVL184
 5382 079c 44000000 		.4byte	.LVL187
 5383 07a0 0100     		.2byte	0x1
 5384 07a2 51       		.byte	0x51
 5385 07a3 44000000 		.4byte	.LVL187
 5386 07a7 50000000 		.4byte	.LVL189
 5387 07ab 0400     		.2byte	0x4
 5388 07ad F3       		.byte	0xf3
 5389 07ae 01       		.uleb128 0x1
 5390 07af 51       		.byte	0x51
 5391 07b0 9F       		.byte	0x9f
 5392 07b1 50000000 		.4byte	.LVL189
 5393 07b5 55000000 		.4byte	.LVL191-1
 5394 07b9 0100     		.2byte	0x1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 156


 5395 07bb 51       		.byte	0x51
 5396 07bc 55000000 		.4byte	.LVL191-1
 5397 07c0 68000000 		.4byte	.LFE54
 5398 07c4 0400     		.2byte	0x4
 5399 07c6 F3       		.byte	0xf3
 5400 07c7 01       		.uleb128 0x1
 5401 07c8 51       		.byte	0x51
 5402 07c9 9F       		.byte	0x9f
 5403 07ca 00000000 		.4byte	0
 5404 07ce 00000000 		.4byte	0
 5405              	.LLST53:
 5406 07d2 0E000000 		.4byte	.LVL176
 5407 07d6 18000000 		.4byte	.LVL178
 5408 07da 0100     		.2byte	0x1
 5409 07dc 52       		.byte	0x52
 5410 07dd 18000000 		.4byte	.LVL178
 5411 07e1 1C000000 		.4byte	.LVL179
 5412 07e5 0100     		.2byte	0x1
 5413 07e7 51       		.byte	0x51
 5414 07e8 28000000 		.4byte	.LVL181
 5415 07ec 32000000 		.4byte	.LVL183
 5416 07f0 0100     		.2byte	0x1
 5417 07f2 52       		.byte	0x52
 5418 07f3 32000000 		.4byte	.LVL183
 5419 07f7 36000000 		.4byte	.LVL184
 5420 07fb 0100     		.2byte	0x1
 5421 07fd 51       		.byte	0x51
 5422 07fe 42000000 		.4byte	.LVL186
 5423 0802 4C000000 		.4byte	.LVL188
 5424 0806 0100     		.2byte	0x1
 5425 0808 52       		.byte	0x52
 5426 0809 4C000000 		.4byte	.LVL188
 5427 080d 50000000 		.4byte	.LVL189
 5428 0811 0100     		.2byte	0x1
 5429 0813 51       		.byte	0x51
 5430 0814 00000000 		.4byte	0
 5431 0818 00000000 		.4byte	0
 5432              		.section	.debug_aranges,"",%progbits
 5433 0000 C4010000 		.4byte	0x1c4
 5434 0004 0200     		.2byte	0x2
 5435 0006 00000000 		.4byte	.Ldebug_info0
 5436 000a 04       		.byte	0x4
 5437 000b 00       		.byte	0
 5438 000c 0000     		.2byte	0
 5439 000e 0000     		.2byte	0
 5440 0010 00000000 		.4byte	.LFB1
 5441 0014 14000000 		.4byte	.LFE1-.LFB1
 5442 0018 00000000 		.4byte	.LFB4
 5443 001c 54000000 		.4byte	.LFE4-.LFB4
 5444 0020 00000000 		.4byte	.LFB2
 5445 0024 18000000 		.4byte	.LFE2-.LFB2
 5446 0028 00000000 		.4byte	.LFB5
 5447 002c 14000000 		.4byte	.LFE5-.LFB5
 5448 0030 00000000 		.4byte	.LFB6
 5449 0034 20000000 		.4byte	.LFE6-.LFB6
 5450 0038 00000000 		.4byte	.LFB7
 5451 003c 38000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 157


 5452 0040 00000000 		.4byte	.LFB8
 5453 0044 1C000000 		.4byte	.LFE8-.LFB8
 5454 0048 00000000 		.4byte	.LFB9
 5455 004c 30000000 		.4byte	.LFE9-.LFB9
 5456 0050 00000000 		.4byte	.LFB12
 5457 0054 20000000 		.4byte	.LFE12-.LFB12
 5458 0058 00000000 		.4byte	.LFB13
 5459 005c 10000000 		.4byte	.LFE13-.LFB13
 5460 0060 00000000 		.4byte	.LFB14
 5461 0064 0C000000 		.4byte	.LFE14-.LFB14
 5462 0068 00000000 		.4byte	.LFB15
 5463 006c 14000000 		.4byte	.LFE15-.LFB15
 5464 0070 00000000 		.4byte	.LFB16
 5465 0074 10000000 		.4byte	.LFE16-.LFB16
 5466 0078 00000000 		.4byte	.LFB17
 5467 007c 0C000000 		.4byte	.LFE17-.LFB17
 5468 0080 00000000 		.4byte	.LFB24
 5469 0084 14000000 		.4byte	.LFE24-.LFB24
 5470 0088 00000000 		.4byte	.LFB25
 5471 008c 18000000 		.4byte	.LFE25-.LFB25
 5472 0090 00000000 		.4byte	.LFB26
 5473 0094 14000000 		.4byte	.LFE26-.LFB26
 5474 0098 00000000 		.4byte	.LFB27
 5475 009c 14000000 		.4byte	.LFE27-.LFB27
 5476 00a0 00000000 		.4byte	.LFB28
 5477 00a4 14000000 		.4byte	.LFE28-.LFB28
 5478 00a8 00000000 		.4byte	.LFB29
 5479 00ac 04000000 		.4byte	.LFE29-.LFB29
 5480 00b0 00000000 		.4byte	.LFB18
 5481 00b4 20000000 		.4byte	.LFE18-.LFB18
 5482 00b8 00000000 		.4byte	.LFB19
 5483 00bc 1C000000 		.4byte	.LFE19-.LFB19
 5484 00c0 00000000 		.4byte	.LFB20
 5485 00c4 22000000 		.4byte	.LFE20-.LFB20
 5486 00c8 00000000 		.4byte	.LFB21
 5487 00cc 1E000000 		.4byte	.LFE21-.LFB21
 5488 00d0 00000000 		.4byte	.LFB22
 5489 00d4 4C000000 		.4byte	.LFE22-.LFB22
 5490 00d8 00000000 		.4byte	.LFB23
 5491 00dc 2C000000 		.4byte	.LFE23-.LFB23
 5492 00e0 00000000 		.4byte	.LFB30
 5493 00e4 18000000 		.4byte	.LFE30-.LFB30
 5494 00e8 00000000 		.4byte	.LFB31
 5495 00ec 30000000 		.4byte	.LFE31-.LFB31
 5496 00f0 00000000 		.4byte	.LFB3
 5497 00f4 F4000000 		.4byte	.LFE3-.LFB3
 5498 00f8 00000000 		.4byte	.LFB10
 5499 00fc 80000000 		.4byte	.LFE10-.LFB10
 5500 0100 00000000 		.4byte	.LFB32
 5501 0104 14000000 		.4byte	.LFE32-.LFB32
 5502 0108 00000000 		.4byte	.LFB11
 5503 010c 44000000 		.4byte	.LFE11-.LFB11
 5504 0110 00000000 		.4byte	.LFB33
 5505 0114 4C000000 		.4byte	.LFE33-.LFB33
 5506 0118 00000000 		.4byte	.LFB37
 5507 011c 10000000 		.4byte	.LFE37-.LFB37
 5508 0120 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 158


 5509 0124 10000000 		.4byte	.LFE38-.LFB38
 5510 0128 00000000 		.4byte	.LFB36
 5511 012c 18000000 		.4byte	.LFE36-.LFB36
 5512 0130 00000000 		.4byte	.LFB39
 5513 0134 10000000 		.4byte	.LFE39-.LFB39
 5514 0138 00000000 		.4byte	.LFB40
 5515 013c 10000000 		.4byte	.LFE40-.LFB40
 5516 0140 00000000 		.4byte	.LFB41
 5517 0144 10000000 		.4byte	.LFE41-.LFB41
 5518 0148 00000000 		.4byte	.LFB42
 5519 014c 10000000 		.4byte	.LFE42-.LFB42
 5520 0150 00000000 		.4byte	.LFB43
 5521 0154 20000000 		.4byte	.LFE43-.LFB43
 5522 0158 00000000 		.4byte	.LFB44
 5523 015c 10000000 		.4byte	.LFE44-.LFB44
 5524 0160 00000000 		.4byte	.LFB45
 5525 0164 10000000 		.4byte	.LFE45-.LFB45
 5526 0168 00000000 		.4byte	.LFB49
 5527 016c 28000000 		.4byte	.LFE49-.LFB49
 5528 0170 00000000 		.4byte	.LFB46
 5529 0174 0C000000 		.4byte	.LFE46-.LFB46
 5530 0178 00000000 		.4byte	.LFB35
 5531 017c 44000000 		.4byte	.LFE35-.LFB35
 5532 0180 00000000 		.4byte	.LFB34
 5533 0184 20000000 		.4byte	.LFE34-.LFB34
 5534 0188 00000000 		.4byte	.LFB47
 5535 018c 10000000 		.4byte	.LFE47-.LFB47
 5536 0190 00000000 		.4byte	.LFB48
 5537 0194 0C000000 		.4byte	.LFE48-.LFB48
 5538 0198 00000000 		.4byte	.LFB50
 5539 019c 70000000 		.4byte	.LFE50-.LFB50
 5540 01a0 00000000 		.4byte	.LFB51
 5541 01a4 20000000 		.4byte	.LFE51-.LFB51
 5542 01a8 00000000 		.4byte	.LFB52
 5543 01ac 20000000 		.4byte	.LFE52-.LFB52
 5544 01b0 00000000 		.4byte	.LFB53
 5545 01b4 20000000 		.4byte	.LFE53-.LFB53
 5546 01b8 00000000 		.4byte	.LFB54
 5547 01bc 68000000 		.4byte	.LFE54-.LFB54
 5548 01c0 00000000 		.4byte	0
 5549 01c4 00000000 		.4byte	0
 5550              		.section	.debug_ranges,"",%progbits
 5551              	.Ldebug_ranges0:
 5552 0000 00000000 		.4byte	.LFB1
 5553 0004 14000000 		.4byte	.LFE1
 5554 0008 00000000 		.4byte	.LFB4
 5555 000c 54000000 		.4byte	.LFE4
 5556 0010 00000000 		.4byte	.LFB2
 5557 0014 18000000 		.4byte	.LFE2
 5558 0018 00000000 		.4byte	.LFB5
 5559 001c 14000000 		.4byte	.LFE5
 5560 0020 00000000 		.4byte	.LFB6
 5561 0024 20000000 		.4byte	.LFE6
 5562 0028 00000000 		.4byte	.LFB7
 5563 002c 38000000 		.4byte	.LFE7
 5564 0030 00000000 		.4byte	.LFB8
 5565 0034 1C000000 		.4byte	.LFE8
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 159


 5566 0038 00000000 		.4byte	.LFB9
 5567 003c 30000000 		.4byte	.LFE9
 5568 0040 00000000 		.4byte	.LFB12
 5569 0044 20000000 		.4byte	.LFE12
 5570 0048 00000000 		.4byte	.LFB13
 5571 004c 10000000 		.4byte	.LFE13
 5572 0050 00000000 		.4byte	.LFB14
 5573 0054 0C000000 		.4byte	.LFE14
 5574 0058 00000000 		.4byte	.LFB15
 5575 005c 14000000 		.4byte	.LFE15
 5576 0060 00000000 		.4byte	.LFB16
 5577 0064 10000000 		.4byte	.LFE16
 5578 0068 00000000 		.4byte	.LFB17
 5579 006c 0C000000 		.4byte	.LFE17
 5580 0070 00000000 		.4byte	.LFB24
 5581 0074 14000000 		.4byte	.LFE24
 5582 0078 00000000 		.4byte	.LFB25
 5583 007c 18000000 		.4byte	.LFE25
 5584 0080 00000000 		.4byte	.LFB26
 5585 0084 14000000 		.4byte	.LFE26
 5586 0088 00000000 		.4byte	.LFB27
 5587 008c 14000000 		.4byte	.LFE27
 5588 0090 00000000 		.4byte	.LFB28
 5589 0094 14000000 		.4byte	.LFE28
 5590 0098 00000000 		.4byte	.LFB29
 5591 009c 04000000 		.4byte	.LFE29
 5592 00a0 00000000 		.4byte	.LFB18
 5593 00a4 20000000 		.4byte	.LFE18
 5594 00a8 00000000 		.4byte	.LFB19
 5595 00ac 1C000000 		.4byte	.LFE19
 5596 00b0 00000000 		.4byte	.LFB20
 5597 00b4 22000000 		.4byte	.LFE20
 5598 00b8 00000000 		.4byte	.LFB21
 5599 00bc 1E000000 		.4byte	.LFE21
 5600 00c0 00000000 		.4byte	.LFB22
 5601 00c4 4C000000 		.4byte	.LFE22
 5602 00c8 00000000 		.4byte	.LFB23
 5603 00cc 2C000000 		.4byte	.LFE23
 5604 00d0 00000000 		.4byte	.LFB30
 5605 00d4 18000000 		.4byte	.LFE30
 5606 00d8 00000000 		.4byte	.LFB31
 5607 00dc 30000000 		.4byte	.LFE31
 5608 00e0 00000000 		.4byte	.LFB3
 5609 00e4 F4000000 		.4byte	.LFE3
 5610 00e8 00000000 		.4byte	.LFB10
 5611 00ec 80000000 		.4byte	.LFE10
 5612 00f0 00000000 		.4byte	.LFB32
 5613 00f4 14000000 		.4byte	.LFE32
 5614 00f8 00000000 		.4byte	.LFB11
 5615 00fc 44000000 		.4byte	.LFE11
 5616 0100 00000000 		.4byte	.LFB33
 5617 0104 4C000000 		.4byte	.LFE33
 5618 0108 00000000 		.4byte	.LFB37
 5619 010c 10000000 		.4byte	.LFE37
 5620 0110 00000000 		.4byte	.LFB38
 5621 0114 10000000 		.4byte	.LFE38
 5622 0118 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 160


 5623 011c 18000000 		.4byte	.LFE36
 5624 0120 00000000 		.4byte	.LFB39
 5625 0124 10000000 		.4byte	.LFE39
 5626 0128 00000000 		.4byte	.LFB40
 5627 012c 10000000 		.4byte	.LFE40
 5628 0130 00000000 		.4byte	.LFB41
 5629 0134 10000000 		.4byte	.LFE41
 5630 0138 00000000 		.4byte	.LFB42
 5631 013c 10000000 		.4byte	.LFE42
 5632 0140 00000000 		.4byte	.LFB43
 5633 0144 20000000 		.4byte	.LFE43
 5634 0148 00000000 		.4byte	.LFB44
 5635 014c 10000000 		.4byte	.LFE44
 5636 0150 00000000 		.4byte	.LFB45
 5637 0154 10000000 		.4byte	.LFE45
 5638 0158 00000000 		.4byte	.LFB49
 5639 015c 28000000 		.4byte	.LFE49
 5640 0160 00000000 		.4byte	.LFB46
 5641 0164 0C000000 		.4byte	.LFE46
 5642 0168 00000000 		.4byte	.LFB35
 5643 016c 44000000 		.4byte	.LFE35
 5644 0170 00000000 		.4byte	.LFB34
 5645 0174 20000000 		.4byte	.LFE34
 5646 0178 00000000 		.4byte	.LFB47
 5647 017c 10000000 		.4byte	.LFE47
 5648 0180 00000000 		.4byte	.LFB48
 5649 0184 0C000000 		.4byte	.LFE48
 5650 0188 00000000 		.4byte	.LFB50
 5651 018c 70000000 		.4byte	.LFE50
 5652 0190 00000000 		.4byte	.LFB51
 5653 0194 20000000 		.4byte	.LFE51
 5654 0198 00000000 		.4byte	.LFB52
 5655 019c 20000000 		.4byte	.LFE52
 5656 01a0 00000000 		.4byte	.LFB53
 5657 01a4 20000000 		.4byte	.LFE53
 5658 01a8 00000000 		.4byte	.LFB54
 5659 01ac 68000000 		.4byte	.LFE54
 5660 01b0 00000000 		.4byte	0
 5661 01b4 00000000 		.4byte	0
 5662              		.section	.debug_line,"",%progbits
 5663              	.Ldebug_line0:
 5664 0000 5F050000 		.section	.debug_str,"MS",%progbits,1
 5664      02006700 
 5664      00000201 
 5664      FB0E0D00 
 5664      01010101 
 5665              	.LASF56:
 5666 0000 72616D56 		.ascii	"ramVectorTable\000"
 5666      6563746F 
 5666      72546162 
 5666      6C6500
 5667              	.LASF10:
 5668 000f 75696E74 		.ascii	"uint16\000"
 5668      313600
 5669              	.LASF43:
 5670 0016 696E7453 		.ascii	"intState\000"
 5670      74617465 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 161


 5670      00
 5671              	.LASF24:
 5672 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5672      73436C6B 
 5672      57726974 
 5672      65486663 
 5672      6C6B4469 
 5673              	.LASF114:
 5674 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 5674      73436C6B 
 5674      50756D70 
 5674      436F6E66 
 5674      696700
 5675              	.LASF27:
 5676 004b 43795379 		.ascii	"CySysEnablePumpClock\000"
 5676      73456E61 
 5676      626C6550 
 5676      756D7043 
 5676      6C6F636B 
 5677              	.LASF97:
 5678 0060 72657456 		.ascii	"retVal\000"
 5678      616C00
 5679              	.LASF42:
 5680 0067 43794469 		.ascii	"CyDisableInts\000"
 5680      7361626C 
 5680      65496E74 
 5680      7300
 5681              	.LASF120:
 5682 0075 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5682      43313120 
 5682      352E342E 
 5682      31203230 
 5682      31363036 
 5683 00a8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5683      20726576 
 5683      6973696F 
 5683      6E203233 
 5683      37373135 
 5684 00db 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5684      66756E63 
 5684      74696F6E 
 5684      2D736563 
 5684      74696F6E 
 5685              	.LASF7:
 5686 0103 6C6F6E67 		.ascii	"long long unsigned int\000"
 5686      206C6F6E 
 5686      6720756E 
 5686      7369676E 
 5686      65642069 
 5687              	.LASF122:
 5688 011a 443A5C50 		.ascii	"D:\\Programming\\PSoC\\Lab\\Lab1.cydsn\000"
 5688      726F6772 
 5688      616D6D69 
 5688      6E675C50 
 5688      536F435C 
 5689              	.LASF73:
 5690 013d 70617261 		.ascii	"parameters\000"
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 162


 5690      6D657465 
 5690      727300
 5691              	.LASF44:
 5692 0148 4379456E 		.ascii	"CyEnableInts\000"
 5692      61626C65 
 5692      496E7473 
 5692      00
 5693              	.LASF106:
 5694 0155 696E7465 		.ascii	"interfaceNumber\000"
 5694      72666163 
 5694      654E756D 
 5694      62657200 
 5695              	.LASF65:
 5696 0165 4379536F 		.ascii	"CySoftwareReset\000"
 5696      66747761 
 5696      72655265 
 5696      73657400 
 5697              	.LASF82:
 5698 0175 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5698      73546963 
 5698      6B456E61 
 5698      626C6549 
 5698      6E746572 
 5699              	.LASF48:
 5700 018e 4379496E 		.ascii	"CyIntGetState\000"
 5700      74476574 
 5700      53746174 
 5700      6500
 5701              	.LASF6:
 5702 019c 6C6F6E67 		.ascii	"long long int\000"
 5702      206C6F6E 
 5702      6720696E 
 5702      7400
 5703              	.LASF0:
 5704 01aa 7369676E 		.ascii	"signed char\000"
 5704      65642063 
 5704      68617200 
 5705              	.LASF21:
 5706 01b6 66726571 		.ascii	"freq\000"
 5706      00
 5707              	.LASF80:
 5708 01bb 43794465 		.ascii	"CyDelayFreq\000"
 5708      6C617946 
 5708      72657100 
 5709              	.LASF25:
 5710 01c7 696E7465 		.ascii	"interruptState\000"
 5710      72727570 
 5710      74537461 
 5710      746500
 5711              	.LASF70:
 5712 01d6 6C664C69 		.ascii	"lfLimit\000"
 5712      6D697400 
 5713              	.LASF86:
 5714 01de 43795379 		.ascii	"CySysTickGetReload\000"
 5714      73546963 
 5714      6B476574 
 5714      52656C6F 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 163


 5714      616400
 5715              	.LASF35:
 5716 01f1 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 5716      73436C6B 
 5716      496D6F47 
 5716      65745763 
 5716      6F4C6F63 
 5717              	.LASF75:
 5718 0207 77636F4C 		.ascii	"wcoLock\000"
 5718      6F636B00 
 5719              	.LASF4:
 5720 020f 6C6F6E67 		.ascii	"long int\000"
 5720      20696E74 
 5720      00
 5721              	.LASF49:
 5722 0218 4379496E 		.ascii	"CyIntDisable\000"
 5722      74446973 
 5722      61626C65 
 5722      00
 5723              	.LASF74:
 5724 0225 72656756 		.ascii	"regValues\000"
 5724      616C7565 
 5724      7300
 5725              	.LASF9:
 5726 022f 75696E74 		.ascii	"uint8\000"
 5726      3800
 5727              	.LASF109:
 5728 0235 63796465 		.ascii	"cydelayFreqKhz\000"
 5728      6C617946 
 5728      7265714B 
 5728      687A00
 5729              	.LASF29:
 5730 0244 656E6162 		.ascii	"enable\000"
 5730      6C6500
 5731              	.LASF13:
 5732 024b 646F7562 		.ascii	"double\000"
 5732      6C6500
 5733              	.LASF62:
 5734 0252 73686966 		.ascii	"shift\000"
 5734      7400
 5735              	.LASF37:
 5736 0258 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5736      734C7664 
 5736      436C6561 
 5736      72496E74 
 5736      65727275 
 5737              	.LASF11:
 5738 026f 75696E74 		.ascii	"uint32\000"
 5738      333200
 5739              	.LASF45:
 5740 0276 6D61736B 		.ascii	"mask\000"
 5740      00
 5741              	.LASF38:
 5742 027b 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5742      73436C6B 
 5742      47657453 
 5742      7973636C 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 164


 5742      6B536F75 
 5743              	.LASF68:
 5744 0293 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 5744      73436C6B 
 5744      496D6F45 
 5744      6E61626C 
 5744      6557636F 
 5745              	.LASF64:
 5746 02ac 4379496E 		.ascii	"CyIntGetPriority\000"
 5746      74476574 
 5746      5072696F 
 5746      72697479 
 5746      00
 5747              	.LASF111:
 5748 02bd 63796465 		.ascii	"cydelay32kMs\000"
 5748      6C617933 
 5748      326B4D73 
 5748      00
 5749              	.LASF93:
 5750 02ca 43795379 		.ascii	"CySysTickInit\000"
 5750      73546963 
 5750      6B496E69 
 5750      7400
 5751              	.LASF63:
 5752 02d8 76616C75 		.ascii	"value\000"
 5752      6500
 5753              	.LASF89:
 5754 02de 636C6F63 		.ascii	"clockSource\000"
 5754      6B536F75 
 5754      72636500 
 5755              	.LASF99:
 5756 02ea 43794765 		.ascii	"CyGetUniqueId\000"
 5756      74556E69 
 5756      71756549 
 5756      6400
 5757              	.LASF91:
 5758 02f8 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5758      73546963 
 5758      6B476574 
 5758      436F756E 
 5758      74466C61 
 5759              	.LASF8:
 5760 030e 756E7369 		.ascii	"unsigned int\000"
 5760      676E6564 
 5760      20696E74 
 5760      00
 5761              	.LASF92:
 5762 031b 43795379 		.ascii	"CySysTickClear\000"
 5762      73546963 
 5762      6B436C65 
 5762      617200
 5763              	.LASF5:
 5764 032a 6C6F6E67 		.ascii	"long unsigned int\000"
 5764      20756E73 
 5764      69676E65 
 5764      6420696E 
 5764      7400
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 165


 5765              	.LASF36:
 5766 033c 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5766      734C7664 
 5766      47657449 
 5766      6E746572 
 5766      72757074 
 5767              	.LASF23:
 5768 0357 43795379 		.ascii	"CySysClkImoStop\000"
 5768      73436C6B 
 5768      496D6F53 
 5768      746F7000 
 5769              	.LASF115:
 5770 0367 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5770      74657243 
 5770      72697469 
 5770      63616C53 
 5770      65637469 
 5771              	.LASF50:
 5772 037e 4379496E 		.ascii	"CyIntSetPending\000"
 5772      74536574 
 5772      50656E64 
 5772      696E6700 
 5773              	.LASF98:
 5774 038e 43795379 		.ascii	"CySysTickGetCallback\000"
 5774      73546963 
 5774      6B476574 
 5774      43616C6C 
 5774      6261636B 
 5775              	.LASF39:
 5776 03a3 43795379 		.ascii	"CySysGetResetReason\000"
 5776      73476574 
 5776      52657365 
 5776      74526561 
 5776      736F6E00 
 5777              	.LASF3:
 5778 03b7 73686F72 		.ascii	"short unsigned int\000"
 5778      7420756E 
 5778      7369676E 
 5778      65642069 
 5778      6E7400
 5779              	.LASF69:
 5780 03ca 72656754 		.ascii	"regTmp\000"
 5780      6D7000
 5781              	.LASF88:
 5782 03d1 43795379 		.ascii	"CySysTickSetClockSource\000"
 5782      73546963 
 5782      6B536574 
 5782      436C6F63 
 5782      6B536F75 
 5783              	.LASF58:
 5784 03e9 4379496E 		.ascii	"CyIntSetVector\000"
 5784      74536574 
 5784      56656374 
 5784      6F7200
 5785              	.LASF47:
 5786 03f8 6E756D62 		.ascii	"number\000"
 5786      657200
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 166


 5787              	.LASF61:
 5788 03ff 7072696F 		.ascii	"priority\000"
 5788      72697479 
 5788      00
 5789              	.LASF72:
 5790 0408 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5790      73436C6B 
 5790      57726974 
 5790      65496D6F 
 5790      46726571 
 5791              	.LASF103:
 5792 041d 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5792      73536574 
 5792      466C6173 
 5792      68416363 
 5792      65737341 
 5793              	.LASF53:
 5794 043c 4379496E 		.ascii	"CyIntSetSysVector\000"
 5794      74536574 
 5794      53797356 
 5794      6563746F 
 5794      7200
 5795              	.LASF22:
 5796 044e 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 5796      73436C6B 
 5796      496D6F44 
 5796      69736162 
 5796      6C655763 
 5797              	.LASF16:
 5798 0468 72656733 		.ascii	"reg32\000"
 5798      3200
 5799              	.LASF94:
 5800 046e 43795379 		.ascii	"CySysTickStart\000"
 5800      73546963 
 5800      6B537461 
 5800      727400
 5801              	.LASF41:
 5802 047d 72657475 		.ascii	"returnStatus\000"
 5802      726E5374 
 5802      61747573 
 5802      00
 5803              	.LASF102:
 5804 048a 736F7572 		.ascii	"source\000"
 5804      636500
 5805              	.LASF19:
 5806 0491 73697A65 		.ascii	"sizetype\000"
 5806      74797065 
 5806      00
 5807              	.LASF112:
 5808 049a 43795379 		.ascii	"CySysTickInitVar\000"
 5808      73546963 
 5808      6B496E69 
 5808      74566172 
 5808      00
 5809              	.LASF105:
 5810 04ab 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5810      73536574 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 167


 5810      50657269 
 5810      70686572 
 5810      616C4163 
 5811              	.LASF51:
 5812 04cf 4379496E 		.ascii	"CyIntClearPending\000"
 5812      74436C65 
 5812      61725065 
 5812      6E64696E 
 5812      6700
 5813              	.LASF18:
 5814 04e1 6C6F6E67 		.ascii	"long double\000"
 5814      20646F75 
 5814      626C6500 
 5815              	.LASF54:
 5816 04ed 61646472 		.ascii	"address\000"
 5816      65737300 
 5817              	.LASF30:
 5818 04f5 73797363 		.ascii	"sysclkSource\000"
 5818      6C6B536F 
 5818      75726365 
 5818      00
 5819              	.LASF96:
 5820 0502 66756E63 		.ascii	"function\000"
 5820      74696F6E 
 5820      00
 5821              	.LASF113:
 5822 050b 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5822      6F467265 
 5822      714D687A 
 5822      32526567 
 5822      00
 5823              	.LASF87:
 5824 051c 43795379 		.ascii	"CySysTickGetValue\000"
 5824      73546963 
 5824      6B476574 
 5824      56616C75 
 5824      6500
 5825              	.LASF108:
 5826 052e 63796465 		.ascii	"cydelayFreqHz\000"
 5826      6C617946 
 5826      72657148 
 5826      7A00
 5827              	.LASF60:
 5828 053c 4379496E 		.ascii	"CyIntSetPriority\000"
 5828      74536574 
 5828      5072696F 
 5828      72697479 
 5828      00
 5829              	.LASF12:
 5830 054d 666C6F61 		.ascii	"float\000"
 5830      7400
 5831              	.LASF116:
 5832 0553 43794578 		.ascii	"CyExitCriticalSection\000"
 5832      69744372 
 5832      69746963 
 5832      616C5365 
 5832      6374696F 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 168


 5833              	.LASF78:
 5834 0569 43795379 		.ascii	"CySysLvdEnable\000"
 5834      734C7664 
 5834      456E6162 
 5834      6C6500
 5835              	.LASF20:
 5836 0578 63795379 		.ascii	"cySysTickCallback\000"
 5836      73546963 
 5836      6B43616C 
 5836      6C626163 
 5836      6B00
 5837              	.LASF59:
 5838 058a 4379496E 		.ascii	"CyIntGetVector\000"
 5838      74476574 
 5838      56656374 
 5838      6F7200
 5839              	.LASF67:
 5840 0599 6D696C6C 		.ascii	"milliseconds\000"
 5840      69736563 
 5840      6F6E6473 
 5840      00
 5841              	.LASF117:
 5842 05a6 43794465 		.ascii	"CyDelayCycles\000"
 5842      6C617943 
 5842      79636C65 
 5842      7300
 5843              	.LASF15:
 5844 05b4 72656738 		.ascii	"reg8\000"
 5844      00
 5845              	.LASF79:
 5846 05b9 74687265 		.ascii	"threshold\000"
 5846      73686F6C 
 5846      6400
 5847              	.LASF52:
 5848 05c3 43794861 		.ascii	"CyHalt\000"
 5848      6C7400
 5849              	.LASF101:
 5850 05ca 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5850      73536574 
 5850      52616D41 
 5850      63636573 
 5850      73417262 
 5851              	.LASF1:
 5852 05e7 756E7369 		.ascii	"unsigned char\000"
 5852      676E6564 
 5852      20636861 
 5852      7200
 5853              	.LASF2:
 5854 05f5 73686F72 		.ascii	"short int\000"
 5854      7420696E 
 5854      7400
 5855              	.LASF46:
 5856 05ff 4379496E 		.ascii	"CyIntEnable\000"
 5856      74456E61 
 5856      626C6500 
 5857              	.LASF57:
 5858 060b 4379496E 		.ascii	"CyIntGetSysVector\000"
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 169


 5858      74476574 
 5858      53797356 
 5858      6563746F 
 5858      7200
 5859              	.LASF28:
 5860 061d 636C6B53 		.ascii	"clkSelect\000"
 5860      656C6563 
 5860      7400
 5861              	.LASF76:
 5862 0627 43794465 		.ascii	"CyDelayUs\000"
 5862      6C617955 
 5862      7300
 5863              	.LASF40:
 5864 0631 72656173 		.ascii	"reason\000"
 5864      6F6E00
 5865              	.LASF14:
 5866 0638 63686172 		.ascii	"char\000"
 5866      00
 5867              	.LASF17:
 5868 063d 63796973 		.ascii	"cyisraddress\000"
 5868      72616464 
 5868      72657373 
 5868      00
 5869              	.LASF83:
 5870 064a 43795379 		.ascii	"CySysTickEnable\000"
 5870      73546963 
 5870      6B456E61 
 5870      626C6500 
 5871              	.LASF31:
 5872 065a 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5872      73436C6B 
 5872      57726974 
 5872      65537973 
 5872      636C6B44 
 5873              	.LASF95:
 5874 0671 43795379 		.ascii	"CySysTickSetCallback\000"
 5874      73546963 
 5874      6B536574 
 5874      43616C6C 
 5874      6261636B 
 5875              	.LASF107:
 5876 0686 43795379 		.ascii	"CySysTickCallbacks\000"
 5876      73546963 
 5876      6B43616C 
 5876      6C626163 
 5876      6B7300
 5877              	.LASF100:
 5878 0699 756E6971 		.ascii	"uniqueId\000"
 5878      75654964 
 5878      00
 5879              	.LASF71:
 5880 06a2 666C6173 		.ascii	"flashCtlReg\000"
 5880      6843746C 
 5880      52656700 
 5881              	.LASF66:
 5882 06ae 43794465 		.ascii	"CyDelay\000"
 5882      6C617900 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 170


 5883              	.LASF90:
 5884 06b6 43795379 		.ascii	"CySysTickGetClockSource\000"
 5884      73546963 
 5884      6B476574 
 5884      436C6F63 
 5884      6B536F75 
 5885              	.LASF84:
 5886 06ce 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5886      73546963 
 5886      6B446973 
 5886      61626C65 
 5886      496E7465 
 5887              	.LASF34:
 5888 06e8 43795379 		.ascii	"CySysLvdDisable\000"
 5888      734C7664 
 5888      44697361 
 5888      626C6500 
 5889              	.LASF55:
 5890 06f8 6F6C6449 		.ascii	"oldIsr\000"
 5890      737200
 5891              	.LASF110:
 5892 06ff 63796465 		.ascii	"cydelayFreqMhz\000"
 5892      6C617946 
 5892      7265714D 
 5892      687A00
 5893              	.LASF118:
 5894 070e 43795379 		.ascii	"CySysClkWcoEnabled\000"
 5894      73436C6B 
 5894      57636F45 
 5894      6E61626C 
 5894      656400
 5895              	.LASF104:
 5896 0721 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5896      73536574 
 5896      446D6163 
 5896      41636365 
 5896      73734172 
 5897              	.LASF81:
 5898 073f 43795379 		.ascii	"CySysTickStop\000"
 5898      73546963 
 5898      6B53746F 
 5898      7000
 5899              	.LASF32:
 5900 074d 64697669 		.ascii	"divider\000"
 5900      64657200 
 5901              	.LASF33:
 5902 0755 43795379 		.ascii	"CySysClkImoStart\000"
 5902      73436C6B 
 5902      496D6F53 
 5902      74617274 
 5902      00
 5903              	.LASF119:
 5904 0766 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 5904      73466C61 
 5904      73685365 
 5904      74576169 
 5904      74437963 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccwOuKmg.s 			page 171


 5905              	.LASF121:
 5906 077e 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5906      72617465 
 5906      645F536F 
 5906      75726365 
 5906      5C50536F 
 5907              	.LASF77:
 5908 079d 6D696372 		.ascii	"microseconds\000"
 5908      6F736563 
 5908      6F6E6473 
 5908      00
 5909              	.LASF26:
 5910 07aa 746D7052 		.ascii	"tmpReg\000"
 5910      656700
 5911              	.LASF85:
 5912 07b1 43795379 		.ascii	"CySysTickSetReload\000"
 5912      73546963 
 5912      6B536574 
 5912      52656C6F 
 5912      616400
 5913              	.LASF123:
 5914 07c4 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5914      73546963 
 5914      6B536572 
 5914      76696365 
 5914      43616C6C 
 5915              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
